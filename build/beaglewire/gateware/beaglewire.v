//--------------------------------------------------------------------------------
// Auto-generated by Migen (3ffd64c) & LiteX (f9f1b8e) on 2021-07-29 20:33:49
//--------------------------------------------------------------------------------
module beaglewire(
	output reg serial_tx,
	input wire serial_rx,
	(* keep = "true" *)	input wire clk100,
	input wire user_btn_n,
	inout wire sdram_clock,
	output reg spiflash_cs_n,
	output reg spiflash_clk,
	output reg spiflash_mosi,
	input wire spiflash_miso,
	input wire [31:0] wb_adr,
	input wire [15:0] wb_dat_w,
	output wire [15:0] wb_dat_r,
	input wire [1:0] wb_sel,
	input wire wb_cyc,
	input wire wb_stb,
	output wire wb_ack,
	input wire wb_we,
	input wire [2:0] wb_cti,
	input wire [1:0] wb_bte,
	output wire wb_err,
	output reg [3:0] user_led0,
	inout wire [12:0] sdram_a,
	inout wire [7:0] sdram_dq,
	inout wire sdram_we_n,
	inout wire sdram_ras_n,
	inout wire sdram_cas_n,
	inout wire sdram_cs_n,
	inout wire sdram_cke,
	inout wire [1:0] sdram_ba,
	inout wire sdram_dm
);

reg basesoc_soc_rst = 1'd0;
wire basesoc_cpu_rst;
reg [1:0] basesoc_reset_storage = 2'd0;
reg basesoc_reset_re = 1'd0;
reg [31:0] basesoc_scratch_storage = 32'd305419896;
reg basesoc_scratch_re = 1'd0;
wire [31:0] basesoc_bus_errors_status;
wire basesoc_bus_errors_we;
reg basesoc_bus_errors_re = 1'd0;
wire basesoc_bus_error;
reg [31:0] basesoc_bus_errors = 32'd0;
wire basesoc_serv_reset;
wire [29:0] basesoc_serv_ibus_adr;
reg [31:0] basesoc_serv_ibus_dat_w = 32'd0;
wire [31:0] basesoc_serv_ibus_dat_r;
wire [3:0] basesoc_serv_ibus_sel;
wire basesoc_serv_ibus_cyc;
wire basesoc_serv_ibus_stb;
wire basesoc_serv_ibus_ack;
reg basesoc_serv_ibus_we = 1'd0;
reg [2:0] basesoc_serv_ibus_cti = 3'd0;
reg [1:0] basesoc_serv_ibus_bte = 2'd0;
wire basesoc_serv_ibus_err;
wire [29:0] basesoc_serv_dbus_adr;
wire [31:0] basesoc_serv_dbus_dat_w;
wire [31:0] basesoc_serv_dbus_dat_r;
wire [3:0] basesoc_serv_dbus_sel;
wire basesoc_serv_dbus_cyc;
wire basesoc_serv_dbus_stb;
wire basesoc_serv_dbus_ack;
wire basesoc_serv_dbus_we;
reg [2:0] basesoc_serv_dbus_cti = 3'd0;
reg [1:0] basesoc_serv_dbus_bte = 2'd0;
wire basesoc_serv_dbus_err;
wire [1:0] basesoc_serv0;
wire [1:0] basesoc_serv1;
wire [29:0] basesoc_ram_bus_adr;
wire [31:0] basesoc_ram_bus_dat_w;
wire [31:0] basesoc_ram_bus_dat_r;
wire [3:0] basesoc_ram_bus_sel;
wire basesoc_ram_bus_cyc;
wire basesoc_ram_bus_stb;
reg basesoc_ram_bus_ack = 1'd0;
wire basesoc_ram_bus_we;
wire [2:0] basesoc_ram_bus_cti;
wire [1:0] basesoc_ram_bus_bte;
reg basesoc_ram_bus_err = 1'd0;
wire [8:0] basesoc_adr;
wire [31:0] basesoc_dat_r;
reg [3:0] basesoc_we = 4'd0;
wire [31:0] basesoc_dat_w;
wire basesoc_tx_sink_valid;
reg basesoc_tx_sink_ready = 1'd0;
wire basesoc_tx_sink_first;
wire basesoc_tx_sink_last;
wire [7:0] basesoc_tx_sink_payload_data;
reg [7:0] basesoc_tx_data = 8'd0;
reg [3:0] basesoc_tx_count = 4'd0;
reg basesoc_tx_enable = 1'd0;
reg basesoc_tx_tick = 1'd0;
reg [31:0] basesoc_tx_phase = 32'd0;
reg basesoc_rx_source_valid = 1'd0;
wire basesoc_rx_source_ready;
reg basesoc_rx_source_first = 1'd0;
reg basesoc_rx_source_last = 1'd0;
reg [7:0] basesoc_rx_source_payload_data = 8'd0;
reg [7:0] basesoc_rx_data = 8'd0;
reg [3:0] basesoc_rx_count = 4'd0;
reg basesoc_rx_enable = 1'd0;
reg basesoc_rx_tick = 1'd0;
reg [31:0] basesoc_rx_phase = 32'd0;
wire basesoc_rx_rx;
reg basesoc_rx_rx_d = 1'd0;
reg basesoc_uart_rxtx_re = 1'd0;
wire [7:0] basesoc_uart_rxtx_r;
reg basesoc_uart_rxtx_we = 1'd0;
wire [7:0] basesoc_uart_rxtx_w;
wire basesoc_uart_txfull_status;
wire basesoc_uart_txfull_we;
reg basesoc_uart_txfull_re = 1'd0;
wire basesoc_uart_rxempty_status;
wire basesoc_uart_rxempty_we;
reg basesoc_uart_rxempty_re = 1'd0;
wire basesoc_uart_irq;
wire basesoc_uart_tx_status;
reg basesoc_uart_tx_pending = 1'd0;
wire basesoc_uart_tx_trigger;
reg basesoc_uart_tx_clear = 1'd0;
reg basesoc_uart_tx_trigger_d = 1'd0;
wire basesoc_uart_rx_status;
reg basesoc_uart_rx_pending = 1'd0;
wire basesoc_uart_rx_trigger;
reg basesoc_uart_rx_clear = 1'd0;
reg basesoc_uart_rx_trigger_d = 1'd0;
wire basesoc_uart_tx0;
wire basesoc_uart_rx0;
reg [1:0] basesoc_uart_status_status = 2'd0;
wire basesoc_uart_status_we;
reg basesoc_uart_status_re = 1'd0;
wire basesoc_uart_tx1;
wire basesoc_uart_rx1;
reg [1:0] basesoc_uart_pending_status = 2'd0;
wire basesoc_uart_pending_we;
reg basesoc_uart_pending_re = 1'd0;
reg [1:0] basesoc_uart_pending_r = 2'd0;
wire basesoc_uart_tx2;
wire basesoc_uart_rx2;
reg [1:0] basesoc_uart_enable_storage = 2'd0;
reg basesoc_uart_enable_re = 1'd0;
wire basesoc_uart_txempty_status;
wire basesoc_uart_txempty_we;
reg basesoc_uart_txempty_re = 1'd0;
wire basesoc_uart_rxfull_status;
wire basesoc_uart_rxfull_we;
reg basesoc_uart_rxfull_re = 1'd0;
wire basesoc_uart_uart_sink_valid;
wire basesoc_uart_uart_sink_ready;
wire basesoc_uart_uart_sink_first;
wire basesoc_uart_uart_sink_last;
wire [7:0] basesoc_uart_uart_sink_payload_data;
wire basesoc_uart_uart_source_valid;
wire basesoc_uart_uart_source_ready;
wire basesoc_uart_uart_source_first;
wire basesoc_uart_uart_source_last;
wire [7:0] basesoc_uart_uart_source_payload_data;
wire basesoc_uart_tx_fifo_sink_valid;
wire basesoc_uart_tx_fifo_sink_ready;
reg basesoc_uart_tx_fifo_sink_first = 1'd0;
reg basesoc_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_uart_tx_fifo_sink_payload_data;
wire basesoc_uart_tx_fifo_source_valid;
wire basesoc_uart_tx_fifo_source_ready;
wire basesoc_uart_tx_fifo_source_first;
wire basesoc_uart_tx_fifo_source_last;
wire [7:0] basesoc_uart_tx_fifo_source_payload_data;
wire basesoc_uart_tx_fifo_re;
reg basesoc_uart_tx_fifo_readable = 1'd0;
wire basesoc_uart_tx_fifo_syncfifo_we;
wire basesoc_uart_tx_fifo_syncfifo_writable;
wire basesoc_uart_tx_fifo_syncfifo_re;
wire basesoc_uart_tx_fifo_syncfifo_readable;
wire [9:0] basesoc_uart_tx_fifo_syncfifo_din;
wire [9:0] basesoc_uart_tx_fifo_syncfifo_dout;
reg [4:0] basesoc_uart_tx_fifo_level0 = 5'd0;
reg basesoc_uart_tx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart_tx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart_tx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart_tx_fifo_wrport_dat_r;
wire basesoc_uart_tx_fifo_wrport_we;
wire [9:0] basesoc_uart_tx_fifo_wrport_dat_w;
wire basesoc_uart_tx_fifo_do_read;
wire [3:0] basesoc_uart_tx_fifo_rdport_adr;
wire [9:0] basesoc_uart_tx_fifo_rdport_dat_r;
wire basesoc_uart_tx_fifo_rdport_re;
wire [4:0] basesoc_uart_tx_fifo_level1;
wire [7:0] basesoc_uart_tx_fifo_fifo_in_payload_data;
wire basesoc_uart_tx_fifo_fifo_in_first;
wire basesoc_uart_tx_fifo_fifo_in_last;
wire [7:0] basesoc_uart_tx_fifo_fifo_out_payload_data;
wire basesoc_uart_tx_fifo_fifo_out_first;
wire basesoc_uart_tx_fifo_fifo_out_last;
wire basesoc_uart_rx_fifo_sink_valid;
wire basesoc_uart_rx_fifo_sink_ready;
wire basesoc_uart_rx_fifo_sink_first;
wire basesoc_uart_rx_fifo_sink_last;
wire [7:0] basesoc_uart_rx_fifo_sink_payload_data;
wire basesoc_uart_rx_fifo_source_valid;
wire basesoc_uart_rx_fifo_source_ready;
wire basesoc_uart_rx_fifo_source_first;
wire basesoc_uart_rx_fifo_source_last;
wire [7:0] basesoc_uart_rx_fifo_source_payload_data;
wire basesoc_uart_rx_fifo_re;
reg basesoc_uart_rx_fifo_readable = 1'd0;
wire basesoc_uart_rx_fifo_syncfifo_we;
wire basesoc_uart_rx_fifo_syncfifo_writable;
wire basesoc_uart_rx_fifo_syncfifo_re;
wire basesoc_uart_rx_fifo_syncfifo_readable;
wire [9:0] basesoc_uart_rx_fifo_syncfifo_din;
wire [9:0] basesoc_uart_rx_fifo_syncfifo_dout;
reg [4:0] basesoc_uart_rx_fifo_level0 = 5'd0;
reg basesoc_uart_rx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart_rx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart_rx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart_rx_fifo_wrport_dat_r;
wire basesoc_uart_rx_fifo_wrport_we;
wire [9:0] basesoc_uart_rx_fifo_wrport_dat_w;
wire basesoc_uart_rx_fifo_do_read;
wire [3:0] basesoc_uart_rx_fifo_rdport_adr;
wire [9:0] basesoc_uart_rx_fifo_rdport_dat_r;
wire basesoc_uart_rx_fifo_rdport_re;
wire [4:0] basesoc_uart_rx_fifo_level1;
wire [7:0] basesoc_uart_rx_fifo_fifo_in_payload_data;
wire basesoc_uart_rx_fifo_fifo_in_first;
wire basesoc_uart_rx_fifo_fifo_in_last;
wire [7:0] basesoc_uart_rx_fifo_fifo_out_payload_data;
wire basesoc_uart_rx_fifo_fifo_out_first;
wire basesoc_uart_rx_fifo_fifo_out_last;
reg [31:0] basesoc_timer_load_storage = 32'd0;
reg basesoc_timer_load_re = 1'd0;
reg [31:0] basesoc_timer_reload_storage = 32'd0;
reg basesoc_timer_reload_re = 1'd0;
reg basesoc_timer_en_storage = 1'd0;
reg basesoc_timer_en_re = 1'd0;
reg basesoc_timer_update_value_storage = 1'd0;
reg basesoc_timer_update_value_re = 1'd0;
reg [31:0] basesoc_timer_value_status = 32'd0;
wire basesoc_timer_value_we;
reg basesoc_timer_value_re = 1'd0;
wire basesoc_timer_irq;
wire basesoc_timer_zero_status;
reg basesoc_timer_zero_pending = 1'd0;
wire basesoc_timer_zero_trigger;
reg basesoc_timer_zero_clear = 1'd0;
reg basesoc_timer_zero_trigger_d = 1'd0;
wire basesoc_timer_zero0;
wire basesoc_timer_status_status;
wire basesoc_timer_status_we;
reg basesoc_timer_status_re = 1'd0;
wire basesoc_timer_zero1;
wire basesoc_timer_pending_status;
wire basesoc_timer_pending_we;
reg basesoc_timer_pending_re = 1'd0;
reg basesoc_timer_pending_r = 1'd0;
wire basesoc_timer_zero2;
reg basesoc_timer_enable_storage = 1'd0;
reg basesoc_timer_enable_re = 1'd0;
reg [31:0] basesoc_timer_value = 32'd0;
wire rst;
(* keep = "true" *) wire sys_clk;
wire sys_rst;
wire por_clk;
reg [15:0] por_count = 16'd65535;
wire por_done;
wire reset;
wire locked;
wire clkin;
wire clkout;
wire [29:0] bus_adr;
wire [31:0] bus_dat_w;
wire [31:0] bus_dat_r;
wire [3:0] bus_sel;
wire bus_cyc;
wire bus_stb;
reg bus_ack = 1'd0;
wire bus_we;
wire [2:0] bus_cti;
wire [1:0] bus_bte;
reg bus_err = 1'd0;
wire mosi;
wire clk0;
wire cs_n0;
wire dir;
reg [3:0] bitbang_storage = 4'd0;
reg bitbang_re = 1'd0;
reg miso_status = 1'd0;
wire miso_we;
reg miso_re = 1'd0;
reg bitbang_en_storage = 1'd0;
reg bitbang_en_re = 1'd0;
reg cs_n1 = 1'd1;
reg clk1 = 1'd0;
reg [31:0] sr = 32'd0;
reg i = 1'd0;
reg miso = 1'd0;
reg [7:0] counter = 8'd0;
wire [31:0] wb_bus_adr;
wire [15:0] wb_bus_dat_w;
reg [15:0] wb_bus_dat_r = 16'd0;
wire [1:0] wb_bus_sel;
wire wb_bus_cyc;
wire wb_bus_stb;
wire wb_bus_ack;
wire wb_bus_we;
wire [2:0] wb_bus_cti;
wire [1:0] wb_bus_bte;
wire wb_bus_err;
reg [29:0] converted_interface_adr = 30'd0;
reg [31:0] converted_interface_dat_w = 32'd0;
wire [31:0] converted_interface_dat_r;
reg [3:0] converted_interface_sel = 4'd0;
wire converted_interface_cyc;
wire converted_interface_stb;
wire converted_interface_ack;
wire converted_interface_we;
wire [2:0] converted_interface_cti;
wire [1:0] converted_interface_bte;
wire converted_interface_err;
reg [3:0] storage = 4'd0;
reg re = 1'd0;
reg [3:0] chaser = 4'd0;
reg mode = 1'd0;
wire wait_1;
wire done;
reg [22:0] count = 23'd6250000;
wire [12:0] dfi_p0_address;
wire [1:0] dfi_p0_bank;
wire dfi_p0_cas_n;
wire dfi_p0_cs_n;
wire dfi_p0_ras_n;
wire dfi_p0_we_n;
wire dfi_p0_cke;
wire dfi_p0_odt;
wire dfi_p0_reset_n;
wire dfi_p0_act_n;
wire [7:0] dfi_p0_wrdata;
wire dfi_p0_wrdata_en;
wire dfi_p0_wrdata_mask;
wire dfi_p0_rddata_en;
wire [7:0] dfi_p0_rddata;
reg dfi_p0_rddata_valid = 1'd0;
reg [2:0] rddata_en = 3'd0;
wire [12:0] sdram_inti_p0_address;
wire [1:0] sdram_inti_p0_bank;
reg sdram_inti_p0_cas_n = 1'd1;
reg sdram_inti_p0_cs_n = 1'd1;
reg sdram_inti_p0_ras_n = 1'd1;
reg sdram_inti_p0_we_n = 1'd1;
wire sdram_inti_p0_cke;
wire sdram_inti_p0_odt;
wire sdram_inti_p0_reset_n;
reg sdram_inti_p0_act_n = 1'd1;
wire [7:0] sdram_inti_p0_wrdata;
wire sdram_inti_p0_wrdata_en;
wire sdram_inti_p0_wrdata_mask;
wire sdram_inti_p0_rddata_en;
reg [7:0] sdram_inti_p0_rddata = 8'd0;
reg sdram_inti_p0_rddata_valid = 1'd0;
wire [12:0] sdram_slave_p0_address;
wire [1:0] sdram_slave_p0_bank;
wire sdram_slave_p0_cas_n;
wire sdram_slave_p0_cs_n;
wire sdram_slave_p0_ras_n;
wire sdram_slave_p0_we_n;
wire sdram_slave_p0_cke;
wire sdram_slave_p0_odt;
wire sdram_slave_p0_reset_n;
wire sdram_slave_p0_act_n;
wire [7:0] sdram_slave_p0_wrdata;
wire sdram_slave_p0_wrdata_en;
wire sdram_slave_p0_wrdata_mask;
wire sdram_slave_p0_rddata_en;
reg [7:0] sdram_slave_p0_rddata = 8'd0;
reg sdram_slave_p0_rddata_valid = 1'd0;
reg [12:0] sdram_master_p0_address = 13'd0;
reg [1:0] sdram_master_p0_bank = 2'd0;
reg sdram_master_p0_cas_n = 1'd1;
reg sdram_master_p0_cs_n = 1'd1;
reg sdram_master_p0_ras_n = 1'd1;
reg sdram_master_p0_we_n = 1'd1;
reg sdram_master_p0_cke = 1'd0;
reg sdram_master_p0_odt = 1'd0;
reg sdram_master_p0_reset_n = 1'd0;
reg sdram_master_p0_act_n = 1'd1;
reg [7:0] sdram_master_p0_wrdata = 8'd0;
reg sdram_master_p0_wrdata_en = 1'd0;
reg sdram_master_p0_wrdata_mask = 1'd0;
reg sdram_master_p0_rddata_en = 1'd0;
wire [7:0] sdram_master_p0_rddata;
wire sdram_master_p0_rddata_valid;
wire sdram_sel;
wire sdram_cke1;
wire sdram_odt;
wire sdram_reset_n;
reg [3:0] sdram_storage = 4'd1;
reg sdram_re = 1'd0;
reg [5:0] sdram_command_storage = 6'd0;
reg sdram_command_re = 1'd0;
reg sdram_command_issue_re = 1'd0;
wire sdram_command_issue_r;
reg sdram_command_issue_we = 1'd0;
reg sdram_command_issue_w = 1'd0;
reg [12:0] sdram_address_storage = 13'd0;
reg sdram_address_re = 1'd0;
reg [1:0] sdram_baddress_storage = 2'd0;
reg sdram_baddress_re = 1'd0;
reg [7:0] sdram_wrdata_storage = 8'd0;
reg sdram_wrdata_re = 1'd0;
reg [7:0] sdram_rddata_status = 8'd0;
wire sdram_rddata_we;
reg sdram_rddata_re = 1'd0;
wire sdram_interface_bank0_valid;
wire sdram_interface_bank0_ready;
wire sdram_interface_bank0_we;
wire [22:0] sdram_interface_bank0_addr;
wire sdram_interface_bank0_lock;
wire sdram_interface_bank0_wdata_ready;
wire sdram_interface_bank0_rdata_valid;
wire sdram_interface_bank1_valid;
wire sdram_interface_bank1_ready;
wire sdram_interface_bank1_we;
wire [22:0] sdram_interface_bank1_addr;
wire sdram_interface_bank1_lock;
wire sdram_interface_bank1_wdata_ready;
wire sdram_interface_bank1_rdata_valid;
wire sdram_interface_bank2_valid;
wire sdram_interface_bank2_ready;
wire sdram_interface_bank2_we;
wire [22:0] sdram_interface_bank2_addr;
wire sdram_interface_bank2_lock;
wire sdram_interface_bank2_wdata_ready;
wire sdram_interface_bank2_rdata_valid;
wire sdram_interface_bank3_valid;
wire sdram_interface_bank3_ready;
wire sdram_interface_bank3_we;
wire [22:0] sdram_interface_bank3_addr;
wire sdram_interface_bank3_lock;
wire sdram_interface_bank3_wdata_ready;
wire sdram_interface_bank3_rdata_valid;
reg [7:0] sdram_interface_wdata = 8'd0;
reg sdram_interface_wdata_we = 1'd0;
wire [7:0] sdram_interface_rdata;
reg [12:0] sdram_dfi_p0_address = 13'd0;
reg [1:0] sdram_dfi_p0_bank = 2'd0;
reg sdram_dfi_p0_cas_n = 1'd1;
reg sdram_dfi_p0_cs_n = 1'd1;
reg sdram_dfi_p0_ras_n = 1'd1;
reg sdram_dfi_p0_we_n = 1'd1;
wire sdram_dfi_p0_cke;
wire sdram_dfi_p0_odt;
wire sdram_dfi_p0_reset_n;
reg sdram_dfi_p0_act_n = 1'd1;
wire [7:0] sdram_dfi_p0_wrdata;
reg sdram_dfi_p0_wrdata_en = 1'd0;
wire sdram_dfi_p0_wrdata_mask;
reg sdram_dfi_p0_rddata_en = 1'd0;
wire [7:0] sdram_dfi_p0_rddata;
wire sdram_dfi_p0_rddata_valid;
reg sdram_cmd_valid = 1'd0;
reg sdram_cmd_ready = 1'd0;
reg sdram_cmd_last = 1'd0;
reg [12:0] sdram_cmd_payload_a = 13'd0;
reg [1:0] sdram_cmd_payload_ba = 2'd0;
reg sdram_cmd_payload_cas = 1'd0;
reg sdram_cmd_payload_ras = 1'd0;
reg sdram_cmd_payload_we = 1'd0;
reg sdram_cmd_payload_is_read = 1'd0;
reg sdram_cmd_payload_is_write = 1'd0;
wire sdram_wants_refresh;
wire sdram_timer_wait;
wire sdram_timer_done0;
wire [8:0] sdram_timer_count0;
wire sdram_timer_done1;
reg [8:0] sdram_timer_count1 = 9'd390;
wire sdram_postponer_req_i;
reg sdram_postponer_req_o = 1'd0;
reg sdram_postponer_count = 1'd0;
reg sdram_sequencer_start0 = 1'd0;
wire sdram_sequencer_done0;
wire sdram_sequencer_start1;
reg sdram_sequencer_done1 = 1'd0;
reg [2:0] sdram_sequencer_counter = 3'd0;
reg sdram_sequencer_count = 1'd0;
wire sdram_bankmachine0_req_valid;
wire sdram_bankmachine0_req_ready;
wire sdram_bankmachine0_req_we;
wire [22:0] sdram_bankmachine0_req_addr;
wire sdram_bankmachine0_req_lock;
reg sdram_bankmachine0_req_wdata_ready = 1'd0;
reg sdram_bankmachine0_req_rdata_valid = 1'd0;
wire sdram_bankmachine0_refresh_req;
reg sdram_bankmachine0_refresh_gnt = 1'd0;
reg sdram_bankmachine0_cmd_valid = 1'd0;
reg sdram_bankmachine0_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine0_cmd_payload_a = 13'd0;
wire [1:0] sdram_bankmachine0_cmd_payload_ba;
reg sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg sdram_bankmachine0_cmd_payload_we = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine0_auto_precharge = 1'd0;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine0_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine0_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re;
wire sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
wire [25:0] sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
wire [25:0] sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
reg [3:0] sdram_bankmachine0_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine0_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine0_cmd_buffer_lookahead_wrport_we;
wire [25:0] sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine0_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr;
wire [25:0] sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine0_cmd_buffer_sink_valid;
wire sdram_bankmachine0_cmd_buffer_sink_ready;
wire sdram_bankmachine0_cmd_buffer_sink_first;
wire sdram_bankmachine0_cmd_buffer_sink_last;
wire sdram_bankmachine0_cmd_buffer_sink_payload_we;
wire [22:0] sdram_bankmachine0_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine0_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine0_cmd_buffer_source_ready;
reg sdram_bankmachine0_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine0_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine0_cmd_buffer_source_payload_we = 1'd0;
reg [22:0] sdram_bankmachine0_cmd_buffer_source_payload_addr = 23'd0;
reg [12:0] sdram_bankmachine0_row = 13'd0;
reg sdram_bankmachine0_row_opened = 1'd0;
wire sdram_bankmachine0_row_hit;
reg sdram_bankmachine0_row_open = 1'd0;
reg sdram_bankmachine0_row_close = 1'd0;
reg sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine0_twtpcon_valid;
reg sdram_bankmachine0_twtpcon_ready = 1'd0;
reg [1:0] sdram_bankmachine0_twtpcon_count = 2'd0;
wire sdram_bankmachine0_trccon_valid;
reg sdram_bankmachine0_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine0_trccon_count = 2'd0;
wire sdram_bankmachine0_trascon_valid;
reg sdram_bankmachine0_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine0_trascon_count = 2'd0;
wire sdram_bankmachine1_req_valid;
wire sdram_bankmachine1_req_ready;
wire sdram_bankmachine1_req_we;
wire [22:0] sdram_bankmachine1_req_addr;
wire sdram_bankmachine1_req_lock;
reg sdram_bankmachine1_req_wdata_ready = 1'd0;
reg sdram_bankmachine1_req_rdata_valid = 1'd0;
wire sdram_bankmachine1_refresh_req;
reg sdram_bankmachine1_refresh_gnt = 1'd0;
reg sdram_bankmachine1_cmd_valid = 1'd0;
reg sdram_bankmachine1_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine1_cmd_payload_a = 13'd0;
wire [1:0] sdram_bankmachine1_cmd_payload_ba;
reg sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg sdram_bankmachine1_cmd_payload_we = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine1_auto_precharge = 1'd0;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine1_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine1_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re;
wire sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
wire [25:0] sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
wire [25:0] sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
reg [3:0] sdram_bankmachine1_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine1_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine1_cmd_buffer_lookahead_wrport_we;
wire [25:0] sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine1_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr;
wire [25:0] sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine1_cmd_buffer_sink_valid;
wire sdram_bankmachine1_cmd_buffer_sink_ready;
wire sdram_bankmachine1_cmd_buffer_sink_first;
wire sdram_bankmachine1_cmd_buffer_sink_last;
wire sdram_bankmachine1_cmd_buffer_sink_payload_we;
wire [22:0] sdram_bankmachine1_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine1_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine1_cmd_buffer_source_ready;
reg sdram_bankmachine1_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine1_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine1_cmd_buffer_source_payload_we = 1'd0;
reg [22:0] sdram_bankmachine1_cmd_buffer_source_payload_addr = 23'd0;
reg [12:0] sdram_bankmachine1_row = 13'd0;
reg sdram_bankmachine1_row_opened = 1'd0;
wire sdram_bankmachine1_row_hit;
reg sdram_bankmachine1_row_open = 1'd0;
reg sdram_bankmachine1_row_close = 1'd0;
reg sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine1_twtpcon_valid;
reg sdram_bankmachine1_twtpcon_ready = 1'd0;
reg [1:0] sdram_bankmachine1_twtpcon_count = 2'd0;
wire sdram_bankmachine1_trccon_valid;
reg sdram_bankmachine1_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine1_trccon_count = 2'd0;
wire sdram_bankmachine1_trascon_valid;
reg sdram_bankmachine1_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine1_trascon_count = 2'd0;
wire sdram_bankmachine2_req_valid;
wire sdram_bankmachine2_req_ready;
wire sdram_bankmachine2_req_we;
wire [22:0] sdram_bankmachine2_req_addr;
wire sdram_bankmachine2_req_lock;
reg sdram_bankmachine2_req_wdata_ready = 1'd0;
reg sdram_bankmachine2_req_rdata_valid = 1'd0;
wire sdram_bankmachine2_refresh_req;
reg sdram_bankmachine2_refresh_gnt = 1'd0;
reg sdram_bankmachine2_cmd_valid = 1'd0;
reg sdram_bankmachine2_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine2_cmd_payload_a = 13'd0;
wire [1:0] sdram_bankmachine2_cmd_payload_ba;
reg sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg sdram_bankmachine2_cmd_payload_we = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine2_auto_precharge = 1'd0;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine2_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine2_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re;
wire sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
wire [25:0] sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
wire [25:0] sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
reg [3:0] sdram_bankmachine2_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine2_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine2_cmd_buffer_lookahead_wrport_we;
wire [25:0] sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine2_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr;
wire [25:0] sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine2_cmd_buffer_sink_valid;
wire sdram_bankmachine2_cmd_buffer_sink_ready;
wire sdram_bankmachine2_cmd_buffer_sink_first;
wire sdram_bankmachine2_cmd_buffer_sink_last;
wire sdram_bankmachine2_cmd_buffer_sink_payload_we;
wire [22:0] sdram_bankmachine2_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine2_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine2_cmd_buffer_source_ready;
reg sdram_bankmachine2_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine2_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine2_cmd_buffer_source_payload_we = 1'd0;
reg [22:0] sdram_bankmachine2_cmd_buffer_source_payload_addr = 23'd0;
reg [12:0] sdram_bankmachine2_row = 13'd0;
reg sdram_bankmachine2_row_opened = 1'd0;
wire sdram_bankmachine2_row_hit;
reg sdram_bankmachine2_row_open = 1'd0;
reg sdram_bankmachine2_row_close = 1'd0;
reg sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine2_twtpcon_valid;
reg sdram_bankmachine2_twtpcon_ready = 1'd0;
reg [1:0] sdram_bankmachine2_twtpcon_count = 2'd0;
wire sdram_bankmachine2_trccon_valid;
reg sdram_bankmachine2_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine2_trccon_count = 2'd0;
wire sdram_bankmachine2_trascon_valid;
reg sdram_bankmachine2_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine2_trascon_count = 2'd0;
wire sdram_bankmachine3_req_valid;
wire sdram_bankmachine3_req_ready;
wire sdram_bankmachine3_req_we;
wire [22:0] sdram_bankmachine3_req_addr;
wire sdram_bankmachine3_req_lock;
reg sdram_bankmachine3_req_wdata_ready = 1'd0;
reg sdram_bankmachine3_req_rdata_valid = 1'd0;
wire sdram_bankmachine3_refresh_req;
reg sdram_bankmachine3_refresh_gnt = 1'd0;
reg sdram_bankmachine3_cmd_valid = 1'd0;
reg sdram_bankmachine3_cmd_ready = 1'd0;
reg [12:0] sdram_bankmachine3_cmd_payload_a = 13'd0;
wire [1:0] sdram_bankmachine3_cmd_payload_ba;
reg sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg sdram_bankmachine3_cmd_payload_we = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg sdram_bankmachine3_auto_precharge = 1'd0;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
reg sdram_bankmachine3_cmd_buffer_lookahead_sink_first = 1'd0;
reg sdram_bankmachine3_cmd_buffer_lookahead_sink_last = 1'd0;
wire sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_last;
wire sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re;
wire sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
wire [25:0] sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
wire [25:0] sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
reg [3:0] sdram_bankmachine3_cmd_buffer_lookahead_level = 4'd0;
reg sdram_bankmachine3_cmd_buffer_lookahead_replace = 1'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_produce = 3'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_consume = 3'd0;
reg [2:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r;
wire sdram_bankmachine3_cmd_buffer_lookahead_wrport_we;
wire [25:0] sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
wire sdram_bankmachine3_cmd_buffer_lookahead_do_read;
wire [2:0] sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr;
wire [25:0] sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
wire sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
wire sdram_bankmachine3_cmd_buffer_sink_valid;
wire sdram_bankmachine3_cmd_buffer_sink_ready;
wire sdram_bankmachine3_cmd_buffer_sink_first;
wire sdram_bankmachine3_cmd_buffer_sink_last;
wire sdram_bankmachine3_cmd_buffer_sink_payload_we;
wire [22:0] sdram_bankmachine3_cmd_buffer_sink_payload_addr;
reg sdram_bankmachine3_cmd_buffer_source_valid = 1'd0;
wire sdram_bankmachine3_cmd_buffer_source_ready;
reg sdram_bankmachine3_cmd_buffer_source_first = 1'd0;
reg sdram_bankmachine3_cmd_buffer_source_last = 1'd0;
reg sdram_bankmachine3_cmd_buffer_source_payload_we = 1'd0;
reg [22:0] sdram_bankmachine3_cmd_buffer_source_payload_addr = 23'd0;
reg [12:0] sdram_bankmachine3_row = 13'd0;
reg sdram_bankmachine3_row_opened = 1'd0;
wire sdram_bankmachine3_row_hit;
reg sdram_bankmachine3_row_open = 1'd0;
reg sdram_bankmachine3_row_close = 1'd0;
reg sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire sdram_bankmachine3_twtpcon_valid;
reg sdram_bankmachine3_twtpcon_ready = 1'd0;
reg [1:0] sdram_bankmachine3_twtpcon_count = 2'd0;
wire sdram_bankmachine3_trccon_valid;
reg sdram_bankmachine3_trccon_ready = 1'd0;
reg [1:0] sdram_bankmachine3_trccon_count = 2'd0;
wire sdram_bankmachine3_trascon_valid;
reg sdram_bankmachine3_trascon_ready = 1'd0;
reg [1:0] sdram_bankmachine3_trascon_count = 2'd0;
wire sdram_ras_allowed;
wire sdram_cas_allowed;
reg sdram_choose_cmd_want_reads = 1'd0;
reg sdram_choose_cmd_want_writes = 1'd0;
reg sdram_choose_cmd_want_cmds = 1'd0;
reg sdram_choose_cmd_want_activates = 1'd0;
wire sdram_choose_cmd_cmd_valid;
reg sdram_choose_cmd_cmd_ready = 1'd0;
wire [12:0] sdram_choose_cmd_cmd_payload_a;
wire [1:0] sdram_choose_cmd_cmd_payload_ba;
reg sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg sdram_choose_cmd_cmd_payload_we = 1'd0;
wire sdram_choose_cmd_cmd_payload_is_cmd;
wire sdram_choose_cmd_cmd_payload_is_read;
wire sdram_choose_cmd_cmd_payload_is_write;
reg [3:0] sdram_choose_cmd_valids = 4'd0;
wire [3:0] sdram_choose_cmd_request;
reg [1:0] sdram_choose_cmd_grant = 2'd0;
wire sdram_choose_cmd_ce;
reg sdram_choose_req_want_reads = 1'd0;
reg sdram_choose_req_want_writes = 1'd0;
wire sdram_choose_req_want_cmds;
reg sdram_choose_req_want_activates = 1'd0;
wire sdram_choose_req_cmd_valid;
reg sdram_choose_req_cmd_ready = 1'd0;
wire [12:0] sdram_choose_req_cmd_payload_a;
wire [1:0] sdram_choose_req_cmd_payload_ba;
reg sdram_choose_req_cmd_payload_cas = 1'd0;
reg sdram_choose_req_cmd_payload_ras = 1'd0;
reg sdram_choose_req_cmd_payload_we = 1'd0;
wire sdram_choose_req_cmd_payload_is_cmd;
wire sdram_choose_req_cmd_payload_is_read;
wire sdram_choose_req_cmd_payload_is_write;
reg [3:0] sdram_choose_req_valids = 4'd0;
wire [3:0] sdram_choose_req_request;
reg [1:0] sdram_choose_req_grant = 2'd0;
wire sdram_choose_req_ce;
reg [12:0] sdram_nop_a = 13'd0;
reg [1:0] sdram_nop_ba = 2'd0;
reg [1:0] sdram_steerer_sel = 2'd0;
reg sdram_steerer0 = 1'd1;
reg sdram_steerer1 = 1'd1;
wire sdram_trrdcon_valid;
reg sdram_trrdcon_ready = 1'd0;
reg sdram_trrdcon_count = 1'd0;
wire sdram_tfawcon_valid;
reg sdram_tfawcon_ready = 1'd1;
wire sdram_tccdcon_valid;
reg sdram_tccdcon_ready = 1'd0;
reg sdram_tccdcon_count = 1'd0;
wire sdram_twtrcon_valid;
reg sdram_twtrcon_ready = 1'd0;
reg [2:0] sdram_twtrcon_count = 3'd0;
wire sdram_read_available;
wire sdram_write_available;
reg sdram_en0 = 1'd0;
wire sdram_max_time0;
reg [4:0] sdram_time0 = 5'd0;
reg sdram_en1 = 1'd0;
wire sdram_max_time1;
reg [3:0] sdram_time1 = 4'd0;
wire sdram_go_to_refresh;
reg port_cmd_valid = 1'd0;
wire port_cmd_ready;
reg port_cmd_payload_we = 1'd0;
reg [24:0] port_cmd_payload_addr = 25'd0;
wire port_wdata_valid;
wire port_wdata_ready;
wire port_wdata_first;
wire port_wdata_last;
wire [7:0] port_wdata_payload_data;
wire port_wdata_payload_we;
wire port_rdata_valid;
wire port_rdata_ready;
reg port_rdata_first = 1'd0;
reg port_rdata_last = 1'd0;
wire [7:0] port_rdata_payload_data;
wire [29:0] wb_sdram_adr;
wire [31:0] wb_sdram_dat_w;
reg [31:0] wb_sdram_dat_r = 32'd0;
wire [3:0] wb_sdram_sel;
wire wb_sdram_cyc;
wire wb_sdram_stb;
reg wb_sdram_ack = 1'd0;
wire wb_sdram_we;
wire [2:0] wb_sdram_cti;
wire [1:0] wb_sdram_bte;
reg wb_sdram_err = 1'd0;
wire [29:0] interface_adr;
wire [127:0] interface_dat_w;
reg [127:0] interface_dat_r = 128'd0;
wire [15:0] interface_sel;
reg interface_cyc = 1'd0;
reg interface_stb = 1'd0;
reg interface_ack = 1'd0;
reg interface_we = 1'd0;
wire [5:0] data_port_adr;
wire [127:0] data_port_dat_r;
reg [15:0] data_port_we = 16'd0;
reg [127:0] data_port_dat_w = 128'd0;
reg write_from_slave = 1'd0;
reg [1:0] adr_offset_r = 2'd0;
wire [5:0] tag_port_adr;
wire [26:0] tag_port_dat_r;
reg tag_port_we = 1'd0;
wire [26:0] tag_port_dat_w;
wire [25:0] tag_do_tag;
wire tag_do_dirty;
wire [25:0] tag_di_tag;
reg tag_di_dirty = 1'd0;
reg word_clr = 1'd0;
reg word_inc = 1'd0;
wire wishbone_bridge_flush;
reg wishbone_bridge_cmd_valid = 1'd0;
reg wishbone_bridge_cmd_ready = 1'd0;
wire wishbone_bridge_cmd_last;
wire wishbone_bridge_cmd_payload_we;
wire [20:0] wishbone_bridge_cmd_payload_addr;
reg wishbone_bridge_wdata_valid = 1'd0;
wire wishbone_bridge_wdata_ready;
reg wishbone_bridge_wdata_first = 1'd0;
reg wishbone_bridge_wdata_last = 1'd0;
wire [127:0] wishbone_bridge_wdata_payload_data;
wire [15:0] wishbone_bridge_wdata_payload_we;
wire wishbone_bridge_rdata_valid;
wire wishbone_bridge_rdata_ready;
wire wishbone_bridge_rdata_first;
wire wishbone_bridge_rdata_last;
wire [127:0] wishbone_bridge_rdata_payload_data;
reg [3:0] wishbone_bridge_count = 4'd0;
wire wishbone_bridge_wdata_converter_sink_valid;
wire wishbone_bridge_wdata_converter_sink_ready;
wire wishbone_bridge_wdata_converter_sink_first;
wire wishbone_bridge_wdata_converter_sink_last;
wire [127:0] wishbone_bridge_wdata_converter_sink_payload_data;
wire [15:0] wishbone_bridge_wdata_converter_sink_payload_we;
wire wishbone_bridge_wdata_converter_source_valid;
wire wishbone_bridge_wdata_converter_source_ready;
wire wishbone_bridge_wdata_converter_source_first;
wire wishbone_bridge_wdata_converter_source_last;
wire [7:0] wishbone_bridge_wdata_converter_source_payload_data;
wire wishbone_bridge_wdata_converter_source_payload_we;
wire wishbone_bridge_wdata_converter_converter_sink_valid;
wire wishbone_bridge_wdata_converter_converter_sink_ready;
wire wishbone_bridge_wdata_converter_converter_sink_first;
wire wishbone_bridge_wdata_converter_converter_sink_last;
reg [143:0] wishbone_bridge_wdata_converter_converter_sink_payload_data = 144'd0;
wire wishbone_bridge_wdata_converter_converter_source_valid;
wire wishbone_bridge_wdata_converter_converter_source_ready;
wire wishbone_bridge_wdata_converter_converter_source_first;
wire wishbone_bridge_wdata_converter_converter_source_last;
reg [8:0] wishbone_bridge_wdata_converter_converter_source_payload_data = 9'd0;
wire wishbone_bridge_wdata_converter_converter_source_payload_valid_token_count;
reg [3:0] wishbone_bridge_wdata_converter_converter_mux = 4'd0;
wire wishbone_bridge_wdata_converter_converter_first;
wire wishbone_bridge_wdata_converter_converter_last;
wire wishbone_bridge_wdata_converter_source_source_valid;
wire wishbone_bridge_wdata_converter_source_source_ready;
wire wishbone_bridge_wdata_converter_source_source_first;
wire wishbone_bridge_wdata_converter_source_source_last;
wire [8:0] wishbone_bridge_wdata_converter_source_source_payload_data;
wire wishbone_bridge_rdata_converter_sink_valid;
wire wishbone_bridge_rdata_converter_sink_ready;
wire wishbone_bridge_rdata_converter_sink_first;
wire wishbone_bridge_rdata_converter_sink_last;
wire [7:0] wishbone_bridge_rdata_converter_sink_payload_data;
wire wishbone_bridge_rdata_converter_source_valid;
wire wishbone_bridge_rdata_converter_source_ready;
wire wishbone_bridge_rdata_converter_source_first;
wire wishbone_bridge_rdata_converter_source_last;
reg [127:0] wishbone_bridge_rdata_converter_source_payload_data = 128'd0;
wire wishbone_bridge_rdata_converter_converter_sink_valid;
wire wishbone_bridge_rdata_converter_converter_sink_ready;
wire wishbone_bridge_rdata_converter_converter_sink_first;
wire wishbone_bridge_rdata_converter_converter_sink_last;
wire [7:0] wishbone_bridge_rdata_converter_converter_sink_payload_data;
wire wishbone_bridge_rdata_converter_converter_source_valid;
wire wishbone_bridge_rdata_converter_converter_source_ready;
reg wishbone_bridge_rdata_converter_converter_source_first = 1'd0;
reg wishbone_bridge_rdata_converter_converter_source_last = 1'd0;
reg [127:0] wishbone_bridge_rdata_converter_converter_source_payload_data = 128'd0;
reg [4:0] wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count = 5'd0;
reg [3:0] wishbone_bridge_rdata_converter_converter_demux = 4'd0;
wire wishbone_bridge_rdata_converter_converter_load_part;
reg wishbone_bridge_rdata_converter_converter_strobe_all = 1'd0;
wire wishbone_bridge_rdata_converter_source_source_valid;
wire wishbone_bridge_rdata_converter_source_source_ready;
wire wishbone_bridge_rdata_converter_source_source_first;
wire wishbone_bridge_rdata_converter_source_source_last;
wire [127:0] wishbone_bridge_rdata_converter_source_source_payload_data;
reg wishbone_bridge_aborted = 1'd0;
reg wishbone_bridge_is_ongoing = 1'd0;
reg subfragments_rs232phytx_state = 1'd0;
reg subfragments_rs232phytx_next_state = 1'd0;
reg [3:0] basesoc_tx_count_rs232phytx_next_value0 = 4'd0;
reg basesoc_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg basesoc_serial_tx_rs232phytx_next_value1 = 1'd0;
reg basesoc_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg [7:0] basesoc_tx_data_rs232phytx_next_value2 = 8'd0;
reg basesoc_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg subfragments_rs232phyrx_state = 1'd0;
reg subfragments_rs232phyrx_next_state = 1'd0;
reg [3:0] basesoc_rx_count_rs232phyrx_next_value0 = 4'd0;
reg basesoc_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg [7:0] basesoc_rx_data_rs232phyrx_next_value1 = 8'd0;
reg basesoc_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg [1:0] subfragments_refresher_state = 2'd0;
reg [1:0] subfragments_refresher_next_state = 2'd0;
reg [2:0] subfragments_bankmachine0_state = 3'd0;
reg [2:0] subfragments_bankmachine0_next_state = 3'd0;
reg [2:0] subfragments_bankmachine1_state = 3'd0;
reg [2:0] subfragments_bankmachine1_next_state = 3'd0;
reg [2:0] subfragments_bankmachine2_state = 3'd0;
reg [2:0] subfragments_bankmachine2_next_state = 3'd0;
reg [2:0] subfragments_bankmachine3_state = 3'd0;
reg [2:0] subfragments_bankmachine3_next_state = 3'd0;
reg [2:0] subfragments_multiplexer_state = 3'd0;
reg [2:0] subfragments_multiplexer_next_state = 3'd0;
wire subfragments_roundrobin0_request;
wire subfragments_roundrobin0_grant;
wire subfragments_roundrobin0_ce;
wire subfragments_roundrobin1_request;
wire subfragments_roundrobin1_grant;
wire subfragments_roundrobin1_ce;
wire subfragments_roundrobin2_request;
wire subfragments_roundrobin2_grant;
wire subfragments_roundrobin2_ce;
wire subfragments_roundrobin3_request;
wire subfragments_roundrobin3_grant;
wire subfragments_roundrobin3_ce;
reg subfragments_locked0 = 1'd0;
reg subfragments_locked1 = 1'd0;
reg subfragments_locked2 = 1'd0;
reg subfragments_locked3 = 1'd0;
reg subfragments_new_master_wdata_ready = 1'd0;
reg subfragments_new_master_rdata_valid0 = 1'd0;
reg subfragments_new_master_rdata_valid1 = 1'd0;
reg subfragments_new_master_rdata_valid2 = 1'd0;
reg subfragments_new_master_rdata_valid3 = 1'd0;
reg [1:0] subfragments_state = 2'd0;
reg [1:0] subfragments_next_state = 2'd0;
reg subfragments_litedramnativeportconverter_state = 1'd0;
reg subfragments_litedramnativeportconverter_next_state = 1'd0;
reg [3:0] wishbone_bridge_count_litedramnativeportconverter_next_value = 4'd0;
reg wishbone_bridge_count_litedramnativeportconverter_next_value_ce = 1'd0;
reg [1:0] subfragments_fsm_state = 2'd0;
reg [1:0] subfragments_fsm_next_state = 2'd0;
reg wishbone_bridge_aborted_fsm_next_value = 1'd0;
reg wishbone_bridge_aborted_fsm_next_value_ce = 1'd0;
reg [13:0] basesoc_basesoc_adr = 14'd0;
reg basesoc_basesoc_we = 1'd0;
reg [31:0] basesoc_basesoc_dat_w = 32'd0;
wire [31:0] basesoc_basesoc_dat_r;
wire [29:0] basesoc_basesoc_wishbone_adr;
wire [31:0] basesoc_basesoc_wishbone_dat_w;
reg [31:0] basesoc_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] basesoc_basesoc_wishbone_sel;
wire basesoc_basesoc_wishbone_cyc;
wire basesoc_basesoc_wishbone_stb;
reg basesoc_basesoc_wishbone_ack = 1'd0;
wire basesoc_basesoc_wishbone_we;
wire [2:0] basesoc_basesoc_wishbone_cti;
wire [1:0] basesoc_basesoc_wishbone_bte;
reg basesoc_basesoc_wishbone_err = 1'd0;
wire [29:0] basesoc_shared_adr;
wire [31:0] basesoc_shared_dat_w;
reg [31:0] basesoc_shared_dat_r = 32'd0;
wire [3:0] basesoc_shared_sel;
wire basesoc_shared_cyc;
wire basesoc_shared_stb;
reg basesoc_shared_ack = 1'd0;
wire basesoc_shared_we;
wire [2:0] basesoc_shared_cti;
wire [1:0] basesoc_shared_bte;
wire basesoc_shared_err;
wire [2:0] basesoc_request;
reg [1:0] basesoc_grant = 2'd0;
reg [3:0] basesoc_slave_sel = 4'd0;
reg [3:0] basesoc_slave_sel_r = 4'd0;
reg basesoc_error = 1'd0;
wire basesoc_wait;
wire basesoc_done;
reg [19:0] basesoc_count = 20'd1000000;
wire [13:0] basesoc_csr_bankarray_interface0_bank_bus_adr;
wire basesoc_csr_bankarray_interface0_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface0_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank0_reset0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank0_reset0_r;
reg basesoc_csr_bankarray_csrbank0_reset0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank0_reset0_w;
reg basesoc_csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_scratch0_r;
reg basesoc_csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_scratch0_w;
reg basesoc_csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_bus_errors_r;
reg basesoc_csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_bus_errors_w;
wire basesoc_csr_bankarray_csrbank0_sel;
wire [13:0] basesoc_csr_bankarray_sram_bus_adr;
wire basesoc_csr_bankarray_sram_bus_we;
wire [31:0] basesoc_csr_bankarray_sram_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] basesoc_csr_bankarray_adr;
wire [7:0] basesoc_csr_bankarray_dat_r;
wire basesoc_csr_bankarray_sel;
reg basesoc_csr_bankarray_sel_r = 1'd0;
wire [13:0] basesoc_csr_bankarray_interface1_bank_bus_adr;
wire basesoc_csr_bankarray_interface1_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface1_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank1_out0_re = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank1_out0_r;
reg basesoc_csr_bankarray_csrbank1_out0_we = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank1_out0_w;
wire basesoc_csr_bankarray_csrbank1_sel;
wire [13:0] basesoc_csr_bankarray_interface2_bank_bus_adr;
wire basesoc_csr_bankarray_interface2_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface2_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank2_dfii_control0_re = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank2_dfii_control0_r;
reg basesoc_csr_bankarray_csrbank2_dfii_control0_we = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank2_dfii_control0_w;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_re = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_r;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_we = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_w;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_re = 1'd0;
wire [12:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_r;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_we = 1'd0;
wire [12:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_w;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_re = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_r;
reg basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_we = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_w;
wire basesoc_csr_bankarray_csrbank2_sel;
wire [13:0] basesoc_csr_bankarray_interface3_bank_bus_adr;
wire basesoc_csr_bankarray_interface3_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface3_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank3_bitbang0_re = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank3_bitbang0_r;
reg basesoc_csr_bankarray_csrbank3_bitbang0_we = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank3_bitbang0_w;
reg basesoc_csr_bankarray_csrbank3_miso_re = 1'd0;
wire basesoc_csr_bankarray_csrbank3_miso_r;
reg basesoc_csr_bankarray_csrbank3_miso_we = 1'd0;
wire basesoc_csr_bankarray_csrbank3_miso_w;
reg basesoc_csr_bankarray_csrbank3_bitbang_en0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank3_bitbang_en0_r;
reg basesoc_csr_bankarray_csrbank3_bitbang_en0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank3_bitbang_en0_w;
wire basesoc_csr_bankarray_csrbank3_sel;
wire [13:0] basesoc_csr_bankarray_interface4_bank_bus_adr;
wire basesoc_csr_bankarray_interface4_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface4_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank4_load0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_load0_r;
reg basesoc_csr_bankarray_csrbank4_load0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_load0_w;
reg basesoc_csr_bankarray_csrbank4_reload0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_reload0_r;
reg basesoc_csr_bankarray_csrbank4_reload0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_reload0_w;
reg basesoc_csr_bankarray_csrbank4_en0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_en0_r;
reg basesoc_csr_bankarray_csrbank4_en0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_en0_w;
reg basesoc_csr_bankarray_csrbank4_update_value0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_update_value0_r;
reg basesoc_csr_bankarray_csrbank4_update_value0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_update_value0_w;
reg basesoc_csr_bankarray_csrbank4_value_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_value_r;
reg basesoc_csr_bankarray_csrbank4_value_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_value_w;
reg basesoc_csr_bankarray_csrbank4_ev_status_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_status_r;
reg basesoc_csr_bankarray_csrbank4_ev_status_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_status_w;
reg basesoc_csr_bankarray_csrbank4_ev_pending_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_pending_r;
reg basesoc_csr_bankarray_csrbank4_ev_pending_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_pending_w;
reg basesoc_csr_bankarray_csrbank4_ev_enable0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_enable0_r;
reg basesoc_csr_bankarray_csrbank4_ev_enable0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_ev_enable0_w;
wire basesoc_csr_bankarray_csrbank4_sel;
wire [13:0] basesoc_csr_bankarray_interface5_bank_bus_adr;
wire basesoc_csr_bankarray_interface5_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface5_bank_bus_dat_w;
reg [31:0] basesoc_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg basesoc_csr_bankarray_csrbank5_txfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank5_txfull_r;
reg basesoc_csr_bankarray_csrbank5_txfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank5_txfull_w;
reg basesoc_csr_bankarray_csrbank5_rxempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank5_rxempty_r;
reg basesoc_csr_bankarray_csrbank5_rxempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank5_rxempty_w;
reg basesoc_csr_bankarray_csrbank5_ev_status_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_status_r;
reg basesoc_csr_bankarray_csrbank5_ev_status_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_status_w;
reg basesoc_csr_bankarray_csrbank5_ev_pending_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_pending_r;
reg basesoc_csr_bankarray_csrbank5_ev_pending_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_pending_w;
reg basesoc_csr_bankarray_csrbank5_ev_enable0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_enable0_r;
reg basesoc_csr_bankarray_csrbank5_ev_enable0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank5_ev_enable0_w;
reg basesoc_csr_bankarray_csrbank5_txempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank5_txempty_r;
reg basesoc_csr_bankarray_csrbank5_txempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank5_txempty_w;
reg basesoc_csr_bankarray_csrbank5_rxfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank5_rxfull_r;
reg basesoc_csr_bankarray_csrbank5_rxfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank5_rxfull_w;
wire basesoc_csr_bankarray_csrbank5_sel;
wire [13:0] basesoc_csr_interconnect_adr;
wire basesoc_csr_interconnect_we;
wire [31:0] basesoc_csr_interconnect_dat_w;
wire [31:0] basesoc_csr_interconnect_dat_r;
reg [1:0] basesoc_state = 2'd0;
reg [1:0] basesoc_next_state = 2'd0;
reg [31:0] basesoc_basesoc_dat_w_next_value0 = 32'd0;
reg basesoc_basesoc_dat_w_next_value_ce0 = 1'd0;
reg [13:0] basesoc_basesoc_adr_next_value1 = 14'd0;
reg basesoc_basesoc_adr_next_value_ce1 = 1'd0;
reg basesoc_basesoc_we_next_value2 = 1'd0;
reg basesoc_basesoc_we_next_value_ce2 = 1'd0;
reg rhs_array_muxed0 = 1'd0;
reg [12:0] rhs_array_muxed1 = 13'd0;
reg [1:0] rhs_array_muxed2 = 2'd0;
reg rhs_array_muxed3 = 1'd0;
reg rhs_array_muxed4 = 1'd0;
reg rhs_array_muxed5 = 1'd0;
reg t_array_muxed0 = 1'd0;
reg t_array_muxed1 = 1'd0;
reg t_array_muxed2 = 1'd0;
reg rhs_array_muxed6 = 1'd0;
reg [12:0] rhs_array_muxed7 = 13'd0;
reg [1:0] rhs_array_muxed8 = 2'd0;
reg rhs_array_muxed9 = 1'd0;
reg rhs_array_muxed10 = 1'd0;
reg rhs_array_muxed11 = 1'd0;
reg t_array_muxed3 = 1'd0;
reg t_array_muxed4 = 1'd0;
reg t_array_muxed5 = 1'd0;
reg [22:0] rhs_array_muxed12 = 23'd0;
reg rhs_array_muxed13 = 1'd0;
reg rhs_array_muxed14 = 1'd0;
reg [22:0] rhs_array_muxed15 = 23'd0;
reg rhs_array_muxed16 = 1'd0;
reg rhs_array_muxed17 = 1'd0;
reg [22:0] rhs_array_muxed18 = 23'd0;
reg rhs_array_muxed19 = 1'd0;
reg rhs_array_muxed20 = 1'd0;
reg [22:0] rhs_array_muxed21 = 23'd0;
reg rhs_array_muxed22 = 1'd0;
reg rhs_array_muxed23 = 1'd0;
reg [29:0] rhs_array_muxed24 = 30'd0;
reg [31:0] rhs_array_muxed25 = 32'd0;
reg [3:0] rhs_array_muxed26 = 4'd0;
reg rhs_array_muxed27 = 1'd0;
reg rhs_array_muxed28 = 1'd0;
reg rhs_array_muxed29 = 1'd0;
reg [2:0] rhs_array_muxed30 = 3'd0;
reg [1:0] rhs_array_muxed31 = 2'd0;
reg [1:0] array_muxed0 = 2'd0;
reg [12:0] array_muxed1 = 13'd0;
reg array_muxed2 = 1'd0;
reg array_muxed3 = 1'd0;
reg array_muxed4 = 1'd0;
reg array_muxed5 = 1'd0;
reg array_muxed6 = 1'd0;
reg regs0 = 1'd0;
reg regs1 = 1'd0;
wire rst1;

assign basesoc_serv_reset = (basesoc_soc_rst | basesoc_cpu_rst);
assign wb_bus_adr = wb_adr;
assign wb_bus_dat_w = wb_dat_w;
assign wb_dat_r = wb_bus_dat_r;
assign wb_bus_sel = wb_sel;
assign wb_bus_cyc = wb_cyc;
assign wb_bus_stb = wb_stb;
assign wb_ack = wb_bus_ack;
assign wb_bus_we = wb_we;
assign wb_bus_cti = wb_cti;
assign wb_bus_bte = wb_bte;
assign wb_err = wb_bus_err;
assign rst = basesoc_soc_rst;
assign basesoc_bus_error = basesoc_error;
assign converted_interface_cyc = wb_bus_cyc;
assign converted_interface_stb = wb_bus_stb;
assign wb_bus_ack = converted_interface_ack;
assign converted_interface_we = wb_bus_we;
assign converted_interface_cti = wb_bus_cti;
assign converted_interface_bte = wb_bus_bte;
assign wb_bus_err = converted_interface_err;
always @(*) begin
	converted_interface_sel <= 4'd0;
	converted_interface_adr <= 30'd0;
	converted_interface_dat_w <= 32'd0;
	wb_bus_dat_r <= 16'd0;
	case (wb_bus_adr[0])
		1'd0: begin
			converted_interface_adr <= wb_bus_adr[31:1];
			converted_interface_sel[1:0] <= wb_bus_sel;
			converted_interface_dat_w[15:0] <= wb_bus_dat_w;
			wb_bus_dat_r <= converted_interface_dat_r[15:0];
		end
		1'd1: begin
			converted_interface_adr <= wb_bus_adr[31:1];
			converted_interface_sel[3:2] <= wb_bus_sel;
			converted_interface_dat_w[31:16] <= wb_bus_dat_w;
			wb_bus_dat_r <= converted_interface_dat_r[31:16];
		end
	endcase
end
assign basesoc_bus_errors_status = basesoc_bus_errors;
assign basesoc_serv_ibus_stb = basesoc_serv_ibus_cyc;
assign basesoc_serv_ibus_sel = 4'd15;
assign basesoc_serv_dbus_stb = basesoc_serv_dbus_cyc;
always @(*) begin
	basesoc_we <= 4'd0;
	basesoc_we[0] <= (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & basesoc_ram_bus_we) & basesoc_ram_bus_sel[0]);
	basesoc_we[1] <= (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & basesoc_ram_bus_we) & basesoc_ram_bus_sel[1]);
	basesoc_we[2] <= (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & basesoc_ram_bus_we) & basesoc_ram_bus_sel[2]);
	basesoc_we[3] <= (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & basesoc_ram_bus_we) & basesoc_ram_bus_sel[3]);
end
assign basesoc_adr = basesoc_ram_bus_adr[8:0];
assign basesoc_ram_bus_dat_r = basesoc_dat_r;
assign basesoc_dat_w = basesoc_ram_bus_dat_w;
always @(*) begin
	basesoc_tx_data_rs232phytx_next_value2 <= 8'd0;
	basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
	basesoc_tx_sink_ready <= 1'd0;
	basesoc_tx_enable <= 1'd0;
	subfragments_rs232phytx_next_state <= 1'd0;
	basesoc_tx_count_rs232phytx_next_value0 <= 4'd0;
	basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
	basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
	basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
	subfragments_rs232phytx_next_state <= subfragments_rs232phytx_state;
	case (subfragments_rs232phytx_state)
		1'd1: begin
			basesoc_tx_enable <= 1'd1;
			if (basesoc_tx_tick) begin
				basesoc_serial_tx_rs232phytx_next_value1 <= basesoc_tx_data;
				basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				basesoc_tx_count_rs232phytx_next_value0 <= (basesoc_tx_count + 1'd1);
				basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
				basesoc_tx_data_rs232phytx_next_value2 <= {1'd1, basesoc_tx_data[7:1]};
				basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				if ((basesoc_tx_count == 4'd9)) begin
					basesoc_tx_sink_ready <= 1'd1;
					subfragments_rs232phytx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_tx_count_rs232phytx_next_value0 <= 1'd0;
			basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
			basesoc_serial_tx_rs232phytx_next_value1 <= 1'd1;
			basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
			if (basesoc_tx_sink_valid) begin
				basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
				basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				basesoc_tx_data_rs232phytx_next_value2 <= basesoc_tx_sink_payload_data;
				basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				subfragments_rs232phytx_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	basesoc_rx_data_rs232phyrx_next_value1 <= 8'd0;
	basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
	basesoc_rx_source_valid <= 1'd0;
	basesoc_rx_source_payload_data <= 8'd0;
	basesoc_rx_enable <= 1'd0;
	subfragments_rs232phyrx_next_state <= 1'd0;
	basesoc_rx_count_rs232phyrx_next_value0 <= 4'd0;
	basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
	subfragments_rs232phyrx_next_state <= subfragments_rs232phyrx_state;
	case (subfragments_rs232phyrx_state)
		1'd1: begin
			basesoc_rx_enable <= 1'd1;
			if (basesoc_rx_tick) begin
				basesoc_rx_count_rs232phyrx_next_value0 <= (basesoc_rx_count + 1'd1);
				basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
				basesoc_rx_data_rs232phyrx_next_value1 <= {basesoc_rx_rx, basesoc_rx_data[7:1]};
				basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
				if ((basesoc_rx_count == 4'd9)) begin
					basesoc_rx_source_valid <= (basesoc_rx_rx == 1'd1);
					basesoc_rx_source_payload_data <= basesoc_rx_data;
					subfragments_rs232phyrx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_rx_count_rs232phyrx_next_value0 <= 1'd0;
			basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
			if (((basesoc_rx_rx == 1'd0) & (basesoc_rx_rx_d == 1'd1))) begin
				subfragments_rs232phyrx_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_uart_uart_sink_valid = basesoc_rx_source_valid;
assign basesoc_rx_source_ready = basesoc_uart_uart_sink_ready;
assign basesoc_uart_uart_sink_first = basesoc_rx_source_first;
assign basesoc_uart_uart_sink_last = basesoc_rx_source_last;
assign basesoc_uart_uart_sink_payload_data = basesoc_rx_source_payload_data;
assign basesoc_tx_sink_valid = basesoc_uart_uart_source_valid;
assign basesoc_uart_uart_source_ready = basesoc_tx_sink_ready;
assign basesoc_tx_sink_first = basesoc_uart_uart_source_first;
assign basesoc_tx_sink_last = basesoc_uart_uart_source_last;
assign basesoc_tx_sink_payload_data = basesoc_uart_uart_source_payload_data;
assign basesoc_uart_tx_fifo_sink_valid = basesoc_uart_rxtx_re;
assign basesoc_uart_tx_fifo_sink_payload_data = basesoc_uart_rxtx_r;
assign basesoc_uart_uart_source_valid = basesoc_uart_tx_fifo_source_valid;
assign basesoc_uart_tx_fifo_source_ready = basesoc_uart_uart_source_ready;
assign basesoc_uart_uart_source_first = basesoc_uart_tx_fifo_source_first;
assign basesoc_uart_uart_source_last = basesoc_uart_tx_fifo_source_last;
assign basesoc_uart_uart_source_payload_data = basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_uart_txfull_status = (~basesoc_uart_tx_fifo_sink_ready);
assign basesoc_uart_txempty_status = (~basesoc_uart_tx_fifo_source_valid);
assign basesoc_uart_tx_trigger = basesoc_uart_tx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_valid = basesoc_uart_uart_sink_valid;
assign basesoc_uart_uart_sink_ready = basesoc_uart_rx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_first = basesoc_uart_uart_sink_first;
assign basesoc_uart_rx_fifo_sink_last = basesoc_uart_uart_sink_last;
assign basesoc_uart_rx_fifo_sink_payload_data = basesoc_uart_uart_sink_payload_data;
assign basesoc_uart_rxtx_w = basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_uart_rx_fifo_source_ready = (basesoc_uart_rx_clear | (1'd0 & basesoc_uart_rxtx_we));
assign basesoc_uart_rxempty_status = (~basesoc_uart_rx_fifo_source_valid);
assign basesoc_uart_rxfull_status = (~basesoc_uart_rx_fifo_sink_ready);
assign basesoc_uart_rx_trigger = basesoc_uart_rx_fifo_source_valid;
assign basesoc_uart_tx0 = basesoc_uart_tx_status;
assign basesoc_uart_tx1 = basesoc_uart_tx_pending;
always @(*) begin
	basesoc_uart_tx_clear <= 1'd0;
	if ((basesoc_uart_pending_re & basesoc_uart_pending_r[0])) begin
		basesoc_uart_tx_clear <= 1'd1;
	end
end
assign basesoc_uart_rx0 = basesoc_uart_rx_status;
assign basesoc_uart_rx1 = basesoc_uart_rx_pending;
always @(*) begin
	basesoc_uart_rx_clear <= 1'd0;
	if ((basesoc_uart_pending_re & basesoc_uart_pending_r[1])) begin
		basesoc_uart_rx_clear <= 1'd1;
	end
end
assign basesoc_uart_irq = ((basesoc_uart_pending_status[0] & basesoc_uart_enable_storage[0]) | (basesoc_uart_pending_status[1] & basesoc_uart_enable_storage[1]));
assign basesoc_uart_tx_status = basesoc_uart_tx_trigger;
assign basesoc_uart_rx_status = basesoc_uart_rx_trigger;
assign basesoc_uart_tx_fifo_syncfifo_din = {basesoc_uart_tx_fifo_fifo_in_last, basesoc_uart_tx_fifo_fifo_in_first, basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart_tx_fifo_fifo_out_last, basesoc_uart_tx_fifo_fifo_out_first, basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_uart_tx_fifo_sink_ready = basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_uart_tx_fifo_syncfifo_we = basesoc_uart_tx_fifo_sink_valid;
assign basesoc_uart_tx_fifo_fifo_in_first = basesoc_uart_tx_fifo_sink_first;
assign basesoc_uart_tx_fifo_fifo_in_last = basesoc_uart_tx_fifo_sink_last;
assign basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_uart_tx_fifo_source_valid = basesoc_uart_tx_fifo_readable;
assign basesoc_uart_tx_fifo_source_first = basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_uart_tx_fifo_source_last = basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_uart_tx_fifo_source_payload_data = basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_uart_tx_fifo_re = basesoc_uart_tx_fifo_source_ready;
assign basesoc_uart_tx_fifo_syncfifo_re = (basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_uart_tx_fifo_readable) | basesoc_uart_tx_fifo_re));
assign basesoc_uart_tx_fifo_level1 = (basesoc_uart_tx_fifo_level0 + basesoc_uart_tx_fifo_readable);
always @(*) begin
	basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart_tx_fifo_replace) begin
		basesoc_uart_tx_fifo_wrport_adr <= (basesoc_uart_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart_tx_fifo_wrport_adr <= basesoc_uart_tx_fifo_produce;
	end
end
assign basesoc_uart_tx_fifo_wrport_dat_w = basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_uart_tx_fifo_wrport_we = (basesoc_uart_tx_fifo_syncfifo_we & (basesoc_uart_tx_fifo_syncfifo_writable | basesoc_uart_tx_fifo_replace));
assign basesoc_uart_tx_fifo_do_read = (basesoc_uart_tx_fifo_syncfifo_readable & basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_uart_tx_fifo_rdport_adr = basesoc_uart_tx_fifo_consume;
assign basesoc_uart_tx_fifo_syncfifo_dout = basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_uart_tx_fifo_rdport_re = basesoc_uart_tx_fifo_do_read;
assign basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_uart_rx_fifo_syncfifo_din = {basesoc_uart_rx_fifo_fifo_in_last, basesoc_uart_rx_fifo_fifo_in_first, basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart_rx_fifo_fifo_out_last, basesoc_uart_rx_fifo_fifo_out_first, basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_uart_rx_fifo_sink_ready = basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_uart_rx_fifo_syncfifo_we = basesoc_uart_rx_fifo_sink_valid;
assign basesoc_uart_rx_fifo_fifo_in_first = basesoc_uart_rx_fifo_sink_first;
assign basesoc_uart_rx_fifo_fifo_in_last = basesoc_uart_rx_fifo_sink_last;
assign basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_uart_rx_fifo_source_valid = basesoc_uart_rx_fifo_readable;
assign basesoc_uart_rx_fifo_source_first = basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_uart_rx_fifo_source_last = basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_uart_rx_fifo_source_payload_data = basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_uart_rx_fifo_re = basesoc_uart_rx_fifo_source_ready;
assign basesoc_uart_rx_fifo_syncfifo_re = (basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_uart_rx_fifo_readable) | basesoc_uart_rx_fifo_re));
assign basesoc_uart_rx_fifo_level1 = (basesoc_uart_rx_fifo_level0 + basesoc_uart_rx_fifo_readable);
always @(*) begin
	basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart_rx_fifo_replace) begin
		basesoc_uart_rx_fifo_wrport_adr <= (basesoc_uart_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart_rx_fifo_wrport_adr <= basesoc_uart_rx_fifo_produce;
	end
end
assign basesoc_uart_rx_fifo_wrport_dat_w = basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_uart_rx_fifo_wrport_we = (basesoc_uart_rx_fifo_syncfifo_we & (basesoc_uart_rx_fifo_syncfifo_writable | basesoc_uart_rx_fifo_replace));
assign basesoc_uart_rx_fifo_do_read = (basesoc_uart_rx_fifo_syncfifo_readable & basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_uart_rx_fifo_rdport_adr = basesoc_uart_rx_fifo_consume;
assign basesoc_uart_rx_fifo_syncfifo_dout = basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_uart_rx_fifo_rdport_re = basesoc_uart_rx_fifo_do_read;
assign basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_timer_zero_trigger = (basesoc_timer_value == 1'd0);
assign basesoc_timer_zero0 = basesoc_timer_zero_status;
assign basesoc_timer_zero1 = basesoc_timer_zero_pending;
always @(*) begin
	basesoc_timer_zero_clear <= 1'd0;
	if ((basesoc_timer_pending_re & basesoc_timer_pending_r)) begin
		basesoc_timer_zero_clear <= 1'd1;
	end
end
assign basesoc_timer_irq = (basesoc_timer_pending_status & basesoc_timer_enable_storage);
assign basesoc_timer_zero_status = basesoc_timer_zero_trigger;
assign por_clk = sys_clk;
assign por_done = (por_count == 1'd0);
assign reset = user_btn_n;
assign clkin = clk100;
assign sys_clk = clkout;
assign bus_dat_r = {sr[7:0], sr[15:8], sr[23:16], sr[31:24]};
always @(*) begin
	spiflash_clk <= 1'd0;
	miso_status <= 1'd0;
	spiflash_mosi <= 1'd0;
	spiflash_cs_n <= 1'd0;
	if (bitbang_en_storage) begin
		spiflash_clk <= bitbang_storage[1];
		spiflash_cs_n <= bitbang_storage[2];
		if (bitbang_storage[1]) begin
			miso_status <= spiflash_miso;
		end
		spiflash_mosi <= bitbang_storage[0];
	end else begin
		spiflash_clk <= clk1;
		spiflash_cs_n <= cs_n1;
		spiflash_mosi <= sr[31];
	end
end
assign wait_1 = (~done);
always @(*) begin
	user_led0 <= 4'd0;
	if ((mode == 1'd1)) begin
		{user_led0} <= storage;
	end else begin
		{user_led0} <= chaser;
	end
end
assign done = (count == 1'd0);
assign dfi_p0_address = sdram_master_p0_address;
assign dfi_p0_bank = sdram_master_p0_bank;
assign dfi_p0_cas_n = sdram_master_p0_cas_n;
assign dfi_p0_cs_n = sdram_master_p0_cs_n;
assign dfi_p0_ras_n = sdram_master_p0_ras_n;
assign dfi_p0_we_n = sdram_master_p0_we_n;
assign dfi_p0_cke = sdram_master_p0_cke;
assign dfi_p0_odt = sdram_master_p0_odt;
assign dfi_p0_reset_n = sdram_master_p0_reset_n;
assign dfi_p0_act_n = sdram_master_p0_act_n;
assign dfi_p0_wrdata = sdram_master_p0_wrdata;
assign dfi_p0_wrdata_en = sdram_master_p0_wrdata_en;
assign dfi_p0_wrdata_mask = sdram_master_p0_wrdata_mask;
assign dfi_p0_rddata_en = sdram_master_p0_rddata_en;
assign sdram_master_p0_rddata = dfi_p0_rddata;
assign sdram_master_p0_rddata_valid = dfi_p0_rddata_valid;
assign sdram_slave_p0_address = sdram_dfi_p0_address;
assign sdram_slave_p0_bank = sdram_dfi_p0_bank;
assign sdram_slave_p0_cas_n = sdram_dfi_p0_cas_n;
assign sdram_slave_p0_cs_n = sdram_dfi_p0_cs_n;
assign sdram_slave_p0_ras_n = sdram_dfi_p0_ras_n;
assign sdram_slave_p0_we_n = sdram_dfi_p0_we_n;
assign sdram_slave_p0_cke = sdram_dfi_p0_cke;
assign sdram_slave_p0_odt = sdram_dfi_p0_odt;
assign sdram_slave_p0_reset_n = sdram_dfi_p0_reset_n;
assign sdram_slave_p0_act_n = sdram_dfi_p0_act_n;
assign sdram_slave_p0_wrdata = sdram_dfi_p0_wrdata;
assign sdram_slave_p0_wrdata_en = sdram_dfi_p0_wrdata_en;
assign sdram_slave_p0_wrdata_mask = sdram_dfi_p0_wrdata_mask;
assign sdram_slave_p0_rddata_en = sdram_dfi_p0_rddata_en;
assign sdram_dfi_p0_rddata = sdram_slave_p0_rddata;
assign sdram_dfi_p0_rddata_valid = sdram_slave_p0_rddata_valid;
always @(*) begin
	sdram_slave_p0_rddata <= 8'd0;
	sdram_slave_p0_rddata_valid <= 1'd0;
	sdram_master_p0_address <= 13'd0;
	sdram_master_p0_bank <= 2'd0;
	sdram_master_p0_cas_n <= 1'd1;
	sdram_master_p0_cs_n <= 1'd1;
	sdram_master_p0_ras_n <= 1'd1;
	sdram_master_p0_we_n <= 1'd1;
	sdram_master_p0_cke <= 1'd0;
	sdram_master_p0_odt <= 1'd0;
	sdram_master_p0_reset_n <= 1'd0;
	sdram_master_p0_act_n <= 1'd1;
	sdram_inti_p0_rddata <= 8'd0;
	sdram_master_p0_wrdata <= 8'd0;
	sdram_inti_p0_rddata_valid <= 1'd0;
	sdram_master_p0_wrdata_en <= 1'd0;
	sdram_master_p0_wrdata_mask <= 1'd0;
	sdram_master_p0_rddata_en <= 1'd0;
	if (sdram_sel) begin
		sdram_master_p0_address <= sdram_slave_p0_address;
		sdram_master_p0_bank <= sdram_slave_p0_bank;
		sdram_master_p0_cas_n <= sdram_slave_p0_cas_n;
		sdram_master_p0_cs_n <= sdram_slave_p0_cs_n;
		sdram_master_p0_ras_n <= sdram_slave_p0_ras_n;
		sdram_master_p0_we_n <= sdram_slave_p0_we_n;
		sdram_master_p0_cke <= sdram_slave_p0_cke;
		sdram_master_p0_odt <= sdram_slave_p0_odt;
		sdram_master_p0_reset_n <= sdram_slave_p0_reset_n;
		sdram_master_p0_act_n <= sdram_slave_p0_act_n;
		sdram_master_p0_wrdata <= sdram_slave_p0_wrdata;
		sdram_master_p0_wrdata_en <= sdram_slave_p0_wrdata_en;
		sdram_master_p0_wrdata_mask <= sdram_slave_p0_wrdata_mask;
		sdram_master_p0_rddata_en <= sdram_slave_p0_rddata_en;
		sdram_slave_p0_rddata <= sdram_master_p0_rddata;
		sdram_slave_p0_rddata_valid <= sdram_master_p0_rddata_valid;
	end else begin
		sdram_master_p0_address <= sdram_inti_p0_address;
		sdram_master_p0_bank <= sdram_inti_p0_bank;
		sdram_master_p0_cas_n <= sdram_inti_p0_cas_n;
		sdram_master_p0_cs_n <= sdram_inti_p0_cs_n;
		sdram_master_p0_ras_n <= sdram_inti_p0_ras_n;
		sdram_master_p0_we_n <= sdram_inti_p0_we_n;
		sdram_master_p0_cke <= sdram_inti_p0_cke;
		sdram_master_p0_odt <= sdram_inti_p0_odt;
		sdram_master_p0_reset_n <= sdram_inti_p0_reset_n;
		sdram_master_p0_act_n <= sdram_inti_p0_act_n;
		sdram_master_p0_wrdata <= sdram_inti_p0_wrdata;
		sdram_master_p0_wrdata_en <= sdram_inti_p0_wrdata_en;
		sdram_master_p0_wrdata_mask <= sdram_inti_p0_wrdata_mask;
		sdram_master_p0_rddata_en <= sdram_inti_p0_rddata_en;
		sdram_inti_p0_rddata <= sdram_master_p0_rddata;
		sdram_inti_p0_rddata_valid <= sdram_master_p0_rddata_valid;
	end
end
assign sdram_inti_p0_cke = sdram_cke1;
assign sdram_inti_p0_odt = sdram_odt;
assign sdram_inti_p0_reset_n = sdram_reset_n;
always @(*) begin
	sdram_inti_p0_cas_n <= 1'd1;
	sdram_inti_p0_cs_n <= 1'd1;
	sdram_inti_p0_ras_n <= 1'd1;
	sdram_inti_p0_we_n <= 1'd1;
	if (sdram_command_issue_re) begin
		sdram_inti_p0_cs_n <= {1{(~sdram_command_storage[0])}};
		sdram_inti_p0_we_n <= (~sdram_command_storage[1]);
		sdram_inti_p0_cas_n <= (~sdram_command_storage[2]);
		sdram_inti_p0_ras_n <= (~sdram_command_storage[3]);
	end else begin
		sdram_inti_p0_cs_n <= {1{1'd1}};
		sdram_inti_p0_we_n <= 1'd1;
		sdram_inti_p0_cas_n <= 1'd1;
		sdram_inti_p0_ras_n <= 1'd1;
	end
end
assign sdram_inti_p0_address = sdram_address_storage;
assign sdram_inti_p0_bank = sdram_baddress_storage;
assign sdram_inti_p0_wrdata_en = (sdram_command_issue_re & sdram_command_storage[4]);
assign sdram_inti_p0_rddata_en = (sdram_command_issue_re & sdram_command_storage[5]);
assign sdram_inti_p0_wrdata = sdram_wrdata_storage;
assign sdram_inti_p0_wrdata_mask = 1'd0;
assign sdram_bankmachine0_req_valid = sdram_interface_bank0_valid;
assign sdram_interface_bank0_ready = sdram_bankmachine0_req_ready;
assign sdram_bankmachine0_req_we = sdram_interface_bank0_we;
assign sdram_bankmachine0_req_addr = sdram_interface_bank0_addr;
assign sdram_interface_bank0_lock = sdram_bankmachine0_req_lock;
assign sdram_interface_bank0_wdata_ready = sdram_bankmachine0_req_wdata_ready;
assign sdram_interface_bank0_rdata_valid = sdram_bankmachine0_req_rdata_valid;
assign sdram_bankmachine1_req_valid = sdram_interface_bank1_valid;
assign sdram_interface_bank1_ready = sdram_bankmachine1_req_ready;
assign sdram_bankmachine1_req_we = sdram_interface_bank1_we;
assign sdram_bankmachine1_req_addr = sdram_interface_bank1_addr;
assign sdram_interface_bank1_lock = sdram_bankmachine1_req_lock;
assign sdram_interface_bank1_wdata_ready = sdram_bankmachine1_req_wdata_ready;
assign sdram_interface_bank1_rdata_valid = sdram_bankmachine1_req_rdata_valid;
assign sdram_bankmachine2_req_valid = sdram_interface_bank2_valid;
assign sdram_interface_bank2_ready = sdram_bankmachine2_req_ready;
assign sdram_bankmachine2_req_we = sdram_interface_bank2_we;
assign sdram_bankmachine2_req_addr = sdram_interface_bank2_addr;
assign sdram_interface_bank2_lock = sdram_bankmachine2_req_lock;
assign sdram_interface_bank2_wdata_ready = sdram_bankmachine2_req_wdata_ready;
assign sdram_interface_bank2_rdata_valid = sdram_bankmachine2_req_rdata_valid;
assign sdram_bankmachine3_req_valid = sdram_interface_bank3_valid;
assign sdram_interface_bank3_ready = sdram_bankmachine3_req_ready;
assign sdram_bankmachine3_req_we = sdram_interface_bank3_we;
assign sdram_bankmachine3_req_addr = sdram_interface_bank3_addr;
assign sdram_interface_bank3_lock = sdram_bankmachine3_req_lock;
assign sdram_interface_bank3_wdata_ready = sdram_bankmachine3_req_wdata_ready;
assign sdram_interface_bank3_rdata_valid = sdram_bankmachine3_req_rdata_valid;
assign sdram_timer_wait = (~sdram_timer_done0);
assign sdram_postponer_req_i = sdram_timer_done0;
assign sdram_wants_refresh = sdram_postponer_req_o;
assign sdram_timer_done1 = (sdram_timer_count1 == 1'd0);
assign sdram_timer_done0 = sdram_timer_done1;
assign sdram_timer_count0 = sdram_timer_count1;
assign sdram_sequencer_start1 = (sdram_sequencer_start0 | (sdram_sequencer_count != 1'd0));
assign sdram_sequencer_done0 = (sdram_sequencer_done1 & (sdram_sequencer_count == 1'd0));
always @(*) begin
	subfragments_refresher_next_state <= 2'd0;
	sdram_cmd_valid <= 1'd0;
	sdram_cmd_last <= 1'd0;
	sdram_sequencer_start0 <= 1'd0;
	subfragments_refresher_next_state <= subfragments_refresher_state;
	case (subfragments_refresher_state)
		1'd1: begin
			sdram_cmd_valid <= 1'd1;
			if (sdram_cmd_ready) begin
				sdram_sequencer_start0 <= 1'd1;
				subfragments_refresher_next_state <= 2'd2;
			end
		end
		2'd2: begin
			sdram_cmd_valid <= 1'd1;
			if (sdram_sequencer_done0) begin
				sdram_cmd_valid <= 1'd0;
				sdram_cmd_last <= 1'd1;
				subfragments_refresher_next_state <= 1'd0;
			end
		end
		default: begin
			if (1'd1) begin
				if (sdram_wants_refresh) begin
					subfragments_refresher_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_valid = sdram_bankmachine0_req_valid;
assign sdram_bankmachine0_req_ready = sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine0_req_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine0_req_addr;
assign sdram_bankmachine0_cmd_buffer_sink_valid = sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_ready = sdram_bankmachine0_cmd_buffer_sink_ready;
assign sdram_bankmachine0_cmd_buffer_sink_first = sdram_bankmachine0_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine0_cmd_buffer_sink_last = sdram_bankmachine0_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine0_cmd_buffer_sink_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine0_cmd_buffer_sink_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine0_cmd_buffer_source_ready = (sdram_bankmachine0_req_wdata_ready | sdram_bankmachine0_req_rdata_valid);
assign sdram_bankmachine0_req_lock = (sdram_bankmachine0_cmd_buffer_lookahead_source_valid | sdram_bankmachine0_cmd_buffer_source_valid);
assign sdram_bankmachine0_row_hit = (sdram_bankmachine0_row == sdram_bankmachine0_cmd_buffer_source_payload_addr[22:10]);
assign sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
	sdram_bankmachine0_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine0_row_col_n_addr_sel) begin
		sdram_bankmachine0_cmd_payload_a <= sdram_bankmachine0_cmd_buffer_source_payload_addr[22:10];
	end else begin
		sdram_bankmachine0_cmd_payload_a <= ((sdram_bankmachine0_auto_precharge <<< 4'd10) | {sdram_bankmachine0_cmd_buffer_source_payload_addr[9:0], {0{1'd0}}});
	end
end
assign sdram_bankmachine0_twtpcon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_cmd_payload_is_write);
assign sdram_bankmachine0_trccon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
assign sdram_bankmachine0_trascon_valid = ((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_ready) & sdram_bankmachine0_row_open);
always @(*) begin
	sdram_bankmachine0_auto_precharge <= 1'd0;
	if ((sdram_bankmachine0_cmd_buffer_lookahead_source_valid & sdram_bankmachine0_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr[22:10] != sdram_bankmachine0_cmd_buffer_source_payload_addr[22:10])) begin
			sdram_bankmachine0_auto_precharge <= (sdram_bankmachine0_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din = {sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign sdram_bankmachine0_cmd_buffer_lookahead_sink_ready = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we = sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine0_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine0_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_valid = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_first = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_last = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re = sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine0_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine0_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine0_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable | sdram_bankmachine0_cmd_buffer_lookahead_replace));
assign sdram_bankmachine0_cmd_buffer_lookahead_do_read = (sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re);
assign sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine0_cmd_buffer_lookahead_consume;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout = sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable = (sdram_bankmachine0_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable = (sdram_bankmachine0_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine0_cmd_buffer_sink_ready = ((~sdram_bankmachine0_cmd_buffer_source_valid) | sdram_bankmachine0_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
	subfragments_bankmachine0_next_state <= 3'd0;
	sdram_bankmachine0_req_wdata_ready <= 1'd0;
	sdram_bankmachine0_req_rdata_valid <= 1'd0;
	sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine0_refresh_gnt <= 1'd0;
	sdram_bankmachine0_cmd_valid <= 1'd0;
	sdram_bankmachine0_row_open <= 1'd0;
	sdram_bankmachine0_row_close <= 1'd0;
	sdram_bankmachine0_cmd_payload_cas <= 1'd0;
	sdram_bankmachine0_cmd_payload_ras <= 1'd0;
	sdram_bankmachine0_cmd_payload_we <= 1'd0;
	sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
	subfragments_bankmachine0_next_state <= subfragments_bankmachine0_state;
	case (subfragments_bankmachine0_state)
		1'd1: begin
			if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
				sdram_bankmachine0_cmd_valid <= 1'd1;
				if (sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 2'd3;
				end
				sdram_bankmachine0_cmd_payload_ras <= 1'd1;
				sdram_bankmachine0_cmd_payload_we <= 1'd1;
				sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine0_twtpcon_ready & sdram_bankmachine0_trascon_ready)) begin
				subfragments_bankmachine0_next_state <= 2'd3;
			end
			sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine0_trccon_ready) begin
				sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine0_row_open <= 1'd1;
				sdram_bankmachine0_cmd_valid <= 1'd1;
				sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 1'd0;
				end
				sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine0_twtpcon_ready) begin
				sdram_bankmachine0_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine0_row_close <= 1'd1;
			sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine0_refresh_req)) begin
				subfragments_bankmachine0_next_state <= 1'd0;
			end
		end
		default: begin
			if (sdram_bankmachine0_refresh_req) begin
				subfragments_bankmachine0_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (sdram_bankmachine0_row_opened) begin
						if (sdram_bankmachine0_row_hit) begin
							sdram_bankmachine0_cmd_valid <= 1'd1;
							if (sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								sdram_bankmachine0_req_wdata_ready <= sdram_bankmachine0_cmd_ready;
								sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine0_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine0_req_rdata_valid <= sdram_bankmachine0_cmd_ready;
								sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine0_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine0_cmd_ready & sdram_bankmachine0_auto_precharge)) begin
								subfragments_bankmachine0_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine0_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine0_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_valid = sdram_bankmachine1_req_valid;
assign sdram_bankmachine1_req_ready = sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine1_req_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine1_req_addr;
assign sdram_bankmachine1_cmd_buffer_sink_valid = sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_ready = sdram_bankmachine1_cmd_buffer_sink_ready;
assign sdram_bankmachine1_cmd_buffer_sink_first = sdram_bankmachine1_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine1_cmd_buffer_sink_last = sdram_bankmachine1_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine1_cmd_buffer_sink_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine1_cmd_buffer_sink_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine1_cmd_buffer_source_ready = (sdram_bankmachine1_req_wdata_ready | sdram_bankmachine1_req_rdata_valid);
assign sdram_bankmachine1_req_lock = (sdram_bankmachine1_cmd_buffer_lookahead_source_valid | sdram_bankmachine1_cmd_buffer_source_valid);
assign sdram_bankmachine1_row_hit = (sdram_bankmachine1_row == sdram_bankmachine1_cmd_buffer_source_payload_addr[22:10]);
assign sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
	sdram_bankmachine1_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine1_row_col_n_addr_sel) begin
		sdram_bankmachine1_cmd_payload_a <= sdram_bankmachine1_cmd_buffer_source_payload_addr[22:10];
	end else begin
		sdram_bankmachine1_cmd_payload_a <= ((sdram_bankmachine1_auto_precharge <<< 4'd10) | {sdram_bankmachine1_cmd_buffer_source_payload_addr[9:0], {0{1'd0}}});
	end
end
assign sdram_bankmachine1_twtpcon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_cmd_payload_is_write);
assign sdram_bankmachine1_trccon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
assign sdram_bankmachine1_trascon_valid = ((sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_ready) & sdram_bankmachine1_row_open);
always @(*) begin
	sdram_bankmachine1_auto_precharge <= 1'd0;
	if ((sdram_bankmachine1_cmd_buffer_lookahead_source_valid & sdram_bankmachine1_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr[22:10] != sdram_bankmachine1_cmd_buffer_source_payload_addr[22:10])) begin
			sdram_bankmachine1_auto_precharge <= (sdram_bankmachine1_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din = {sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign sdram_bankmachine1_cmd_buffer_lookahead_sink_ready = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we = sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine1_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine1_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_valid = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_first = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_last = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re = sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine1_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine1_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine1_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable | sdram_bankmachine1_cmd_buffer_lookahead_replace));
assign sdram_bankmachine1_cmd_buffer_lookahead_do_read = (sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re);
assign sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine1_cmd_buffer_lookahead_consume;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout = sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable = (sdram_bankmachine1_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable = (sdram_bankmachine1_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine1_cmd_buffer_sink_ready = ((~sdram_bankmachine1_cmd_buffer_source_valid) | sdram_bankmachine1_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine1_req_wdata_ready <= 1'd0;
	sdram_bankmachine1_req_rdata_valid <= 1'd0;
	sdram_bankmachine1_refresh_gnt <= 1'd0;
	sdram_bankmachine1_cmd_valid <= 1'd0;
	sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine1_row_open <= 1'd0;
	sdram_bankmachine1_row_close <= 1'd0;
	sdram_bankmachine1_cmd_payload_cas <= 1'd0;
	sdram_bankmachine1_cmd_payload_ras <= 1'd0;
	subfragments_bankmachine1_next_state <= 3'd0;
	sdram_bankmachine1_cmd_payload_we <= 1'd0;
	sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
	subfragments_bankmachine1_next_state <= subfragments_bankmachine1_state;
	case (subfragments_bankmachine1_state)
		1'd1: begin
			if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
				sdram_bankmachine1_cmd_valid <= 1'd1;
				if (sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 2'd3;
				end
				sdram_bankmachine1_cmd_payload_ras <= 1'd1;
				sdram_bankmachine1_cmd_payload_we <= 1'd1;
				sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine1_twtpcon_ready & sdram_bankmachine1_trascon_ready)) begin
				subfragments_bankmachine1_next_state <= 2'd3;
			end
			sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine1_trccon_ready) begin
				sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine1_row_open <= 1'd1;
				sdram_bankmachine1_cmd_valid <= 1'd1;
				sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 1'd0;
				end
				sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine1_twtpcon_ready) begin
				sdram_bankmachine1_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine1_row_close <= 1'd1;
			sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine1_refresh_req)) begin
				subfragments_bankmachine1_next_state <= 1'd0;
			end
		end
		default: begin
			if (sdram_bankmachine1_refresh_req) begin
				subfragments_bankmachine1_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (sdram_bankmachine1_row_opened) begin
						if (sdram_bankmachine1_row_hit) begin
							sdram_bankmachine1_cmd_valid <= 1'd1;
							if (sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								sdram_bankmachine1_req_wdata_ready <= sdram_bankmachine1_cmd_ready;
								sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine1_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine1_req_rdata_valid <= sdram_bankmachine1_cmd_ready;
								sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine1_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine1_cmd_ready & sdram_bankmachine1_auto_precharge)) begin
								subfragments_bankmachine1_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine1_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine1_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_valid = sdram_bankmachine2_req_valid;
assign sdram_bankmachine2_req_ready = sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine2_req_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine2_req_addr;
assign sdram_bankmachine2_cmd_buffer_sink_valid = sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_ready = sdram_bankmachine2_cmd_buffer_sink_ready;
assign sdram_bankmachine2_cmd_buffer_sink_first = sdram_bankmachine2_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine2_cmd_buffer_sink_last = sdram_bankmachine2_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine2_cmd_buffer_sink_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine2_cmd_buffer_sink_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine2_cmd_buffer_source_ready = (sdram_bankmachine2_req_wdata_ready | sdram_bankmachine2_req_rdata_valid);
assign sdram_bankmachine2_req_lock = (sdram_bankmachine2_cmd_buffer_lookahead_source_valid | sdram_bankmachine2_cmd_buffer_source_valid);
assign sdram_bankmachine2_row_hit = (sdram_bankmachine2_row == sdram_bankmachine2_cmd_buffer_source_payload_addr[22:10]);
assign sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
	sdram_bankmachine2_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine2_row_col_n_addr_sel) begin
		sdram_bankmachine2_cmd_payload_a <= sdram_bankmachine2_cmd_buffer_source_payload_addr[22:10];
	end else begin
		sdram_bankmachine2_cmd_payload_a <= ((sdram_bankmachine2_auto_precharge <<< 4'd10) | {sdram_bankmachine2_cmd_buffer_source_payload_addr[9:0], {0{1'd0}}});
	end
end
assign sdram_bankmachine2_twtpcon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_cmd_payload_is_write);
assign sdram_bankmachine2_trccon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
assign sdram_bankmachine2_trascon_valid = ((sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_ready) & sdram_bankmachine2_row_open);
always @(*) begin
	sdram_bankmachine2_auto_precharge <= 1'd0;
	if ((sdram_bankmachine2_cmd_buffer_lookahead_source_valid & sdram_bankmachine2_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr[22:10] != sdram_bankmachine2_cmd_buffer_source_payload_addr[22:10])) begin
			sdram_bankmachine2_auto_precharge <= (sdram_bankmachine2_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din = {sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign sdram_bankmachine2_cmd_buffer_lookahead_sink_ready = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we = sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine2_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine2_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_valid = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_first = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_last = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re = sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine2_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine2_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine2_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable | sdram_bankmachine2_cmd_buffer_lookahead_replace));
assign sdram_bankmachine2_cmd_buffer_lookahead_do_read = (sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re);
assign sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine2_cmd_buffer_lookahead_consume;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout = sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable = (sdram_bankmachine2_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable = (sdram_bankmachine2_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine2_cmd_buffer_sink_ready = ((~sdram_bankmachine2_cmd_buffer_source_valid) | sdram_bankmachine2_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine2_req_wdata_ready <= 1'd0;
	sdram_bankmachine2_req_rdata_valid <= 1'd0;
	sdram_bankmachine2_refresh_gnt <= 1'd0;
	sdram_bankmachine2_cmd_valid <= 1'd0;
	subfragments_bankmachine2_next_state <= 3'd0;
	sdram_bankmachine2_row_open <= 1'd0;
	sdram_bankmachine2_row_close <= 1'd0;
	sdram_bankmachine2_cmd_payload_cas <= 1'd0;
	sdram_bankmachine2_cmd_payload_ras <= 1'd0;
	sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine2_cmd_payload_we <= 1'd0;
	sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
	subfragments_bankmachine2_next_state <= subfragments_bankmachine2_state;
	case (subfragments_bankmachine2_state)
		1'd1: begin
			if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
				sdram_bankmachine2_cmd_valid <= 1'd1;
				if (sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 2'd3;
				end
				sdram_bankmachine2_cmd_payload_ras <= 1'd1;
				sdram_bankmachine2_cmd_payload_we <= 1'd1;
				sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine2_twtpcon_ready & sdram_bankmachine2_trascon_ready)) begin
				subfragments_bankmachine2_next_state <= 2'd3;
			end
			sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine2_trccon_ready) begin
				sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine2_row_open <= 1'd1;
				sdram_bankmachine2_cmd_valid <= 1'd1;
				sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 1'd0;
				end
				sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine2_twtpcon_ready) begin
				sdram_bankmachine2_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine2_row_close <= 1'd1;
			sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine2_refresh_req)) begin
				subfragments_bankmachine2_next_state <= 1'd0;
			end
		end
		default: begin
			if (sdram_bankmachine2_refresh_req) begin
				subfragments_bankmachine2_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (sdram_bankmachine2_row_opened) begin
						if (sdram_bankmachine2_row_hit) begin
							sdram_bankmachine2_cmd_valid <= 1'd1;
							if (sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								sdram_bankmachine2_req_wdata_ready <= sdram_bankmachine2_cmd_ready;
								sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine2_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine2_req_rdata_valid <= sdram_bankmachine2_cmd_ready;
								sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine2_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine2_cmd_ready & sdram_bankmachine2_auto_precharge)) begin
								subfragments_bankmachine2_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine2_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine2_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_valid = sdram_bankmachine3_req_valid;
assign sdram_bankmachine3_req_ready = sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we = sdram_bankmachine3_req_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr = sdram_bankmachine3_req_addr;
assign sdram_bankmachine3_cmd_buffer_sink_valid = sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_ready = sdram_bankmachine3_cmd_buffer_sink_ready;
assign sdram_bankmachine3_cmd_buffer_sink_first = sdram_bankmachine3_cmd_buffer_lookahead_source_first;
assign sdram_bankmachine3_cmd_buffer_sink_last = sdram_bankmachine3_cmd_buffer_lookahead_source_last;
assign sdram_bankmachine3_cmd_buffer_sink_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
assign sdram_bankmachine3_cmd_buffer_sink_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
assign sdram_bankmachine3_cmd_buffer_source_ready = (sdram_bankmachine3_req_wdata_ready | sdram_bankmachine3_req_rdata_valid);
assign sdram_bankmachine3_req_lock = (sdram_bankmachine3_cmd_buffer_lookahead_source_valid | sdram_bankmachine3_cmd_buffer_source_valid);
assign sdram_bankmachine3_row_hit = (sdram_bankmachine3_row == sdram_bankmachine3_cmd_buffer_source_payload_addr[22:10]);
assign sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
	sdram_bankmachine3_cmd_payload_a <= 13'd0;
	if (sdram_bankmachine3_row_col_n_addr_sel) begin
		sdram_bankmachine3_cmd_payload_a <= sdram_bankmachine3_cmd_buffer_source_payload_addr[22:10];
	end else begin
		sdram_bankmachine3_cmd_payload_a <= ((sdram_bankmachine3_auto_precharge <<< 4'd10) | {sdram_bankmachine3_cmd_buffer_source_payload_addr[9:0], {0{1'd0}}});
	end
end
assign sdram_bankmachine3_twtpcon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_cmd_payload_is_write);
assign sdram_bankmachine3_trccon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
assign sdram_bankmachine3_trascon_valid = ((sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_ready) & sdram_bankmachine3_row_open);
always @(*) begin
	sdram_bankmachine3_auto_precharge <= 1'd0;
	if ((sdram_bankmachine3_cmd_buffer_lookahead_source_valid & sdram_bankmachine3_cmd_buffer_source_valid)) begin
		if ((sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr[22:10] != sdram_bankmachine3_cmd_buffer_source_payload_addr[22:10])) begin
			sdram_bankmachine3_auto_precharge <= (sdram_bankmachine3_row_close == 1'd0);
		end
	end
end
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din = {sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr, sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we};
assign {sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign sdram_bankmachine3_cmd_buffer_lookahead_sink_ready = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we = sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first = sdram_bankmachine3_cmd_buffer_lookahead_sink_first;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last = sdram_bankmachine3_cmd_buffer_lookahead_sink_last;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_valid = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_first = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_last = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
assign sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr = sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re = sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
always @(*) begin
	sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (sdram_bankmachine3_cmd_buffer_lookahead_replace) begin
		sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= (sdram_bankmachine3_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= sdram_bankmachine3_cmd_buffer_lookahead_produce;
	end
end
assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w = sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_we = (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable | sdram_bankmachine3_cmd_buffer_lookahead_replace));
assign sdram_bankmachine3_cmd_buffer_lookahead_do_read = (sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re);
assign sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr = sdram_bankmachine3_cmd_buffer_lookahead_consume;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout = sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable = (sdram_bankmachine3_cmd_buffer_lookahead_level != 4'd8);
assign sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable = (sdram_bankmachine3_cmd_buffer_lookahead_level != 1'd0);
assign sdram_bankmachine3_cmd_buffer_sink_ready = ((~sdram_bankmachine3_cmd_buffer_source_valid) | sdram_bankmachine3_cmd_buffer_source_ready);
always @(*) begin
	sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
	sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
	sdram_bankmachine3_req_wdata_ready <= 1'd0;
	sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
	sdram_bankmachine3_req_rdata_valid <= 1'd0;
	sdram_bankmachine3_refresh_gnt <= 1'd0;
	subfragments_bankmachine3_next_state <= 3'd0;
	sdram_bankmachine3_cmd_valid <= 1'd0;
	sdram_bankmachine3_row_open <= 1'd0;
	sdram_bankmachine3_row_close <= 1'd0;
	sdram_bankmachine3_cmd_payload_cas <= 1'd0;
	sdram_bankmachine3_cmd_payload_ras <= 1'd0;
	sdram_bankmachine3_cmd_payload_we <= 1'd0;
	sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
	subfragments_bankmachine3_next_state <= subfragments_bankmachine3_state;
	case (subfragments_bankmachine3_state)
		1'd1: begin
			if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
				sdram_bankmachine3_cmd_valid <= 1'd1;
				if (sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 2'd3;
				end
				sdram_bankmachine3_cmd_payload_ras <= 1'd1;
				sdram_bankmachine3_cmd_payload_we <= 1'd1;
				sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
			sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd2: begin
			if ((sdram_bankmachine3_twtpcon_ready & sdram_bankmachine3_trascon_ready)) begin
				subfragments_bankmachine3_next_state <= 2'd3;
			end
			sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd3: begin
			if (sdram_bankmachine3_trccon_ready) begin
				sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
				sdram_bankmachine3_row_open <= 1'd1;
				sdram_bankmachine3_cmd_valid <= 1'd1;
				sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
				if (sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 1'd0;
				end
				sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (sdram_bankmachine3_twtpcon_ready) begin
				sdram_bankmachine3_refresh_gnt <= 1'd1;
			end
			sdram_bankmachine3_row_close <= 1'd1;
			sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			if ((~sdram_bankmachine3_refresh_req)) begin
				subfragments_bankmachine3_next_state <= 1'd0;
			end
		end
		default: begin
			if (sdram_bankmachine3_refresh_req) begin
				subfragments_bankmachine3_next_state <= 3'd4;
			end else begin
				if (sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (sdram_bankmachine3_row_opened) begin
						if (sdram_bankmachine3_row_hit) begin
							sdram_bankmachine3_cmd_valid <= 1'd1;
							if (sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								sdram_bankmachine3_req_wdata_ready <= sdram_bankmachine3_cmd_ready;
								sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
								sdram_bankmachine3_cmd_payload_we <= 1'd1;
							end else begin
								sdram_bankmachine3_req_rdata_valid <= sdram_bankmachine3_cmd_ready;
								sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
							end
							sdram_bankmachine3_cmd_payload_cas <= 1'd1;
							if ((sdram_bankmachine3_cmd_ready & sdram_bankmachine3_auto_precharge)) begin
								subfragments_bankmachine3_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine3_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine3_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign sdram_choose_req_want_cmds = 1'd1;
assign sdram_trrdcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & ((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we)));
assign sdram_tfawcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & ((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we)));
assign sdram_ras_allowed = (sdram_trrdcon_ready & sdram_tfawcon_ready);
assign sdram_tccdcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_cmd_payload_is_write | sdram_choose_req_cmd_payload_is_read));
assign sdram_cas_allowed = sdram_tccdcon_ready;
assign sdram_twtrcon_valid = ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
assign sdram_read_available = ((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_read) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_read)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_read)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_read));
assign sdram_write_available = ((((sdram_bankmachine0_cmd_valid & sdram_bankmachine0_cmd_payload_is_write) | (sdram_bankmachine1_cmd_valid & sdram_bankmachine1_cmd_payload_is_write)) | (sdram_bankmachine2_cmd_valid & sdram_bankmachine2_cmd_payload_is_write)) | (sdram_bankmachine3_cmd_valid & sdram_bankmachine3_cmd_payload_is_write));
assign sdram_max_time0 = (sdram_time0 == 1'd0);
assign sdram_max_time1 = (sdram_time1 == 1'd0);
assign sdram_bankmachine0_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine1_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine2_refresh_req = sdram_cmd_valid;
assign sdram_bankmachine3_refresh_req = sdram_cmd_valid;
assign sdram_go_to_refresh = (((sdram_bankmachine0_refresh_gnt & sdram_bankmachine1_refresh_gnt) & sdram_bankmachine2_refresh_gnt) & sdram_bankmachine3_refresh_gnt);
assign sdram_interface_rdata = {sdram_dfi_p0_rddata};
assign {sdram_dfi_p0_wrdata} = sdram_interface_wdata;
assign {sdram_dfi_p0_wrdata_mask} = (~sdram_interface_wdata_we);
always @(*) begin
	sdram_choose_cmd_valids <= 4'd0;
	sdram_choose_cmd_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
	sdram_choose_cmd_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_cmd_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_cmd_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_cmd_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_cmd_want_writes))));
end
assign sdram_choose_cmd_request = sdram_choose_cmd_valids;
assign sdram_choose_cmd_cmd_valid = rhs_array_muxed0;
assign sdram_choose_cmd_cmd_payload_a = rhs_array_muxed1;
assign sdram_choose_cmd_cmd_payload_ba = rhs_array_muxed2;
assign sdram_choose_cmd_cmd_payload_is_read = rhs_array_muxed3;
assign sdram_choose_cmd_cmd_payload_is_write = rhs_array_muxed4;
assign sdram_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed5;
always @(*) begin
	sdram_choose_cmd_cmd_payload_cas <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_cas <= t_array_muxed0;
	end
end
always @(*) begin
	sdram_choose_cmd_cmd_payload_ras <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_ras <= t_array_muxed1;
	end
end
always @(*) begin
	sdram_choose_cmd_cmd_payload_we <= 1'd0;
	if (sdram_choose_cmd_cmd_valid) begin
		sdram_choose_cmd_cmd_payload_we <= t_array_muxed2;
	end
end
assign sdram_choose_cmd_ce = (sdram_choose_cmd_cmd_ready | (~sdram_choose_cmd_cmd_valid));
always @(*) begin
	sdram_choose_req_valids <= 4'd0;
	sdram_choose_req_valids[0] <= (sdram_bankmachine0_cmd_valid & (((sdram_bankmachine0_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine0_cmd_payload_ras & (~sdram_bankmachine0_cmd_payload_cas)) & (~sdram_bankmachine0_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine0_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine0_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[1] <= (sdram_bankmachine1_cmd_valid & (((sdram_bankmachine1_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine1_cmd_payload_ras & (~sdram_bankmachine1_cmd_payload_cas)) & (~sdram_bankmachine1_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine1_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine1_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[2] <= (sdram_bankmachine2_cmd_valid & (((sdram_bankmachine2_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine2_cmd_payload_ras & (~sdram_bankmachine2_cmd_payload_cas)) & (~sdram_bankmachine2_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine2_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine2_cmd_payload_is_write == sdram_choose_req_want_writes))));
	sdram_choose_req_valids[3] <= (sdram_bankmachine3_cmd_valid & (((sdram_bankmachine3_cmd_payload_is_cmd & sdram_choose_req_want_cmds) & ((~((sdram_bankmachine3_cmd_payload_ras & (~sdram_bankmachine3_cmd_payload_cas)) & (~sdram_bankmachine3_cmd_payload_we))) | sdram_choose_req_want_activates)) | ((sdram_bankmachine3_cmd_payload_is_read == sdram_choose_req_want_reads) & (sdram_bankmachine3_cmd_payload_is_write == sdram_choose_req_want_writes))));
end
assign sdram_choose_req_request = sdram_choose_req_valids;
assign sdram_choose_req_cmd_valid = rhs_array_muxed6;
assign sdram_choose_req_cmd_payload_a = rhs_array_muxed7;
assign sdram_choose_req_cmd_payload_ba = rhs_array_muxed8;
assign sdram_choose_req_cmd_payload_is_read = rhs_array_muxed9;
assign sdram_choose_req_cmd_payload_is_write = rhs_array_muxed10;
assign sdram_choose_req_cmd_payload_is_cmd = rhs_array_muxed11;
always @(*) begin
	sdram_choose_req_cmd_payload_cas <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_cas <= t_array_muxed3;
	end
end
always @(*) begin
	sdram_choose_req_cmd_payload_ras <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_ras <= t_array_muxed4;
	end
end
always @(*) begin
	sdram_choose_req_cmd_payload_we <= 1'd0;
	if (sdram_choose_req_cmd_valid) begin
		sdram_choose_req_cmd_payload_we <= t_array_muxed5;
	end
end
always @(*) begin
	sdram_bankmachine0_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd0))) begin
		sdram_bankmachine0_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd0))) begin
		sdram_bankmachine0_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine1_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 1'd1))) begin
		sdram_bankmachine1_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 1'd1))) begin
		sdram_bankmachine1_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine2_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd2))) begin
		sdram_bankmachine2_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd2))) begin
		sdram_bankmachine2_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	sdram_bankmachine3_cmd_ready <= 1'd0;
	if (((sdram_choose_cmd_cmd_valid & sdram_choose_cmd_cmd_ready) & (sdram_choose_cmd_grant == 2'd3))) begin
		sdram_bankmachine3_cmd_ready <= 1'd1;
	end
	if (((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & (sdram_choose_req_grant == 2'd3))) begin
		sdram_bankmachine3_cmd_ready <= 1'd1;
	end
end
assign sdram_choose_req_ce = (sdram_choose_req_cmd_ready | (~sdram_choose_req_cmd_valid));
assign sdram_dfi_p0_reset_n = 1'd1;
assign sdram_dfi_p0_cke = {1{sdram_steerer0}};
assign sdram_dfi_p0_odt = {1{sdram_steerer1}};
always @(*) begin
	sdram_choose_req_want_writes <= 1'd0;
	sdram_cmd_ready <= 1'd0;
	sdram_choose_req_want_activates <= 1'd0;
	subfragments_multiplexer_next_state <= 3'd0;
	sdram_choose_req_cmd_ready <= 1'd0;
	sdram_steerer_sel <= 2'd0;
	sdram_en1 <= 1'd0;
	sdram_en0 <= 1'd0;
	sdram_choose_req_want_reads <= 1'd0;
	sdram_choose_req_want_activates <= sdram_ras_allowed;
	subfragments_multiplexer_next_state <= subfragments_multiplexer_state;
	case (subfragments_multiplexer_state)
		1'd1: begin
			sdram_en1 <= 1'd1;
			sdram_choose_req_want_writes <= 1'd1;
			if (1'd1) begin
				sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
			end else begin
				sdram_choose_req_want_activates <= sdram_ras_allowed;
				sdram_choose_req_cmd_ready <= ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed);
				sdram_choose_req_cmd_ready <= sdram_cas_allowed;
			end
			sdram_steerer_sel <= 1'd0;
			if (1'd1) begin
				sdram_steerer_sel <= 2'd2;
			end
			if (1'd1) begin
				sdram_steerer_sel <= 1'd1;
			end
			if (sdram_read_available) begin
				if (((~sdram_write_available) | sdram_max_time1)) begin
					subfragments_multiplexer_next_state <= 2'd3;
				end
			end
			if (sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			sdram_steerer_sel <= 2'd3;
			sdram_cmd_ready <= 1'd1;
			if (sdram_cmd_last) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (sdram_twtrcon_ready) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			subfragments_multiplexer_next_state <= 3'd5;
		end
		3'd5: begin
			subfragments_multiplexer_next_state <= 1'd1;
		end
		default: begin
			sdram_en0 <= 1'd1;
			sdram_choose_req_want_reads <= 1'd1;
			if (1'd1) begin
				sdram_choose_req_cmd_ready <= (sdram_cas_allowed & ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed));
			end else begin
				sdram_choose_req_want_activates <= sdram_ras_allowed;
				sdram_choose_req_cmd_ready <= ((~((sdram_choose_req_cmd_payload_ras & (~sdram_choose_req_cmd_payload_cas)) & (~sdram_choose_req_cmd_payload_we))) | sdram_ras_allowed);
				sdram_choose_req_cmd_ready <= sdram_cas_allowed;
			end
			sdram_steerer_sel <= 1'd0;
			if (1'd1) begin
				sdram_steerer_sel <= 2'd2;
			end
			if (1'd1) begin
				sdram_steerer_sel <= 1'd1;
			end
			if (sdram_write_available) begin
				if (((~sdram_read_available) | sdram_max_time0)) begin
					subfragments_multiplexer_next_state <= 3'd4;
				end
			end
			if (sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
	endcase
end
assign subfragments_roundrobin0_request = {(((port_cmd_payload_addr[11:10] == 1'd0) & (~(((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin0_ce = ((~sdram_interface_bank0_valid) & (~sdram_interface_bank0_lock));
assign sdram_interface_bank0_addr = rhs_array_muxed12;
assign sdram_interface_bank0_we = rhs_array_muxed13;
assign sdram_interface_bank0_valid = rhs_array_muxed14;
assign subfragments_roundrobin1_request = {(((port_cmd_payload_addr[11:10] == 1'd1) & (~(((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin1_ce = ((~sdram_interface_bank1_valid) & (~sdram_interface_bank1_lock));
assign sdram_interface_bank1_addr = rhs_array_muxed15;
assign sdram_interface_bank1_we = rhs_array_muxed16;
assign sdram_interface_bank1_valid = rhs_array_muxed17;
assign subfragments_roundrobin2_request = {(((port_cmd_payload_addr[11:10] == 2'd2) & (~(((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin2_ce = ((~sdram_interface_bank2_valid) & (~sdram_interface_bank2_lock));
assign sdram_interface_bank2_addr = rhs_array_muxed18;
assign sdram_interface_bank2_we = rhs_array_muxed19;
assign sdram_interface_bank2_valid = rhs_array_muxed20;
assign subfragments_roundrobin3_request = {(((port_cmd_payload_addr[11:10] == 2'd3) & (~(((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))))) & port_cmd_valid)};
assign subfragments_roundrobin3_ce = ((~sdram_interface_bank3_valid) & (~sdram_interface_bank3_lock));
assign sdram_interface_bank3_addr = rhs_array_muxed21;
assign sdram_interface_bank3_we = rhs_array_muxed22;
assign sdram_interface_bank3_valid = rhs_array_muxed23;
assign port_cmd_ready = ((((1'd0 | (((subfragments_roundrobin0_grant == 1'd0) & ((port_cmd_payload_addr[11:10] == 1'd0) & (~(((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0)))))) & sdram_interface_bank0_ready)) | (((subfragments_roundrobin1_grant == 1'd0) & ((port_cmd_payload_addr[11:10] == 1'd1) & (~(((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0)))))) & sdram_interface_bank1_ready)) | (((subfragments_roundrobin2_grant == 1'd0) & ((port_cmd_payload_addr[11:10] == 2'd2) & (~(((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0)))))) & sdram_interface_bank2_ready)) | (((subfragments_roundrobin3_grant == 1'd0) & ((port_cmd_payload_addr[11:10] == 2'd3) & (~(((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0)))))) & sdram_interface_bank3_ready));
assign port_wdata_ready = subfragments_new_master_wdata_ready;
assign port_rdata_valid = subfragments_new_master_rdata_valid3;
always @(*) begin
	sdram_interface_wdata_we <= 1'd0;
	sdram_interface_wdata <= 8'd0;
	case ({subfragments_new_master_wdata_ready})
		1'd1: begin
			sdram_interface_wdata <= port_wdata_payload_data;
			sdram_interface_wdata_we <= port_wdata_payload_we;
		end
		default: begin
			sdram_interface_wdata <= 1'd0;
			sdram_interface_wdata_we <= 1'd0;
		end
	endcase
end
assign port_rdata_payload_data = sdram_interface_rdata;
assign subfragments_roundrobin0_grant = 1'd0;
assign subfragments_roundrobin1_grant = 1'd0;
assign subfragments_roundrobin2_grant = 1'd0;
assign subfragments_roundrobin3_grant = 1'd0;
assign data_port_adr = wb_sdram_adr[7:2];
always @(*) begin
	data_port_we <= 16'd0;
	data_port_dat_w <= 128'd0;
	if (write_from_slave) begin
		data_port_dat_w <= interface_dat_r;
		data_port_we <= {16{1'd1}};
	end else begin
		data_port_dat_w <= {4{wb_sdram_dat_w}};
		if ((((wb_sdram_cyc & wb_sdram_stb) & wb_sdram_we) & wb_sdram_ack)) begin
			data_port_we <= {({4{(wb_sdram_adr[1:0] == 1'd0)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 1'd1)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 2'd2)}} & wb_sdram_sel), ({4{(wb_sdram_adr[1:0] == 2'd3)}} & wb_sdram_sel)};
		end
	end
end
assign interface_dat_w = data_port_dat_r;
assign interface_sel = 16'd65535;
always @(*) begin
	wb_sdram_dat_r <= 32'd0;
	case (adr_offset_r)
		1'd0: begin
			wb_sdram_dat_r <= data_port_dat_r[127:96];
		end
		1'd1: begin
			wb_sdram_dat_r <= data_port_dat_r[95:64];
		end
		2'd2: begin
			wb_sdram_dat_r <= data_port_dat_r[63:32];
		end
		default: begin
			wb_sdram_dat_r <= data_port_dat_r[31:0];
		end
	endcase
end
assign {tag_do_dirty, tag_do_tag} = tag_port_dat_r;
assign tag_port_dat_w = {tag_di_dirty, tag_di_tag};
assign tag_port_adr = wb_sdram_adr[7:2];
assign tag_di_tag = wb_sdram_adr[29:8];
assign interface_adr = {tag_do_tag, wb_sdram_adr[7:2]};
always @(*) begin
	wb_sdram_ack <= 1'd0;
	tag_di_dirty <= 1'd0;
	word_clr <= 1'd0;
	word_inc <= 1'd0;
	subfragments_next_state <= 2'd0;
	write_from_slave <= 1'd0;
	interface_cyc <= 1'd0;
	interface_stb <= 1'd0;
	tag_port_we <= 1'd0;
	interface_we <= 1'd0;
	subfragments_next_state <= subfragments_state;
	case (subfragments_state)
		1'd1: begin
			word_clr <= 1'd1;
			if ((tag_do_tag == wb_sdram_adr[29:8])) begin
				wb_sdram_ack <= 1'd1;
				if (wb_sdram_we) begin
					tag_di_dirty <= 1'd1;
					tag_port_we <= 1'd1;
				end
				subfragments_next_state <= 1'd0;
			end else begin
				if (tag_do_dirty) begin
					subfragments_next_state <= 2'd2;
				end else begin
					tag_port_we <= 1'd1;
					word_clr <= 1'd1;
					subfragments_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			interface_stb <= 1'd1;
			interface_cyc <= 1'd1;
			interface_we <= 1'd1;
			if (interface_ack) begin
				word_inc <= 1'd1;
				if (1'd1) begin
					tag_port_we <= 1'd1;
					word_clr <= 1'd1;
					subfragments_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			interface_stb <= 1'd1;
			interface_cyc <= 1'd1;
			interface_we <= 1'd0;
			if (interface_ack) begin
				write_from_slave <= 1'd1;
				word_inc <= 1'd1;
				if (1'd1) begin
					subfragments_next_state <= 1'd1;
				end else begin
					subfragments_next_state <= 2'd3;
				end
			end
		end
		default: begin
			if ((wb_sdram_cyc & wb_sdram_stb)) begin
				subfragments_next_state <= 1'd1;
			end
		end
	endcase
end
assign wishbone_bridge_cmd_payload_addr = (interface_adr - 27'd67108864);
assign wishbone_bridge_cmd_payload_we = interface_we;
assign wishbone_bridge_cmd_last = (~interface_we);
assign wishbone_bridge_flush = (~interface_cyc);
always @(*) begin
	wishbone_bridge_wdata_valid <= 1'd0;
	wishbone_bridge_wdata_valid <= (interface_stb & interface_we);
	if (1'd0) begin
		if ((~wishbone_bridge_is_ongoing)) begin
			wishbone_bridge_wdata_valid <= 1'd0;
		end
	end
end
assign wishbone_bridge_wdata_payload_data = interface_dat_w;
assign wishbone_bridge_wdata_payload_we = interface_sel;
assign wishbone_bridge_rdata_ready = 1'd1;
always @(*) begin
	subfragments_litedramnativeportconverter_next_state <= 1'd0;
	port_cmd_valid <= 1'd0;
	wishbone_bridge_count_litedramnativeportconverter_next_value <= 4'd0;
	wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd0;
	wishbone_bridge_cmd_ready <= 1'd0;
	port_cmd_payload_we <= 1'd0;
	port_cmd_payload_addr <= 25'd0;
	subfragments_litedramnativeportconverter_next_state <= subfragments_litedramnativeportconverter_state;
	case (subfragments_litedramnativeportconverter_state)
		1'd1: begin
			port_cmd_valid <= 1'd1;
			port_cmd_payload_we <= wishbone_bridge_cmd_payload_we;
			port_cmd_payload_addr <= ((wishbone_bridge_cmd_payload_addr * 5'd16) + wishbone_bridge_count);
			if (port_cmd_ready) begin
				wishbone_bridge_count_litedramnativeportconverter_next_value <= (wishbone_bridge_count + 1'd1);
				wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd1;
				if ((wishbone_bridge_count == 4'd15)) begin
					wishbone_bridge_cmd_ready <= 1'd1;
					subfragments_litedramnativeportconverter_next_state <= 1'd0;
				end
			end
		end
		default: begin
			wishbone_bridge_count_litedramnativeportconverter_next_value <= 1'd0;
			wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd1;
			if (wishbone_bridge_cmd_valid) begin
				subfragments_litedramnativeportconverter_next_state <= 1'd1;
			end
		end
	endcase
end
assign wishbone_bridge_wdata_converter_converter_sink_valid = wishbone_bridge_wdata_converter_sink_valid;
assign wishbone_bridge_wdata_converter_converter_sink_first = wishbone_bridge_wdata_converter_sink_first;
assign wishbone_bridge_wdata_converter_converter_sink_last = wishbone_bridge_wdata_converter_sink_last;
assign wishbone_bridge_wdata_converter_sink_ready = wishbone_bridge_wdata_converter_converter_sink_ready;
always @(*) begin
	wishbone_bridge_wdata_converter_converter_sink_payload_data <= 144'd0;
	wishbone_bridge_wdata_converter_converter_sink_payload_data[7:0] <= wishbone_bridge_wdata_converter_sink_payload_data[7:0];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[8] <= wishbone_bridge_wdata_converter_sink_payload_we[0];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[16:9] <= wishbone_bridge_wdata_converter_sink_payload_data[15:8];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[17] <= wishbone_bridge_wdata_converter_sink_payload_we[1];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[25:18] <= wishbone_bridge_wdata_converter_sink_payload_data[23:16];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[26] <= wishbone_bridge_wdata_converter_sink_payload_we[2];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[34:27] <= wishbone_bridge_wdata_converter_sink_payload_data[31:24];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[35] <= wishbone_bridge_wdata_converter_sink_payload_we[3];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[43:36] <= wishbone_bridge_wdata_converter_sink_payload_data[39:32];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[44] <= wishbone_bridge_wdata_converter_sink_payload_we[4];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[52:45] <= wishbone_bridge_wdata_converter_sink_payload_data[47:40];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[53] <= wishbone_bridge_wdata_converter_sink_payload_we[5];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[61:54] <= wishbone_bridge_wdata_converter_sink_payload_data[55:48];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[62] <= wishbone_bridge_wdata_converter_sink_payload_we[6];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[70:63] <= wishbone_bridge_wdata_converter_sink_payload_data[63:56];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[71] <= wishbone_bridge_wdata_converter_sink_payload_we[7];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[79:72] <= wishbone_bridge_wdata_converter_sink_payload_data[71:64];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[80] <= wishbone_bridge_wdata_converter_sink_payload_we[8];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[88:81] <= wishbone_bridge_wdata_converter_sink_payload_data[79:72];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[89] <= wishbone_bridge_wdata_converter_sink_payload_we[9];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[97:90] <= wishbone_bridge_wdata_converter_sink_payload_data[87:80];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[98] <= wishbone_bridge_wdata_converter_sink_payload_we[10];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[106:99] <= wishbone_bridge_wdata_converter_sink_payload_data[95:88];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[107] <= wishbone_bridge_wdata_converter_sink_payload_we[11];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[115:108] <= wishbone_bridge_wdata_converter_sink_payload_data[103:96];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[116] <= wishbone_bridge_wdata_converter_sink_payload_we[12];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[124:117] <= wishbone_bridge_wdata_converter_sink_payload_data[111:104];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[125] <= wishbone_bridge_wdata_converter_sink_payload_we[13];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[133:126] <= wishbone_bridge_wdata_converter_sink_payload_data[119:112];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[134] <= wishbone_bridge_wdata_converter_sink_payload_we[14];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[142:135] <= wishbone_bridge_wdata_converter_sink_payload_data[127:120];
	wishbone_bridge_wdata_converter_converter_sink_payload_data[143] <= wishbone_bridge_wdata_converter_sink_payload_we[15];
end
assign wishbone_bridge_wdata_converter_source_valid = wishbone_bridge_wdata_converter_source_source_valid;
assign wishbone_bridge_wdata_converter_source_first = wishbone_bridge_wdata_converter_source_source_first;
assign wishbone_bridge_wdata_converter_source_last = wishbone_bridge_wdata_converter_source_source_last;
assign wishbone_bridge_wdata_converter_source_source_ready = wishbone_bridge_wdata_converter_source_ready;
assign {wishbone_bridge_wdata_converter_source_payload_we, wishbone_bridge_wdata_converter_source_payload_data} = wishbone_bridge_wdata_converter_source_source_payload_data;
assign wishbone_bridge_wdata_converter_source_source_valid = wishbone_bridge_wdata_converter_converter_source_valid;
assign wishbone_bridge_wdata_converter_converter_source_ready = wishbone_bridge_wdata_converter_source_source_ready;
assign wishbone_bridge_wdata_converter_source_source_first = wishbone_bridge_wdata_converter_converter_source_first;
assign wishbone_bridge_wdata_converter_source_source_last = wishbone_bridge_wdata_converter_converter_source_last;
assign wishbone_bridge_wdata_converter_source_source_payload_data = wishbone_bridge_wdata_converter_converter_source_payload_data;
assign wishbone_bridge_wdata_converter_converter_first = (wishbone_bridge_wdata_converter_converter_mux == 1'd0);
assign wishbone_bridge_wdata_converter_converter_last = (wishbone_bridge_wdata_converter_converter_mux == 4'd15);
assign wishbone_bridge_wdata_converter_converter_source_valid = wishbone_bridge_wdata_converter_converter_sink_valid;
assign wishbone_bridge_wdata_converter_converter_source_first = (wishbone_bridge_wdata_converter_converter_sink_first & wishbone_bridge_wdata_converter_converter_first);
assign wishbone_bridge_wdata_converter_converter_source_last = (wishbone_bridge_wdata_converter_converter_sink_last & wishbone_bridge_wdata_converter_converter_last);
assign wishbone_bridge_wdata_converter_converter_sink_ready = (wishbone_bridge_wdata_converter_converter_last & wishbone_bridge_wdata_converter_converter_source_ready);
always @(*) begin
	wishbone_bridge_wdata_converter_converter_source_payload_data <= 9'd0;
	case (wishbone_bridge_wdata_converter_converter_mux)
		1'd0: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[8:0];
		end
		1'd1: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[17:9];
		end
		2'd2: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[26:18];
		end
		2'd3: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[35:27];
		end
		3'd4: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[44:36];
		end
		3'd5: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[53:45];
		end
		3'd6: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[62:54];
		end
		3'd7: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[71:63];
		end
		4'd8: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[80:72];
		end
		4'd9: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[89:81];
		end
		4'd10: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[98:90];
		end
		4'd11: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[107:99];
		end
		4'd12: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[116:108];
		end
		4'd13: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[125:117];
		end
		4'd14: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[134:126];
		end
		default: begin
			wishbone_bridge_wdata_converter_converter_source_payload_data <= wishbone_bridge_wdata_converter_converter_sink_payload_data[143:135];
		end
	endcase
end
assign wishbone_bridge_wdata_converter_converter_source_payload_valid_token_count = wishbone_bridge_wdata_converter_converter_last;
assign wishbone_bridge_wdata_converter_sink_valid = wishbone_bridge_wdata_valid;
assign wishbone_bridge_wdata_ready = wishbone_bridge_wdata_converter_sink_ready;
assign wishbone_bridge_wdata_converter_sink_first = wishbone_bridge_wdata_first;
assign wishbone_bridge_wdata_converter_sink_last = wishbone_bridge_wdata_last;
assign wishbone_bridge_wdata_converter_sink_payload_data = wishbone_bridge_wdata_payload_data;
assign wishbone_bridge_wdata_converter_sink_payload_we = wishbone_bridge_wdata_payload_we;
assign port_wdata_valid = wishbone_bridge_wdata_converter_source_valid;
assign wishbone_bridge_wdata_converter_source_ready = port_wdata_ready;
assign port_wdata_first = wishbone_bridge_wdata_converter_source_first;
assign port_wdata_last = wishbone_bridge_wdata_converter_source_last;
assign port_wdata_payload_data = wishbone_bridge_wdata_converter_source_payload_data;
assign port_wdata_payload_we = wishbone_bridge_wdata_converter_source_payload_we;
assign wishbone_bridge_rdata_converter_converter_sink_valid = wishbone_bridge_rdata_converter_sink_valid;
assign wishbone_bridge_rdata_converter_converter_sink_first = wishbone_bridge_rdata_converter_sink_first;
assign wishbone_bridge_rdata_converter_converter_sink_last = wishbone_bridge_rdata_converter_sink_last;
assign wishbone_bridge_rdata_converter_sink_ready = wishbone_bridge_rdata_converter_converter_sink_ready;
assign wishbone_bridge_rdata_converter_converter_sink_payload_data = {wishbone_bridge_rdata_converter_sink_payload_data};
assign wishbone_bridge_rdata_converter_source_valid = wishbone_bridge_rdata_converter_source_source_valid;
assign wishbone_bridge_rdata_converter_source_first = wishbone_bridge_rdata_converter_source_source_first;
assign wishbone_bridge_rdata_converter_source_last = wishbone_bridge_rdata_converter_source_source_last;
assign wishbone_bridge_rdata_converter_source_source_ready = wishbone_bridge_rdata_converter_source_ready;
always @(*) begin
	wishbone_bridge_rdata_converter_source_payload_data <= 128'd0;
	wishbone_bridge_rdata_converter_source_payload_data[7:0] <= wishbone_bridge_rdata_converter_source_source_payload_data[7:0];
	wishbone_bridge_rdata_converter_source_payload_data[15:8] <= wishbone_bridge_rdata_converter_source_source_payload_data[15:8];
	wishbone_bridge_rdata_converter_source_payload_data[23:16] <= wishbone_bridge_rdata_converter_source_source_payload_data[23:16];
	wishbone_bridge_rdata_converter_source_payload_data[31:24] <= wishbone_bridge_rdata_converter_source_source_payload_data[31:24];
	wishbone_bridge_rdata_converter_source_payload_data[39:32] <= wishbone_bridge_rdata_converter_source_source_payload_data[39:32];
	wishbone_bridge_rdata_converter_source_payload_data[47:40] <= wishbone_bridge_rdata_converter_source_source_payload_data[47:40];
	wishbone_bridge_rdata_converter_source_payload_data[55:48] <= wishbone_bridge_rdata_converter_source_source_payload_data[55:48];
	wishbone_bridge_rdata_converter_source_payload_data[63:56] <= wishbone_bridge_rdata_converter_source_source_payload_data[63:56];
	wishbone_bridge_rdata_converter_source_payload_data[71:64] <= wishbone_bridge_rdata_converter_source_source_payload_data[71:64];
	wishbone_bridge_rdata_converter_source_payload_data[79:72] <= wishbone_bridge_rdata_converter_source_source_payload_data[79:72];
	wishbone_bridge_rdata_converter_source_payload_data[87:80] <= wishbone_bridge_rdata_converter_source_source_payload_data[87:80];
	wishbone_bridge_rdata_converter_source_payload_data[95:88] <= wishbone_bridge_rdata_converter_source_source_payload_data[95:88];
	wishbone_bridge_rdata_converter_source_payload_data[103:96] <= wishbone_bridge_rdata_converter_source_source_payload_data[103:96];
	wishbone_bridge_rdata_converter_source_payload_data[111:104] <= wishbone_bridge_rdata_converter_source_source_payload_data[111:104];
	wishbone_bridge_rdata_converter_source_payload_data[119:112] <= wishbone_bridge_rdata_converter_source_source_payload_data[119:112];
	wishbone_bridge_rdata_converter_source_payload_data[127:120] <= wishbone_bridge_rdata_converter_source_source_payload_data[127:120];
end
assign wishbone_bridge_rdata_converter_source_source_valid = wishbone_bridge_rdata_converter_converter_source_valid;
assign wishbone_bridge_rdata_converter_converter_source_ready = wishbone_bridge_rdata_converter_source_source_ready;
assign wishbone_bridge_rdata_converter_source_source_first = wishbone_bridge_rdata_converter_converter_source_first;
assign wishbone_bridge_rdata_converter_source_source_last = wishbone_bridge_rdata_converter_converter_source_last;
assign wishbone_bridge_rdata_converter_source_source_payload_data = wishbone_bridge_rdata_converter_converter_source_payload_data;
assign wishbone_bridge_rdata_converter_converter_sink_ready = ((~wishbone_bridge_rdata_converter_converter_strobe_all) | wishbone_bridge_rdata_converter_converter_source_ready);
assign wishbone_bridge_rdata_converter_converter_source_valid = wishbone_bridge_rdata_converter_converter_strobe_all;
assign wishbone_bridge_rdata_converter_converter_load_part = (wishbone_bridge_rdata_converter_converter_sink_valid & wishbone_bridge_rdata_converter_converter_sink_ready);
assign wishbone_bridge_rdata_converter_sink_valid = port_rdata_valid;
assign port_rdata_ready = wishbone_bridge_rdata_converter_sink_ready;
assign wishbone_bridge_rdata_converter_sink_first = port_rdata_first;
assign wishbone_bridge_rdata_converter_sink_last = port_rdata_last;
assign wishbone_bridge_rdata_converter_sink_payload_data = port_rdata_payload_data;
assign wishbone_bridge_rdata_valid = wishbone_bridge_rdata_converter_source_valid;
assign wishbone_bridge_rdata_converter_source_ready = wishbone_bridge_rdata_ready;
assign wishbone_bridge_rdata_first = wishbone_bridge_rdata_converter_source_first;
assign wishbone_bridge_rdata_last = wishbone_bridge_rdata_converter_source_last;
assign wishbone_bridge_rdata_payload_data = wishbone_bridge_rdata_converter_source_payload_data;
always @(*) begin
	wishbone_bridge_aborted_fsm_next_value <= 1'd0;
	wishbone_bridge_aborted_fsm_next_value_ce <= 1'd0;
	wishbone_bridge_cmd_valid <= 1'd0;
	subfragments_fsm_next_state <= 2'd0;
	interface_ack <= 1'd0;
	wishbone_bridge_is_ongoing <= 1'd0;
	interface_dat_r <= 128'd0;
	subfragments_fsm_next_state <= subfragments_fsm_state;
	case (subfragments_fsm_state)
		1'd1: begin
			wishbone_bridge_is_ongoing <= 1'd1;
			wishbone_bridge_aborted_fsm_next_value <= ((~interface_cyc) | wishbone_bridge_aborted);
			wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
			if ((wishbone_bridge_wdata_valid & wishbone_bridge_wdata_ready)) begin
				interface_ack <= (interface_cyc & (~wishbone_bridge_aborted));
				subfragments_fsm_next_state <= 1'd0;
			end
		end
		2'd2: begin
			wishbone_bridge_aborted_fsm_next_value <= ((~interface_cyc) | wishbone_bridge_aborted);
			wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
			if (wishbone_bridge_rdata_valid) begin
				interface_ack <= (interface_cyc & (~wishbone_bridge_aborted));
				interface_dat_r <= wishbone_bridge_rdata_payload_data;
				subfragments_fsm_next_state <= 1'd0;
			end
		end
		default: begin
			wishbone_bridge_cmd_valid <= (interface_cyc & interface_stb);
			if (((wishbone_bridge_cmd_valid & wishbone_bridge_cmd_ready) & interface_we)) begin
				subfragments_fsm_next_state <= 1'd1;
			end
			if (((wishbone_bridge_cmd_valid & wishbone_bridge_cmd_ready) & (~interface_we))) begin
				subfragments_fsm_next_state <= 2'd2;
			end
			wishbone_bridge_aborted_fsm_next_value <= 1'd0;
			wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
		end
	endcase
end
always @(*) begin
	basesoc_basesoc_wishbone_dat_r <= 32'd0;
	basesoc_next_state <= 2'd0;
	basesoc_basesoc_dat_w_next_value0 <= 32'd0;
	basesoc_basesoc_dat_w_next_value_ce0 <= 1'd0;
	basesoc_basesoc_wishbone_ack <= 1'd0;
	basesoc_basesoc_adr_next_value1 <= 14'd0;
	basesoc_basesoc_adr_next_value_ce1 <= 1'd0;
	basesoc_basesoc_we_next_value2 <= 1'd0;
	basesoc_basesoc_we_next_value_ce2 <= 1'd0;
	basesoc_next_state <= basesoc_state;
	case (basesoc_state)
		1'd1: begin
			basesoc_basesoc_adr_next_value1 <= 1'd0;
			basesoc_basesoc_adr_next_value_ce1 <= 1'd1;
			basesoc_basesoc_we_next_value2 <= 1'd0;
			basesoc_basesoc_we_next_value_ce2 <= 1'd1;
			basesoc_next_state <= 2'd2;
		end
		2'd2: begin
			basesoc_basesoc_wishbone_ack <= 1'd1;
			basesoc_basesoc_wishbone_dat_r <= basesoc_basesoc_dat_r;
			basesoc_next_state <= 1'd0;
		end
		default: begin
			basesoc_basesoc_dat_w_next_value0 <= basesoc_basesoc_wishbone_dat_w;
			basesoc_basesoc_dat_w_next_value_ce0 <= 1'd1;
			if ((basesoc_basesoc_wishbone_cyc & basesoc_basesoc_wishbone_stb)) begin
				basesoc_basesoc_adr_next_value1 <= basesoc_basesoc_wishbone_adr;
				basesoc_basesoc_adr_next_value_ce1 <= 1'd1;
				basesoc_basesoc_we_next_value2 <= (basesoc_basesoc_wishbone_we & (basesoc_basesoc_wishbone_sel != 1'd0));
				basesoc_basesoc_we_next_value_ce2 <= 1'd1;
				basesoc_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_shared_adr = rhs_array_muxed24;
assign basesoc_shared_dat_w = rhs_array_muxed25;
assign basesoc_shared_sel = rhs_array_muxed26;
assign basesoc_shared_cyc = rhs_array_muxed27;
assign basesoc_shared_stb = rhs_array_muxed28;
assign basesoc_shared_we = rhs_array_muxed29;
assign basesoc_shared_cti = rhs_array_muxed30;
assign basesoc_shared_bte = rhs_array_muxed31;
assign basesoc_serv_ibus_dat_r = basesoc_shared_dat_r;
assign basesoc_serv_dbus_dat_r = basesoc_shared_dat_r;
assign converted_interface_dat_r = basesoc_shared_dat_r;
assign basesoc_serv_ibus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd0));
assign basesoc_serv_dbus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd1));
assign converted_interface_ack = (basesoc_shared_ack & (basesoc_grant == 2'd2));
assign basesoc_serv_ibus_err = (basesoc_shared_err & (basesoc_grant == 1'd0));
assign basesoc_serv_dbus_err = (basesoc_shared_err & (basesoc_grant == 1'd1));
assign converted_interface_err = (basesoc_shared_err & (basesoc_grant == 2'd2));
assign basesoc_request = {converted_interface_cyc, basesoc_serv_dbus_cyc, basesoc_serv_ibus_cyc};
always @(*) begin
	basesoc_slave_sel <= 4'd0;
	basesoc_slave_sel[0] <= (basesoc_shared_adr[29:9] == 14'd8192);
	basesoc_slave_sel[1] <= (basesoc_shared_adr[29:22] == 8'd128);
	basesoc_slave_sel[2] <= (basesoc_shared_adr[29:23] == 6'd32);
	basesoc_slave_sel[3] <= (basesoc_shared_adr[29:14] == 16'd33280);
end
assign basesoc_ram_bus_adr = basesoc_shared_adr;
assign basesoc_ram_bus_dat_w = basesoc_shared_dat_w;
assign basesoc_ram_bus_sel = basesoc_shared_sel;
assign basesoc_ram_bus_stb = basesoc_shared_stb;
assign basesoc_ram_bus_we = basesoc_shared_we;
assign basesoc_ram_bus_cti = basesoc_shared_cti;
assign basesoc_ram_bus_bte = basesoc_shared_bte;
assign bus_adr = basesoc_shared_adr;
assign bus_dat_w = basesoc_shared_dat_w;
assign bus_sel = basesoc_shared_sel;
assign bus_stb = basesoc_shared_stb;
assign bus_we = basesoc_shared_we;
assign bus_cti = basesoc_shared_cti;
assign bus_bte = basesoc_shared_bte;
assign wb_sdram_adr = basesoc_shared_adr;
assign wb_sdram_dat_w = basesoc_shared_dat_w;
assign wb_sdram_sel = basesoc_shared_sel;
assign wb_sdram_stb = basesoc_shared_stb;
assign wb_sdram_we = basesoc_shared_we;
assign wb_sdram_cti = basesoc_shared_cti;
assign wb_sdram_bte = basesoc_shared_bte;
assign basesoc_basesoc_wishbone_adr = basesoc_shared_adr;
assign basesoc_basesoc_wishbone_dat_w = basesoc_shared_dat_w;
assign basesoc_basesoc_wishbone_sel = basesoc_shared_sel;
assign basesoc_basesoc_wishbone_stb = basesoc_shared_stb;
assign basesoc_basesoc_wishbone_we = basesoc_shared_we;
assign basesoc_basesoc_wishbone_cti = basesoc_shared_cti;
assign basesoc_basesoc_wishbone_bte = basesoc_shared_bte;
assign basesoc_ram_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[0]);
assign bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[1]);
assign wb_sdram_cyc = (basesoc_shared_cyc & basesoc_slave_sel[2]);
assign basesoc_basesoc_wishbone_cyc = (basesoc_shared_cyc & basesoc_slave_sel[3]);
assign basesoc_shared_err = (((basesoc_ram_bus_err | bus_err) | wb_sdram_err) | basesoc_basesoc_wishbone_err);
assign basesoc_wait = ((basesoc_shared_stb & basesoc_shared_cyc) & (~basesoc_shared_ack));
always @(*) begin
	basesoc_shared_ack <= 1'd0;
	basesoc_error <= 1'd0;
	basesoc_shared_dat_r <= 32'd0;
	basesoc_shared_ack <= (((basesoc_ram_bus_ack | bus_ack) | wb_sdram_ack) | basesoc_basesoc_wishbone_ack);
	basesoc_shared_dat_r <= (((({32{basesoc_slave_sel_r[0]}} & basesoc_ram_bus_dat_r) | ({32{basesoc_slave_sel_r[1]}} & bus_dat_r)) | ({32{basesoc_slave_sel_r[2]}} & wb_sdram_dat_r)) | ({32{basesoc_slave_sel_r[3]}} & basesoc_basesoc_wishbone_dat_r));
	if (basesoc_done) begin
		basesoc_shared_dat_r <= 32'd4294967295;
		basesoc_shared_ack <= 1'd1;
		basesoc_error <= 1'd1;
	end
end
assign basesoc_done = (basesoc_count == 1'd0);
assign basesoc_csr_bankarray_csrbank0_sel = (basesoc_csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd1);
assign basesoc_csr_bankarray_csrbank0_reset0_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_reset0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank0_reset0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank0_reset0_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_reset0_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank0_scratch0_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_scratch0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank0_scratch0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank0_scratch0_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_scratch0_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank0_bus_errors_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
	basesoc_csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank0_bus_errors_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_bus_errors_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	basesoc_soc_rst <= 1'd0;
	if (basesoc_reset_re) begin
		basesoc_soc_rst <= basesoc_reset_storage[0];
	end
end
assign basesoc_cpu_rst = basesoc_reset_storage[1];
assign basesoc_csr_bankarray_csrbank0_reset0_w = basesoc_reset_storage[1:0];
assign basesoc_csr_bankarray_csrbank0_scratch0_w = basesoc_scratch_storage[31:0];
assign basesoc_csr_bankarray_csrbank0_bus_errors_w = basesoc_bus_errors_status[31:0];
assign basesoc_bus_errors_we = basesoc_csr_bankarray_csrbank0_bus_errors_we;
assign basesoc_csr_bankarray_sel = (basesoc_csr_bankarray_sram_bus_adr[13:9] == 2'd2);
always @(*) begin
	basesoc_csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (basesoc_csr_bankarray_sel_r) begin
		basesoc_csr_bankarray_sram_bus_dat_r <= basesoc_csr_bankarray_dat_r;
	end
end
assign basesoc_csr_bankarray_adr = basesoc_csr_bankarray_sram_bus_adr[5:0];
assign basesoc_csr_bankarray_csrbank1_sel = (basesoc_csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd0);
assign basesoc_csr_bankarray_csrbank1_out0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[3:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_out0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank1_out0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank1_out0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_out0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_out0_w = storage[3:0];
assign basesoc_csr_bankarray_csrbank2_sel = (basesoc_csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd3);
assign basesoc_csr_bankarray_csrbank2_dfii_control0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[3:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_control0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_control0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank2_dfii_control0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_control0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[5:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign sdram_command_issue_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	sdram_command_issue_re <= 1'd0;
	sdram_command_issue_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		sdram_command_issue_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		sdram_command_issue_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[12:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign sdram_sel = sdram_storage[0];
assign sdram_cke1 = sdram_storage[1];
assign sdram_odt = sdram_storage[2];
assign sdram_reset_n = sdram_storage[3];
assign basesoc_csr_bankarray_csrbank2_dfii_control0_w = sdram_storage[3:0];
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_w = sdram_command_storage[5:0];
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_w = sdram_address_storage[12:0];
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_w = sdram_baddress_storage[1:0];
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w = sdram_wrdata_storage[7:0];
assign basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_w = sdram_rddata_status[7:0];
assign sdram_rddata_we = basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_we;
assign basesoc_csr_bankarray_csrbank3_sel = (basesoc_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign basesoc_csr_bankarray_csrbank3_bitbang0_r = basesoc_csr_bankarray_interface3_bank_bus_dat_w[3:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank3_bitbang0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank3_bitbang0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank3_sel & (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank3_bitbang0_re <= basesoc_csr_bankarray_interface3_bank_bus_we;
		basesoc_csr_bankarray_csrbank3_bitbang0_we <= (~basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank3_miso_r = basesoc_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank3_miso_we <= 1'd0;
	basesoc_csr_bankarray_csrbank3_miso_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank3_sel & (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank3_miso_re <= basesoc_csr_bankarray_interface3_bank_bus_we;
		basesoc_csr_bankarray_csrbank3_miso_we <= (~basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank3_bitbang_en0_r = basesoc_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank3_bitbang_en0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank3_bitbang_en0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank3_sel & (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank3_bitbang_en0_re <= basesoc_csr_bankarray_interface3_bank_bus_we;
		basesoc_csr_bankarray_csrbank3_bitbang_en0_we <= (~basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign mosi = bitbang_storage[0];
assign clk0 = bitbang_storage[1];
assign cs_n0 = bitbang_storage[2];
assign dir = bitbang_storage[3];
assign basesoc_csr_bankarray_csrbank3_bitbang0_w = bitbang_storage[3:0];
assign basesoc_csr_bankarray_csrbank3_miso_w = miso_status;
assign miso_we = basesoc_csr_bankarray_csrbank3_miso_we;
assign basesoc_csr_bankarray_csrbank3_bitbang_en0_w = bitbang_en_storage;
assign basesoc_csr_bankarray_csrbank4_sel = (basesoc_csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign basesoc_csr_bankarray_csrbank4_load0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_load0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_load0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank4_load0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_load0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_reload0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_reload0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_reload0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank4_reload0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_reload0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_en0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_en0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_en0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank4_en0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_en0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_update_value0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_update_value0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_update_value0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank4_update_value0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_update_value0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_value_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_value_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_value_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank4_value_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_value_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_ev_status_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_ev_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_ev_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank4_ev_status_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_ev_status_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_ev_pending_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_ev_pending_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_ev_pending_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank4_ev_pending_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_ev_pending_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_ev_enable0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_ev_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_ev_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank4_ev_enable0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_ev_enable0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_load0_w = basesoc_timer_load_storage[31:0];
assign basesoc_csr_bankarray_csrbank4_reload0_w = basesoc_timer_reload_storage[31:0];
assign basesoc_csr_bankarray_csrbank4_en0_w = basesoc_timer_en_storage;
assign basesoc_csr_bankarray_csrbank4_update_value0_w = basesoc_timer_update_value_storage;
assign basesoc_csr_bankarray_csrbank4_value_w = basesoc_timer_value_status[31:0];
assign basesoc_timer_value_we = basesoc_csr_bankarray_csrbank4_value_we;
assign basesoc_timer_status_status = basesoc_timer_zero0;
assign basesoc_csr_bankarray_csrbank4_ev_status_w = basesoc_timer_status_status;
assign basesoc_timer_status_we = basesoc_csr_bankarray_csrbank4_ev_status_we;
assign basesoc_timer_pending_status = basesoc_timer_zero1;
assign basesoc_csr_bankarray_csrbank4_ev_pending_w = basesoc_timer_pending_status;
assign basesoc_timer_pending_we = basesoc_csr_bankarray_csrbank4_ev_pending_we;
assign basesoc_timer_zero2 = basesoc_timer_enable_storage;
assign basesoc_csr_bankarray_csrbank4_ev_enable0_w = basesoc_timer_enable_storage;
assign basesoc_csr_bankarray_csrbank5_sel = (basesoc_csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign basesoc_uart_rxtx_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_uart_rxtx_re <= 1'd0;
	basesoc_uart_rxtx_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_uart_rxtx_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_uart_rxtx_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_txfull_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_txfull_we <= 1'd0;
	basesoc_csr_bankarray_csrbank5_txfull_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank5_txfull_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_txfull_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_rxempty_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_rxempty_we <= 1'd0;
	basesoc_csr_bankarray_csrbank5_rxempty_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank5_rxempty_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_rxempty_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_ev_status_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_ev_status_re <= 1'd0;
	basesoc_csr_bankarray_csrbank5_ev_status_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank5_ev_status_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_ev_status_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_ev_pending_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_ev_pending_re <= 1'd0;
	basesoc_csr_bankarray_csrbank5_ev_pending_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank5_ev_pending_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_ev_pending_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_ev_enable0_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_ev_enable0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank5_ev_enable0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank5_ev_enable0_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_ev_enable0_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_txempty_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_txempty_re <= 1'd0;
	basesoc_csr_bankarray_csrbank5_txempty_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank5_txempty_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_txempty_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_rxfull_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_rxfull_re <= 1'd0;
	basesoc_csr_bankarray_csrbank5_rxfull_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank5_rxfull_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_rxfull_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_txfull_w = basesoc_uart_txfull_status;
assign basesoc_uart_txfull_we = basesoc_csr_bankarray_csrbank5_txfull_we;
assign basesoc_csr_bankarray_csrbank5_rxempty_w = basesoc_uart_rxempty_status;
assign basesoc_uart_rxempty_we = basesoc_csr_bankarray_csrbank5_rxempty_we;
always @(*) begin
	basesoc_uart_status_status <= 2'd0;
	basesoc_uart_status_status[0] <= basesoc_uart_tx0;
	basesoc_uart_status_status[1] <= basesoc_uart_rx0;
end
assign basesoc_csr_bankarray_csrbank5_ev_status_w = basesoc_uart_status_status[1:0];
assign basesoc_uart_status_we = basesoc_csr_bankarray_csrbank5_ev_status_we;
always @(*) begin
	basesoc_uart_pending_status <= 2'd0;
	basesoc_uart_pending_status[0] <= basesoc_uart_tx1;
	basesoc_uart_pending_status[1] <= basesoc_uart_rx1;
end
assign basesoc_csr_bankarray_csrbank5_ev_pending_w = basesoc_uart_pending_status[1:0];
assign basesoc_uart_pending_we = basesoc_csr_bankarray_csrbank5_ev_pending_we;
assign basesoc_uart_tx2 = basesoc_uart_enable_storage[0];
assign basesoc_uart_rx2 = basesoc_uart_enable_storage[1];
assign basesoc_csr_bankarray_csrbank5_ev_enable0_w = basesoc_uart_enable_storage[1:0];
assign basesoc_csr_bankarray_csrbank5_txempty_w = basesoc_uart_txempty_status;
assign basesoc_uart_txempty_we = basesoc_csr_bankarray_csrbank5_txempty_we;
assign basesoc_csr_bankarray_csrbank5_rxfull_w = basesoc_uart_rxfull_status;
assign basesoc_uart_rxfull_we = basesoc_csr_bankarray_csrbank5_rxfull_we;
assign basesoc_csr_interconnect_adr = basesoc_basesoc_adr;
assign basesoc_csr_interconnect_we = basesoc_basesoc_we;
assign basesoc_csr_interconnect_dat_w = basesoc_basesoc_dat_w;
assign basesoc_basesoc_dat_r = basesoc_csr_interconnect_dat_r;
assign basesoc_csr_bankarray_interface0_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface1_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface2_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface3_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface4_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface5_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_sram_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface0_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface1_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface2_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface3_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface4_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface5_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_sram_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface0_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface1_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface2_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface3_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface4_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface5_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_sram_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_interconnect_dat_r = ((((((basesoc_csr_bankarray_interface0_bank_bus_dat_r | basesoc_csr_bankarray_interface1_bank_bus_dat_r) | basesoc_csr_bankarray_interface2_bank_bus_dat_r) | basesoc_csr_bankarray_interface3_bank_bus_dat_r) | basesoc_csr_bankarray_interface4_bank_bus_dat_r) | basesoc_csr_bankarray_interface5_bank_bus_dat_r) | basesoc_csr_bankarray_sram_bus_dat_r);
always @(*) begin
	rhs_array_muxed0 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[0];
		end
		1'd1: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[1];
		end
		2'd2: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[2];
		end
		default: begin
			rhs_array_muxed0 <= sdram_choose_cmd_valids[3];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed1 <= 13'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed1 <= sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed1 <= sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed1 <= sdram_bankmachine2_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed1 <= sdram_bankmachine3_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed2 <= 2'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed2 <= sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed2 <= sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed2 <= sdram_bankmachine2_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed2 <= sdram_bankmachine3_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed3 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed3 <= sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed3 <= sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed3 <= sdram_bankmachine2_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed3 <= sdram_bankmachine3_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed4 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed4 <= sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed4 <= sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed4 <= sdram_bankmachine2_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed4 <= sdram_bankmachine3_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed5 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			rhs_array_muxed5 <= sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed5 <= sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed5 <= sdram_bankmachine2_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed5 <= sdram_bankmachine3_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed0 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed0 <= sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed0 <= sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed0 <= sdram_bankmachine2_cmd_payload_cas;
		end
		default: begin
			t_array_muxed0 <= sdram_bankmachine3_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed1 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed1 <= sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed1 <= sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed1 <= sdram_bankmachine2_cmd_payload_ras;
		end
		default: begin
			t_array_muxed1 <= sdram_bankmachine3_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed2 <= 1'd0;
	case (sdram_choose_cmd_grant)
		1'd0: begin
			t_array_muxed2 <= sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed2 <= sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed2 <= sdram_bankmachine2_cmd_payload_we;
		end
		default: begin
			t_array_muxed2 <= sdram_bankmachine3_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed6 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[0];
		end
		1'd1: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[1];
		end
		2'd2: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[2];
		end
		default: begin
			rhs_array_muxed6 <= sdram_choose_req_valids[3];
		end
	endcase
end
always @(*) begin
	rhs_array_muxed7 <= 13'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed7 <= sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			rhs_array_muxed7 <= sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			rhs_array_muxed7 <= sdram_bankmachine2_cmd_payload_a;
		end
		default: begin
			rhs_array_muxed7 <= sdram_bankmachine3_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed8 <= 2'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed8 <= sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			rhs_array_muxed8 <= sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			rhs_array_muxed8 <= sdram_bankmachine2_cmd_payload_ba;
		end
		default: begin
			rhs_array_muxed8 <= sdram_bankmachine3_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed9 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed9 <= sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			rhs_array_muxed9 <= sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			rhs_array_muxed9 <= sdram_bankmachine2_cmd_payload_is_read;
		end
		default: begin
			rhs_array_muxed9 <= sdram_bankmachine3_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed10 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed10 <= sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			rhs_array_muxed10 <= sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			rhs_array_muxed10 <= sdram_bankmachine2_cmd_payload_is_write;
		end
		default: begin
			rhs_array_muxed10 <= sdram_bankmachine3_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed11 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			rhs_array_muxed11 <= sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			rhs_array_muxed11 <= sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			rhs_array_muxed11 <= sdram_bankmachine2_cmd_payload_is_cmd;
		end
		default: begin
			rhs_array_muxed11 <= sdram_bankmachine3_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	t_array_muxed3 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed3 <= sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			t_array_muxed3 <= sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			t_array_muxed3 <= sdram_bankmachine2_cmd_payload_cas;
		end
		default: begin
			t_array_muxed3 <= sdram_bankmachine3_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	t_array_muxed4 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed4 <= sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			t_array_muxed4 <= sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			t_array_muxed4 <= sdram_bankmachine2_cmd_payload_ras;
		end
		default: begin
			t_array_muxed4 <= sdram_bankmachine3_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	t_array_muxed5 <= 1'd0;
	case (sdram_choose_req_grant)
		1'd0: begin
			t_array_muxed5 <= sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			t_array_muxed5 <= sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			t_array_muxed5 <= sdram_bankmachine2_cmd_payload_we;
		end
		default: begin
			t_array_muxed5 <= sdram_bankmachine3_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed12 <= 23'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed12 <= {port_cmd_payload_addr[24:12], port_cmd_payload_addr[9:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed13 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed13 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed14 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			rhs_array_muxed14 <= (((port_cmd_payload_addr[11:10] == 1'd0) & (~(((subfragments_locked0 | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed15 <= 23'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed15 <= {port_cmd_payload_addr[24:12], port_cmd_payload_addr[9:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed16 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed16 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed17 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			rhs_array_muxed17 <= (((port_cmd_payload_addr[11:10] == 1'd1) & (~(((subfragments_locked1 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed18 <= 23'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed18 <= {port_cmd_payload_addr[24:12], port_cmd_payload_addr[9:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed19 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed19 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed20 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			rhs_array_muxed20 <= (((port_cmd_payload_addr[11:10] == 2'd2) & (~(((subfragments_locked2 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed21 <= 23'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed21 <= {port_cmd_payload_addr[24:12], port_cmd_payload_addr[9:0]};
		end
	endcase
end
always @(*) begin
	rhs_array_muxed22 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed22 <= port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed23 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			rhs_array_muxed23 <= (((port_cmd_payload_addr[11:10] == 2'd3) & (~(((subfragments_locked3 | (sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))))) & port_cmd_valid);
		end
	endcase
end
always @(*) begin
	rhs_array_muxed24 <= 30'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed24 <= basesoc_serv_ibus_adr;
		end
		1'd1: begin
			rhs_array_muxed24 <= basesoc_serv_dbus_adr;
		end
		default: begin
			rhs_array_muxed24 <= converted_interface_adr;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed25 <= 32'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed25 <= basesoc_serv_ibus_dat_w;
		end
		1'd1: begin
			rhs_array_muxed25 <= basesoc_serv_dbus_dat_w;
		end
		default: begin
			rhs_array_muxed25 <= converted_interface_dat_w;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed26 <= 4'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed26 <= basesoc_serv_ibus_sel;
		end
		1'd1: begin
			rhs_array_muxed26 <= basesoc_serv_dbus_sel;
		end
		default: begin
			rhs_array_muxed26 <= converted_interface_sel;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed27 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed27 <= basesoc_serv_ibus_cyc;
		end
		1'd1: begin
			rhs_array_muxed27 <= basesoc_serv_dbus_cyc;
		end
		default: begin
			rhs_array_muxed27 <= converted_interface_cyc;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed28 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed28 <= basesoc_serv_ibus_stb;
		end
		1'd1: begin
			rhs_array_muxed28 <= basesoc_serv_dbus_stb;
		end
		default: begin
			rhs_array_muxed28 <= converted_interface_stb;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed29 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed29 <= basesoc_serv_ibus_we;
		end
		1'd1: begin
			rhs_array_muxed29 <= basesoc_serv_dbus_we;
		end
		default: begin
			rhs_array_muxed29 <= converted_interface_we;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed30 <= 3'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed30 <= basesoc_serv_ibus_cti;
		end
		1'd1: begin
			rhs_array_muxed30 <= basesoc_serv_dbus_cti;
		end
		default: begin
			rhs_array_muxed30 <= converted_interface_cti;
		end
	endcase
end
always @(*) begin
	rhs_array_muxed31 <= 2'd0;
	case (basesoc_grant)
		1'd0: begin
			rhs_array_muxed31 <= basesoc_serv_ibus_bte;
		end
		1'd1: begin
			rhs_array_muxed31 <= basesoc_serv_dbus_bte;
		end
		default: begin
			rhs_array_muxed31 <= converted_interface_bte;
		end
	endcase
end
always @(*) begin
	array_muxed0 <= 2'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed0 <= sdram_nop_ba[1:0];
		end
		1'd1: begin
			array_muxed0 <= sdram_choose_req_cmd_payload_ba[1:0];
		end
		2'd2: begin
			array_muxed0 <= sdram_choose_req_cmd_payload_ba[1:0];
		end
		default: begin
			array_muxed0 <= sdram_cmd_payload_ba[1:0];
		end
	endcase
end
always @(*) begin
	array_muxed1 <= 13'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed1 <= sdram_nop_a;
		end
		1'd1: begin
			array_muxed1 <= sdram_choose_req_cmd_payload_a;
		end
		2'd2: begin
			array_muxed1 <= sdram_choose_req_cmd_payload_a;
		end
		default: begin
			array_muxed1 <= sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	array_muxed2 <= 1'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed2 <= 1'd0;
		end
		1'd1: begin
			array_muxed2 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
		end
		2'd2: begin
			array_muxed2 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			array_muxed2 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	array_muxed3 <= 1'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed3 <= 1'd0;
		end
		1'd1: begin
			array_muxed3 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
		end
		2'd2: begin
			array_muxed3 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			array_muxed3 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	array_muxed4 <= 1'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed4 <= 1'd0;
		end
		1'd1: begin
			array_muxed4 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
		end
		2'd2: begin
			array_muxed4 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_we);
		end
		default: begin
			array_muxed4 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	array_muxed5 <= 1'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed5 <= 1'd0;
		end
		1'd1: begin
			array_muxed5 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
		end
		2'd2: begin
			array_muxed5 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			array_muxed5 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	array_muxed6 <= 1'd0;
	case (sdram_steerer_sel)
		1'd0: begin
			array_muxed6 <= 1'd0;
		end
		1'd1: begin
			array_muxed6 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
		end
		2'd2: begin
			array_muxed6 <= ((sdram_choose_req_cmd_valid & sdram_choose_req_cmd_ready) & sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			array_muxed6 <= ((sdram_cmd_valid & sdram_cmd_ready) & sdram_cmd_payload_is_write);
		end
	endcase
end
assign basesoc_rx_rx = regs1;

always @(posedge por_clk) begin
	if ((~por_done)) begin
		por_count <= (por_count - 1'd1);
	end
end

always @(posedge sys_clk) begin
	if ((basesoc_bus_errors != 32'd4294967295)) begin
		if (basesoc_bus_error) begin
			basesoc_bus_errors <= (basesoc_bus_errors + 1'd1);
		end
	end
	basesoc_ram_bus_ack <= 1'd0;
	if (((basesoc_ram_bus_cyc & basesoc_ram_bus_stb) & (~basesoc_ram_bus_ack))) begin
		basesoc_ram_bus_ack <= 1'd1;
	end
	{basesoc_tx_tick, basesoc_tx_phase} <= 24'd9895604;
	if (basesoc_tx_enable) begin
		{basesoc_tx_tick, basesoc_tx_phase} <= (basesoc_tx_phase + 24'd9895604);
	end
	subfragments_rs232phytx_state <= subfragments_rs232phytx_next_state;
	if (basesoc_tx_count_rs232phytx_next_value_ce0) begin
		basesoc_tx_count <= basesoc_tx_count_rs232phytx_next_value0;
	end
	if (basesoc_serial_tx_rs232phytx_next_value_ce1) begin
		serial_tx <= basesoc_serial_tx_rs232phytx_next_value1;
	end
	if (basesoc_tx_data_rs232phytx_next_value_ce2) begin
		basesoc_tx_data <= basesoc_tx_data_rs232phytx_next_value2;
	end
	basesoc_rx_rx_d <= basesoc_rx_rx;
	{basesoc_rx_tick, basesoc_rx_phase} <= 32'd2147483648;
	if (basesoc_rx_enable) begin
		{basesoc_rx_tick, basesoc_rx_phase} <= (basesoc_rx_phase + 24'd9895604);
	end
	subfragments_rs232phyrx_state <= subfragments_rs232phyrx_next_state;
	if (basesoc_rx_count_rs232phyrx_next_value_ce0) begin
		basesoc_rx_count <= basesoc_rx_count_rs232phyrx_next_value0;
	end
	if (basesoc_rx_data_rs232phyrx_next_value_ce1) begin
		basesoc_rx_data <= basesoc_rx_data_rs232phyrx_next_value1;
	end
	if (basesoc_uart_tx_clear) begin
		basesoc_uart_tx_pending <= 1'd0;
	end
	basesoc_uart_tx_trigger_d <= basesoc_uart_tx_trigger;
	if ((basesoc_uart_tx_trigger & (~basesoc_uart_tx_trigger_d))) begin
		basesoc_uart_tx_pending <= 1'd1;
	end
	if (basesoc_uart_rx_clear) begin
		basesoc_uart_rx_pending <= 1'd0;
	end
	basesoc_uart_rx_trigger_d <= basesoc_uart_rx_trigger;
	if ((basesoc_uart_rx_trigger & (~basesoc_uart_rx_trigger_d))) begin
		basesoc_uart_rx_pending <= 1'd1;
	end
	if (basesoc_uart_tx_fifo_syncfifo_re) begin
		basesoc_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart_tx_fifo_re) begin
			basesoc_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
		basesoc_uart_tx_fifo_produce <= (basesoc_uart_tx_fifo_produce + 1'd1);
	end
	if (basesoc_uart_tx_fifo_do_read) begin
		basesoc_uart_tx_fifo_consume <= (basesoc_uart_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
		if ((~basesoc_uart_tx_fifo_do_read)) begin
			basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart_tx_fifo_do_read) begin
			basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart_rx_fifo_syncfifo_re) begin
		basesoc_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart_rx_fifo_re) begin
			basesoc_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
		basesoc_uart_rx_fifo_produce <= (basesoc_uart_rx_fifo_produce + 1'd1);
	end
	if (basesoc_uart_rx_fifo_do_read) begin
		basesoc_uart_rx_fifo_consume <= (basesoc_uart_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
		if ((~basesoc_uart_rx_fifo_do_read)) begin
			basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart_rx_fifo_do_read) begin
			basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_timer_en_storage) begin
		if ((basesoc_timer_value == 1'd0)) begin
			basesoc_timer_value <= basesoc_timer_reload_storage;
		end else begin
			basesoc_timer_value <= (basesoc_timer_value - 1'd1);
		end
	end else begin
		basesoc_timer_value <= basesoc_timer_load_storage;
	end
	if (basesoc_timer_update_value_re) begin
		basesoc_timer_value_status <= basesoc_timer_value;
	end
	if (basesoc_timer_zero_clear) begin
		basesoc_timer_zero_pending <= 1'd0;
	end
	basesoc_timer_zero_trigger_d <= basesoc_timer_zero_trigger;
	if ((basesoc_timer_zero_trigger & (~basesoc_timer_zero_trigger_d))) begin
		basesoc_timer_zero_pending <= 1'd1;
	end
	if ((i == 1'd0)) begin
		clk1 <= 1'd1;
		miso <= spiflash_miso;
	end
	if ((i == 1'd1)) begin
		i <= 1'd0;
		clk1 <= 1'd0;
		sr <= {sr[30:0], miso};
	end else begin
		i <= (i + 1'd1);
	end
	if ((((bus_cyc & bus_stb) & (i == 1'd1)) & (counter == 1'd0))) begin
		cs_n1 <= 1'd0;
		sr[31:24] <= 4'd11;
	end
	if ((counter == 5'd16)) begin
		sr[31:8] <= {bus_adr, {2{1'd0}}};
	end
	if ((counter == 7'd64)) begin
	end
	if ((counter == 8'd144)) begin
		bus_ack <= 1'd1;
		cs_n1 <= 1'd1;
	end
	if ((counter == 8'd145)) begin
		bus_ack <= 1'd0;
	end
	if ((counter == 8'd147)) begin
	end
	if ((counter == 8'd147)) begin
		counter <= 1'd0;
	end else begin
		if ((counter != 1'd0)) begin
			counter <= (counter + 1'd1);
		end else begin
			if (((bus_cyc & bus_stb) & (i == 1'd1))) begin
				counter <= 1'd1;
			end
		end
	end
	if (done) begin
		chaser <= {chaser, (~chaser[3])};
	end
	if (re) begin
		mode <= 1'd1;
	end
	if (wait_1) begin
		if ((~done)) begin
			count <= (count - 1'd1);
		end
	end else begin
		count <= 23'd6250000;
	end
	rddata_en <= {rddata_en, dfi_p0_rddata_en};
	dfi_p0_rddata_valid <= rddata_en[2];
	if (sdram_inti_p0_rddata_valid) begin
		sdram_rddata_status <= sdram_inti_p0_rddata;
	end
	if ((sdram_timer_wait & (~sdram_timer_done0))) begin
		sdram_timer_count1 <= (sdram_timer_count1 - 1'd1);
	end else begin
		sdram_timer_count1 <= 9'd390;
	end
	sdram_postponer_req_o <= 1'd0;
	if (sdram_postponer_req_i) begin
		sdram_postponer_count <= (sdram_postponer_count - 1'd1);
		if ((sdram_postponer_count == 1'd0)) begin
			sdram_postponer_count <= 1'd0;
			sdram_postponer_req_o <= 1'd1;
		end
	end
	if (sdram_sequencer_start0) begin
		sdram_sequencer_count <= 1'd0;
	end else begin
		if (sdram_sequencer_done1) begin
			if ((sdram_sequencer_count != 1'd0)) begin
				sdram_sequencer_count <= (sdram_sequencer_count - 1'd1);
			end
		end
	end
	sdram_cmd_payload_a <= 1'd0;
	sdram_cmd_payload_ba <= 1'd0;
	sdram_cmd_payload_cas <= 1'd0;
	sdram_cmd_payload_ras <= 1'd0;
	sdram_cmd_payload_we <= 1'd0;
	sdram_sequencer_done1 <= 1'd0;
	if ((sdram_sequencer_start1 & (sdram_sequencer_counter == 1'd0))) begin
		sdram_cmd_payload_a <= 11'd1024;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd1;
		sdram_cmd_payload_we <= 1'd1;
	end
	if ((sdram_sequencer_counter == 1'd1)) begin
		sdram_cmd_payload_a <= 11'd1024;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd1;
		sdram_cmd_payload_ras <= 1'd1;
		sdram_cmd_payload_we <= 1'd0;
	end
	if ((sdram_sequencer_counter == 3'd5)) begin
		sdram_cmd_payload_a <= 1'd0;
		sdram_cmd_payload_ba <= 1'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd0;
		sdram_sequencer_done1 <= 1'd1;
	end
	if ((sdram_sequencer_counter == 3'd5)) begin
		sdram_sequencer_counter <= 1'd0;
	end else begin
		if ((sdram_sequencer_counter != 1'd0)) begin
			sdram_sequencer_counter <= (sdram_sequencer_counter + 1'd1);
		end else begin
			if (sdram_sequencer_start1) begin
				sdram_sequencer_counter <= 1'd1;
			end
		end
	end
	subfragments_refresher_state <= subfragments_refresher_next_state;
	if (sdram_bankmachine0_row_close) begin
		sdram_bankmachine0_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine0_row_open) begin
			sdram_bankmachine0_row_opened <= 1'd1;
			sdram_bankmachine0_row <= sdram_bankmachine0_cmd_buffer_source_payload_addr[22:10];
		end
	end
	if (((sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine0_cmd_buffer_lookahead_produce <= (sdram_bankmachine0_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine0_cmd_buffer_lookahead_consume <= (sdram_bankmachine0_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine0_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine0_cmd_buffer_lookahead_level <= (sdram_bankmachine0_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine0_cmd_buffer_lookahead_level <= (sdram_bankmachine0_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine0_cmd_buffer_source_valid) | sdram_bankmachine0_cmd_buffer_source_ready)) begin
		sdram_bankmachine0_cmd_buffer_source_valid <= sdram_bankmachine0_cmd_buffer_sink_valid;
		sdram_bankmachine0_cmd_buffer_source_first <= sdram_bankmachine0_cmd_buffer_sink_first;
		sdram_bankmachine0_cmd_buffer_source_last <= sdram_bankmachine0_cmd_buffer_sink_last;
		sdram_bankmachine0_cmd_buffer_source_payload_we <= sdram_bankmachine0_cmd_buffer_sink_payload_we;
		sdram_bankmachine0_cmd_buffer_source_payload_addr <= sdram_bankmachine0_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine0_twtpcon_valid) begin
		sdram_bankmachine0_twtpcon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine0_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_twtpcon_ready)) begin
			sdram_bankmachine0_twtpcon_count <= (sdram_bankmachine0_twtpcon_count - 1'd1);
			if ((sdram_bankmachine0_twtpcon_count == 1'd1)) begin
				sdram_bankmachine0_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine0_trccon_valid) begin
		sdram_bankmachine0_trccon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine0_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_trccon_ready)) begin
			sdram_bankmachine0_trccon_count <= (sdram_bankmachine0_trccon_count - 1'd1);
			if ((sdram_bankmachine0_trccon_count == 1'd1)) begin
				sdram_bankmachine0_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine0_trascon_valid) begin
		sdram_bankmachine0_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine0_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine0_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine0_trascon_ready)) begin
			sdram_bankmachine0_trascon_count <= (sdram_bankmachine0_trascon_count - 1'd1);
			if ((sdram_bankmachine0_trascon_count == 1'd1)) begin
				sdram_bankmachine0_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine0_state <= subfragments_bankmachine0_next_state;
	if (sdram_bankmachine1_row_close) begin
		sdram_bankmachine1_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine1_row_open) begin
			sdram_bankmachine1_row_opened <= 1'd1;
			sdram_bankmachine1_row <= sdram_bankmachine1_cmd_buffer_source_payload_addr[22:10];
		end
	end
	if (((sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine1_cmd_buffer_lookahead_produce <= (sdram_bankmachine1_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine1_cmd_buffer_lookahead_consume <= (sdram_bankmachine1_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine1_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine1_cmd_buffer_lookahead_level <= (sdram_bankmachine1_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine1_cmd_buffer_lookahead_level <= (sdram_bankmachine1_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine1_cmd_buffer_source_valid) | sdram_bankmachine1_cmd_buffer_source_ready)) begin
		sdram_bankmachine1_cmd_buffer_source_valid <= sdram_bankmachine1_cmd_buffer_sink_valid;
		sdram_bankmachine1_cmd_buffer_source_first <= sdram_bankmachine1_cmd_buffer_sink_first;
		sdram_bankmachine1_cmd_buffer_source_last <= sdram_bankmachine1_cmd_buffer_sink_last;
		sdram_bankmachine1_cmd_buffer_source_payload_we <= sdram_bankmachine1_cmd_buffer_sink_payload_we;
		sdram_bankmachine1_cmd_buffer_source_payload_addr <= sdram_bankmachine1_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine1_twtpcon_valid) begin
		sdram_bankmachine1_twtpcon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine1_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_twtpcon_ready)) begin
			sdram_bankmachine1_twtpcon_count <= (sdram_bankmachine1_twtpcon_count - 1'd1);
			if ((sdram_bankmachine1_twtpcon_count == 1'd1)) begin
				sdram_bankmachine1_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine1_trccon_valid) begin
		sdram_bankmachine1_trccon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine1_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_trccon_ready)) begin
			sdram_bankmachine1_trccon_count <= (sdram_bankmachine1_trccon_count - 1'd1);
			if ((sdram_bankmachine1_trccon_count == 1'd1)) begin
				sdram_bankmachine1_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine1_trascon_valid) begin
		sdram_bankmachine1_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine1_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine1_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine1_trascon_ready)) begin
			sdram_bankmachine1_trascon_count <= (sdram_bankmachine1_trascon_count - 1'd1);
			if ((sdram_bankmachine1_trascon_count == 1'd1)) begin
				sdram_bankmachine1_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine1_state <= subfragments_bankmachine1_next_state;
	if (sdram_bankmachine2_row_close) begin
		sdram_bankmachine2_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine2_row_open) begin
			sdram_bankmachine2_row_opened <= 1'd1;
			sdram_bankmachine2_row <= sdram_bankmachine2_cmd_buffer_source_payload_addr[22:10];
		end
	end
	if (((sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine2_cmd_buffer_lookahead_produce <= (sdram_bankmachine2_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine2_cmd_buffer_lookahead_consume <= (sdram_bankmachine2_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine2_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine2_cmd_buffer_lookahead_level <= (sdram_bankmachine2_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine2_cmd_buffer_lookahead_level <= (sdram_bankmachine2_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine2_cmd_buffer_source_valid) | sdram_bankmachine2_cmd_buffer_source_ready)) begin
		sdram_bankmachine2_cmd_buffer_source_valid <= sdram_bankmachine2_cmd_buffer_sink_valid;
		sdram_bankmachine2_cmd_buffer_source_first <= sdram_bankmachine2_cmd_buffer_sink_first;
		sdram_bankmachine2_cmd_buffer_source_last <= sdram_bankmachine2_cmd_buffer_sink_last;
		sdram_bankmachine2_cmd_buffer_source_payload_we <= sdram_bankmachine2_cmd_buffer_sink_payload_we;
		sdram_bankmachine2_cmd_buffer_source_payload_addr <= sdram_bankmachine2_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine2_twtpcon_valid) begin
		sdram_bankmachine2_twtpcon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine2_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_twtpcon_ready)) begin
			sdram_bankmachine2_twtpcon_count <= (sdram_bankmachine2_twtpcon_count - 1'd1);
			if ((sdram_bankmachine2_twtpcon_count == 1'd1)) begin
				sdram_bankmachine2_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine2_trccon_valid) begin
		sdram_bankmachine2_trccon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine2_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_trccon_ready)) begin
			sdram_bankmachine2_trccon_count <= (sdram_bankmachine2_trccon_count - 1'd1);
			if ((sdram_bankmachine2_trccon_count == 1'd1)) begin
				sdram_bankmachine2_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine2_trascon_valid) begin
		sdram_bankmachine2_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine2_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine2_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine2_trascon_ready)) begin
			sdram_bankmachine2_trascon_count <= (sdram_bankmachine2_trascon_count - 1'd1);
			if ((sdram_bankmachine2_trascon_count == 1'd1)) begin
				sdram_bankmachine2_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine2_state <= subfragments_bankmachine2_next_state;
	if (sdram_bankmachine3_row_close) begin
		sdram_bankmachine3_row_opened <= 1'd0;
	end else begin
		if (sdram_bankmachine3_row_open) begin
			sdram_bankmachine3_row_opened <= 1'd1;
			sdram_bankmachine3_row <= sdram_bankmachine3_cmd_buffer_source_payload_addr[22:10];
		end
	end
	if (((sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		sdram_bankmachine3_cmd_buffer_lookahead_produce <= (sdram_bankmachine3_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
		sdram_bankmachine3_cmd_buffer_lookahead_consume <= (sdram_bankmachine3_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		if ((~sdram_bankmachine3_cmd_buffer_lookahead_do_read)) begin
			sdram_bankmachine3_cmd_buffer_lookahead_level <= (sdram_bankmachine3_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
			sdram_bankmachine3_cmd_buffer_lookahead_level <= (sdram_bankmachine3_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~sdram_bankmachine3_cmd_buffer_source_valid) | sdram_bankmachine3_cmd_buffer_source_ready)) begin
		sdram_bankmachine3_cmd_buffer_source_valid <= sdram_bankmachine3_cmd_buffer_sink_valid;
		sdram_bankmachine3_cmd_buffer_source_first <= sdram_bankmachine3_cmd_buffer_sink_first;
		sdram_bankmachine3_cmd_buffer_source_last <= sdram_bankmachine3_cmd_buffer_sink_last;
		sdram_bankmachine3_cmd_buffer_source_payload_we <= sdram_bankmachine3_cmd_buffer_sink_payload_we;
		sdram_bankmachine3_cmd_buffer_source_payload_addr <= sdram_bankmachine3_cmd_buffer_sink_payload_addr;
	end
	if (sdram_bankmachine3_twtpcon_valid) begin
		sdram_bankmachine3_twtpcon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine3_twtpcon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_twtpcon_ready)) begin
			sdram_bankmachine3_twtpcon_count <= (sdram_bankmachine3_twtpcon_count - 1'd1);
			if ((sdram_bankmachine3_twtpcon_count == 1'd1)) begin
				sdram_bankmachine3_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine3_trccon_valid) begin
		sdram_bankmachine3_trccon_count <= 2'd3;
		if (1'd0) begin
			sdram_bankmachine3_trccon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_trccon_ready)) begin
			sdram_bankmachine3_trccon_count <= (sdram_bankmachine3_trccon_count - 1'd1);
			if ((sdram_bankmachine3_trccon_count == 1'd1)) begin
				sdram_bankmachine3_trccon_ready <= 1'd1;
			end
		end
	end
	if (sdram_bankmachine3_trascon_valid) begin
		sdram_bankmachine3_trascon_count <= 2'd2;
		if (1'd0) begin
			sdram_bankmachine3_trascon_ready <= 1'd1;
		end else begin
			sdram_bankmachine3_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_bankmachine3_trascon_ready)) begin
			sdram_bankmachine3_trascon_count <= (sdram_bankmachine3_trascon_count - 1'd1);
			if ((sdram_bankmachine3_trascon_count == 1'd1)) begin
				sdram_bankmachine3_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine3_state <= subfragments_bankmachine3_next_state;
	if ((~sdram_en0)) begin
		sdram_time0 <= 5'd31;
	end else begin
		if ((~sdram_max_time0)) begin
			sdram_time0 <= (sdram_time0 - 1'd1);
		end
	end
	if ((~sdram_en1)) begin
		sdram_time1 <= 4'd15;
	end else begin
		if ((~sdram_max_time1)) begin
			sdram_time1 <= (sdram_time1 - 1'd1);
		end
	end
	if (sdram_choose_cmd_ce) begin
		case (sdram_choose_cmd_grant)
			1'd0: begin
				if (sdram_choose_cmd_request[1]) begin
					sdram_choose_cmd_grant <= 1'd1;
				end else begin
					if (sdram_choose_cmd_request[2]) begin
						sdram_choose_cmd_grant <= 2'd2;
					end else begin
						if (sdram_choose_cmd_request[3]) begin
							sdram_choose_cmd_grant <= 2'd3;
						end
					end
				end
			end
			1'd1: begin
				if (sdram_choose_cmd_request[2]) begin
					sdram_choose_cmd_grant <= 2'd2;
				end else begin
					if (sdram_choose_cmd_request[3]) begin
						sdram_choose_cmd_grant <= 2'd3;
					end else begin
						if (sdram_choose_cmd_request[0]) begin
							sdram_choose_cmd_grant <= 1'd0;
						end
					end
				end
			end
			2'd2: begin
				if (sdram_choose_cmd_request[3]) begin
					sdram_choose_cmd_grant <= 2'd3;
				end else begin
					if (sdram_choose_cmd_request[0]) begin
						sdram_choose_cmd_grant <= 1'd0;
					end else begin
						if (sdram_choose_cmd_request[1]) begin
							sdram_choose_cmd_grant <= 1'd1;
						end
					end
				end
			end
			2'd3: begin
				if (sdram_choose_cmd_request[0]) begin
					sdram_choose_cmd_grant <= 1'd0;
				end else begin
					if (sdram_choose_cmd_request[1]) begin
						sdram_choose_cmd_grant <= 1'd1;
					end else begin
						if (sdram_choose_cmd_request[2]) begin
							sdram_choose_cmd_grant <= 2'd2;
						end
					end
				end
			end
		endcase
	end
	if (sdram_choose_req_ce) begin
		case (sdram_choose_req_grant)
			1'd0: begin
				if (sdram_choose_req_request[1]) begin
					sdram_choose_req_grant <= 1'd1;
				end else begin
					if (sdram_choose_req_request[2]) begin
						sdram_choose_req_grant <= 2'd2;
					end else begin
						if (sdram_choose_req_request[3]) begin
							sdram_choose_req_grant <= 2'd3;
						end
					end
				end
			end
			1'd1: begin
				if (sdram_choose_req_request[2]) begin
					sdram_choose_req_grant <= 2'd2;
				end else begin
					if (sdram_choose_req_request[3]) begin
						sdram_choose_req_grant <= 2'd3;
					end else begin
						if (sdram_choose_req_request[0]) begin
							sdram_choose_req_grant <= 1'd0;
						end
					end
				end
			end
			2'd2: begin
				if (sdram_choose_req_request[3]) begin
					sdram_choose_req_grant <= 2'd3;
				end else begin
					if (sdram_choose_req_request[0]) begin
						sdram_choose_req_grant <= 1'd0;
					end else begin
						if (sdram_choose_req_request[1]) begin
							sdram_choose_req_grant <= 1'd1;
						end
					end
				end
			end
			2'd3: begin
				if (sdram_choose_req_request[0]) begin
					sdram_choose_req_grant <= 1'd0;
				end else begin
					if (sdram_choose_req_request[1]) begin
						sdram_choose_req_grant <= 1'd1;
					end else begin
						if (sdram_choose_req_request[2]) begin
							sdram_choose_req_grant <= 2'd2;
						end
					end
				end
			end
		endcase
	end
	sdram_dfi_p0_cs_n <= 1'd0;
	sdram_dfi_p0_bank <= array_muxed0;
	sdram_dfi_p0_address <= array_muxed1;
	sdram_dfi_p0_cas_n <= (~array_muxed2);
	sdram_dfi_p0_ras_n <= (~array_muxed3);
	sdram_dfi_p0_we_n <= (~array_muxed4);
	sdram_dfi_p0_rddata_en <= array_muxed5;
	sdram_dfi_p0_wrdata_en <= array_muxed6;
	if (sdram_trrdcon_valid) begin
		sdram_trrdcon_count <= 1'd0;
		if (1'd1) begin
			sdram_trrdcon_ready <= 1'd1;
		end else begin
			sdram_trrdcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_trrdcon_ready)) begin
			sdram_trrdcon_count <= (sdram_trrdcon_count - 1'd1);
			if ((sdram_trrdcon_count == 1'd1)) begin
				sdram_trrdcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_tccdcon_valid) begin
		sdram_tccdcon_count <= 1'd0;
		if (1'd1) begin
			sdram_tccdcon_ready <= 1'd1;
		end else begin
			sdram_tccdcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_tccdcon_ready)) begin
			sdram_tccdcon_count <= (sdram_tccdcon_count - 1'd1);
			if ((sdram_tccdcon_count == 1'd1)) begin
				sdram_tccdcon_ready <= 1'd1;
			end
		end
	end
	if (sdram_twtrcon_valid) begin
		sdram_twtrcon_count <= 3'd4;
		if (1'd0) begin
			sdram_twtrcon_ready <= 1'd1;
		end else begin
			sdram_twtrcon_ready <= 1'd0;
		end
	end else begin
		if ((~sdram_twtrcon_ready)) begin
			sdram_twtrcon_count <= (sdram_twtrcon_count - 1'd1);
			if ((sdram_twtrcon_count == 1'd1)) begin
				sdram_twtrcon_ready <= 1'd1;
			end
		end
	end
	subfragments_multiplexer_state <= subfragments_multiplexer_next_state;
	subfragments_new_master_wdata_ready <= ((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & sdram_interface_bank0_wdata_ready)) | ((subfragments_roundrobin1_grant == 1'd0) & sdram_interface_bank1_wdata_ready)) | ((subfragments_roundrobin2_grant == 1'd0) & sdram_interface_bank2_wdata_ready)) | ((subfragments_roundrobin3_grant == 1'd0) & sdram_interface_bank3_wdata_ready));
	subfragments_new_master_rdata_valid0 <= ((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & sdram_interface_bank0_rdata_valid)) | ((subfragments_roundrobin1_grant == 1'd0) & sdram_interface_bank1_rdata_valid)) | ((subfragments_roundrobin2_grant == 1'd0) & sdram_interface_bank2_rdata_valid)) | ((subfragments_roundrobin3_grant == 1'd0) & sdram_interface_bank3_rdata_valid));
	subfragments_new_master_rdata_valid1 <= subfragments_new_master_rdata_valid0;
	subfragments_new_master_rdata_valid2 <= subfragments_new_master_rdata_valid1;
	subfragments_new_master_rdata_valid3 <= subfragments_new_master_rdata_valid2;
	adr_offset_r <= wb_sdram_adr[1:0];
	subfragments_state <= subfragments_next_state;
	subfragments_litedramnativeportconverter_state <= subfragments_litedramnativeportconverter_next_state;
	if (wishbone_bridge_count_litedramnativeportconverter_next_value_ce) begin
		wishbone_bridge_count <= wishbone_bridge_count_litedramnativeportconverter_next_value;
	end
	if ((wishbone_bridge_wdata_converter_converter_source_valid & wishbone_bridge_wdata_converter_converter_source_ready)) begin
		if (wishbone_bridge_wdata_converter_converter_last) begin
			wishbone_bridge_wdata_converter_converter_mux <= 1'd0;
		end else begin
			wishbone_bridge_wdata_converter_converter_mux <= (wishbone_bridge_wdata_converter_converter_mux + 1'd1);
		end
	end
	if (wishbone_bridge_rdata_converter_converter_source_ready) begin
		wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd0;
	end
	if (wishbone_bridge_rdata_converter_converter_load_part) begin
		if (((wishbone_bridge_rdata_converter_converter_demux == 4'd15) | wishbone_bridge_rdata_converter_converter_sink_last)) begin
			wishbone_bridge_rdata_converter_converter_demux <= 1'd0;
			wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd1;
		end else begin
			wishbone_bridge_rdata_converter_converter_demux <= (wishbone_bridge_rdata_converter_converter_demux + 1'd1);
		end
	end
	if ((wishbone_bridge_rdata_converter_converter_source_valid & wishbone_bridge_rdata_converter_converter_source_ready)) begin
		if ((wishbone_bridge_rdata_converter_converter_sink_valid & wishbone_bridge_rdata_converter_converter_sink_ready)) begin
			wishbone_bridge_rdata_converter_converter_source_first <= wishbone_bridge_rdata_converter_converter_sink_first;
			wishbone_bridge_rdata_converter_converter_source_last <= wishbone_bridge_rdata_converter_converter_sink_last;
		end else begin
			wishbone_bridge_rdata_converter_converter_source_first <= 1'd0;
			wishbone_bridge_rdata_converter_converter_source_last <= 1'd0;
		end
	end else begin
		if ((wishbone_bridge_rdata_converter_converter_sink_valid & wishbone_bridge_rdata_converter_converter_sink_ready)) begin
			wishbone_bridge_rdata_converter_converter_source_first <= (wishbone_bridge_rdata_converter_converter_sink_first | wishbone_bridge_rdata_converter_converter_source_first);
			wishbone_bridge_rdata_converter_converter_source_last <= (wishbone_bridge_rdata_converter_converter_sink_last | wishbone_bridge_rdata_converter_converter_source_last);
		end
	end
	if (wishbone_bridge_rdata_converter_converter_load_part) begin
		case (wishbone_bridge_rdata_converter_converter_demux)
			1'd0: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[7:0] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			1'd1: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[15:8] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			2'd2: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[23:16] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			2'd3: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[31:24] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			3'd4: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[39:32] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			3'd5: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[47:40] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			3'd6: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[55:48] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			3'd7: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[63:56] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd8: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[71:64] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd9: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[79:72] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd10: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[87:80] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd11: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[95:88] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd12: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[103:96] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd13: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[111:104] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd14: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[119:112] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
			4'd15: begin
				wishbone_bridge_rdata_converter_converter_source_payload_data[127:120] <= wishbone_bridge_rdata_converter_converter_sink_payload_data;
			end
		endcase
	end
	if (wishbone_bridge_rdata_converter_converter_load_part) begin
		wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count <= (wishbone_bridge_rdata_converter_converter_demux + 1'd1);
	end
	subfragments_fsm_state <= subfragments_fsm_next_state;
	if (wishbone_bridge_aborted_fsm_next_value_ce) begin
		wishbone_bridge_aborted <= wishbone_bridge_aborted_fsm_next_value;
	end
	basesoc_state <= basesoc_next_state;
	if (basesoc_basesoc_dat_w_next_value_ce0) begin
		basesoc_basesoc_dat_w <= basesoc_basesoc_dat_w_next_value0;
	end
	if (basesoc_basesoc_adr_next_value_ce1) begin
		basesoc_basesoc_adr <= basesoc_basesoc_adr_next_value1;
	end
	if (basesoc_basesoc_we_next_value_ce2) begin
		basesoc_basesoc_we <= basesoc_basesoc_we_next_value2;
	end
	case (basesoc_grant)
		1'd0: begin
			if ((~basesoc_request[0])) begin
				if (basesoc_request[1]) begin
					basesoc_grant <= 1'd1;
				end else begin
					if (basesoc_request[2]) begin
						basesoc_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~basesoc_request[1])) begin
				if (basesoc_request[2]) begin
					basesoc_grant <= 2'd2;
				end else begin
					if (basesoc_request[0]) begin
						basesoc_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~basesoc_request[2])) begin
				if (basesoc_request[0]) begin
					basesoc_grant <= 1'd0;
				end else begin
					if (basesoc_request[1]) begin
						basesoc_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	basesoc_slave_sel_r <= basesoc_slave_sel;
	if (basesoc_wait) begin
		if ((~basesoc_done)) begin
			basesoc_count <= (basesoc_count - 1'd1);
		end
	end else begin
		basesoc_count <= 20'd1000000;
	end
	basesoc_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank0_sel) begin
		case (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_reset0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_scratch0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_bus_errors_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank0_reset0_re) begin
		basesoc_reset_storage[1:0] <= basesoc_csr_bankarray_csrbank0_reset0_r;
	end
	basesoc_reset_re <= basesoc_csr_bankarray_csrbank0_reset0_re;
	if (basesoc_csr_bankarray_csrbank0_scratch0_re) begin
		basesoc_scratch_storage[31:0] <= basesoc_csr_bankarray_csrbank0_scratch0_r;
	end
	basesoc_scratch_re <= basesoc_csr_bankarray_csrbank0_scratch0_re;
	basesoc_bus_errors_re <= basesoc_csr_bankarray_csrbank0_bus_errors_re;
	basesoc_csr_bankarray_sel_r <= basesoc_csr_bankarray_sel;
	basesoc_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank1_sel) begin
		case (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_out0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank1_out0_re) begin
		storage[3:0] <= basesoc_csr_bankarray_csrbank1_out0_r;
	end
	re <= basesoc_csr_bankarray_csrbank1_out0_re;
	basesoc_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank2_sel) begin
		case (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_control0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= sdram_command_issue_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank2_dfii_control0_re) begin
		sdram_storage[3:0] <= basesoc_csr_bankarray_csrbank2_dfii_control0_r;
	end
	sdram_re <= basesoc_csr_bankarray_csrbank2_dfii_control0_re;
	if (basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_re) begin
		sdram_command_storage[5:0] <= basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_r;
	end
	sdram_command_re <= basesoc_csr_bankarray_csrbank2_dfii_pi0_command0_re;
	if (basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_re) begin
		sdram_address_storage[12:0] <= basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_r;
	end
	sdram_address_re <= basesoc_csr_bankarray_csrbank2_dfii_pi0_address0_re;
	if (basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_re) begin
		sdram_baddress_storage[1:0] <= basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
	end
	sdram_baddress_re <= basesoc_csr_bankarray_csrbank2_dfii_pi0_baddress0_re;
	if (basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re) begin
		sdram_wrdata_storage[7:0] <= basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
	end
	sdram_wrdata_re <= basesoc_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re;
	sdram_rddata_re <= basesoc_csr_bankarray_csrbank2_dfii_pi0_rddata_re;
	basesoc_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank3_sel) begin
		case (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface3_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank3_bitbang0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface3_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank3_miso_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface3_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank3_bitbang_en0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank3_bitbang0_re) begin
		bitbang_storage[3:0] <= basesoc_csr_bankarray_csrbank3_bitbang0_r;
	end
	bitbang_re <= basesoc_csr_bankarray_csrbank3_bitbang0_re;
	miso_re <= basesoc_csr_bankarray_csrbank3_miso_re;
	if (basesoc_csr_bankarray_csrbank3_bitbang_en0_re) begin
		bitbang_en_storage <= basesoc_csr_bankarray_csrbank3_bitbang_en0_r;
	end
	bitbang_en_re <= basesoc_csr_bankarray_csrbank3_bitbang_en0_re;
	basesoc_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank4_sel) begin
		case (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_load0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_reload0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_en0_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_update_value0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_value_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_ev_status_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_ev_pending_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_ev_enable0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank4_load0_re) begin
		basesoc_timer_load_storage[31:0] <= basesoc_csr_bankarray_csrbank4_load0_r;
	end
	basesoc_timer_load_re <= basesoc_csr_bankarray_csrbank4_load0_re;
	if (basesoc_csr_bankarray_csrbank4_reload0_re) begin
		basesoc_timer_reload_storage[31:0] <= basesoc_csr_bankarray_csrbank4_reload0_r;
	end
	basesoc_timer_reload_re <= basesoc_csr_bankarray_csrbank4_reload0_re;
	if (basesoc_csr_bankarray_csrbank4_en0_re) begin
		basesoc_timer_en_storage <= basesoc_csr_bankarray_csrbank4_en0_r;
	end
	basesoc_timer_en_re <= basesoc_csr_bankarray_csrbank4_en0_re;
	if (basesoc_csr_bankarray_csrbank4_update_value0_re) begin
		basesoc_timer_update_value_storage <= basesoc_csr_bankarray_csrbank4_update_value0_r;
	end
	basesoc_timer_update_value_re <= basesoc_csr_bankarray_csrbank4_update_value0_re;
	basesoc_timer_value_re <= basesoc_csr_bankarray_csrbank4_value_re;
	basesoc_timer_status_re <= basesoc_csr_bankarray_csrbank4_ev_status_re;
	if (basesoc_csr_bankarray_csrbank4_ev_pending_re) begin
		basesoc_timer_pending_r <= basesoc_csr_bankarray_csrbank4_ev_pending_r;
	end
	basesoc_timer_pending_re <= basesoc_csr_bankarray_csrbank4_ev_pending_re;
	if (basesoc_csr_bankarray_csrbank4_ev_enable0_re) begin
		basesoc_timer_enable_storage <= basesoc_csr_bankarray_csrbank4_ev_enable0_r;
	end
	basesoc_timer_enable_re <= basesoc_csr_bankarray_csrbank4_ev_enable0_re;
	basesoc_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank5_sel) begin
		case (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_uart_rxtx_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_txfull_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_rxempty_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_ev_status_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_ev_pending_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_ev_enable0_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_txempty_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_rxfull_w;
			end
		endcase
	end
	basesoc_uart_txfull_re <= basesoc_csr_bankarray_csrbank5_txfull_re;
	basesoc_uart_rxempty_re <= basesoc_csr_bankarray_csrbank5_rxempty_re;
	basesoc_uart_status_re <= basesoc_csr_bankarray_csrbank5_ev_status_re;
	if (basesoc_csr_bankarray_csrbank5_ev_pending_re) begin
		basesoc_uart_pending_r[1:0] <= basesoc_csr_bankarray_csrbank5_ev_pending_r;
	end
	basesoc_uart_pending_re <= basesoc_csr_bankarray_csrbank5_ev_pending_re;
	if (basesoc_csr_bankarray_csrbank5_ev_enable0_re) begin
		basesoc_uart_enable_storage[1:0] <= basesoc_csr_bankarray_csrbank5_ev_enable0_r;
	end
	basesoc_uart_enable_re <= basesoc_csr_bankarray_csrbank5_ev_enable0_re;
	basesoc_uart_txempty_re <= basesoc_csr_bankarray_csrbank5_txempty_re;
	basesoc_uart_rxfull_re <= basesoc_csr_bankarray_csrbank5_rxfull_re;
	if (sys_rst) begin
		basesoc_reset_storage <= 2'd0;
		basesoc_reset_re <= 1'd0;
		basesoc_scratch_storage <= 32'd305419896;
		basesoc_scratch_re <= 1'd0;
		basesoc_bus_errors_re <= 1'd0;
		basesoc_bus_errors <= 32'd0;
		basesoc_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd0;
		basesoc_tx_tick <= 1'd0;
		basesoc_rx_tick <= 1'd0;
		basesoc_rx_rx_d <= 1'd0;
		basesoc_uart_txfull_re <= 1'd0;
		basesoc_uart_rxempty_re <= 1'd0;
		basesoc_uart_tx_pending <= 1'd0;
		basesoc_uart_tx_trigger_d <= 1'd0;
		basesoc_uart_rx_pending <= 1'd0;
		basesoc_uart_rx_trigger_d <= 1'd0;
		basesoc_uart_status_re <= 1'd0;
		basesoc_uart_pending_re <= 1'd0;
		basesoc_uart_pending_r <= 2'd0;
		basesoc_uart_enable_storage <= 2'd0;
		basesoc_uart_enable_re <= 1'd0;
		basesoc_uart_txempty_re <= 1'd0;
		basesoc_uart_rxfull_re <= 1'd0;
		basesoc_uart_tx_fifo_readable <= 1'd0;
		basesoc_uart_tx_fifo_level0 <= 5'd0;
		basesoc_uart_tx_fifo_produce <= 4'd0;
		basesoc_uart_tx_fifo_consume <= 4'd0;
		basesoc_uart_rx_fifo_readable <= 1'd0;
		basesoc_uart_rx_fifo_level0 <= 5'd0;
		basesoc_uart_rx_fifo_produce <= 4'd0;
		basesoc_uart_rx_fifo_consume <= 4'd0;
		basesoc_timer_load_storage <= 32'd0;
		basesoc_timer_load_re <= 1'd0;
		basesoc_timer_reload_storage <= 32'd0;
		basesoc_timer_reload_re <= 1'd0;
		basesoc_timer_en_storage <= 1'd0;
		basesoc_timer_en_re <= 1'd0;
		basesoc_timer_update_value_storage <= 1'd0;
		basesoc_timer_update_value_re <= 1'd0;
		basesoc_timer_value_status <= 32'd0;
		basesoc_timer_value_re <= 1'd0;
		basesoc_timer_zero_pending <= 1'd0;
		basesoc_timer_zero_trigger_d <= 1'd0;
		basesoc_timer_status_re <= 1'd0;
		basesoc_timer_pending_re <= 1'd0;
		basesoc_timer_pending_r <= 1'd0;
		basesoc_timer_enable_storage <= 1'd0;
		basesoc_timer_enable_re <= 1'd0;
		basesoc_timer_value <= 32'd0;
		bus_ack <= 1'd0;
		bitbang_re <= 1'd0;
		miso_re <= 1'd0;
		bitbang_en_storage <= 1'd0;
		bitbang_en_re <= 1'd0;
		cs_n1 <= 1'd1;
		clk1 <= 1'd0;
		sr <= 32'd0;
		i <= 1'd0;
		miso <= 1'd0;
		counter <= 8'd0;
		storage <= 4'd0;
		re <= 1'd0;
		chaser <= 4'd0;
		mode <= 1'd0;
		count <= 23'd6250000;
		dfi_p0_rddata_valid <= 1'd0;
		rddata_en <= 3'd0;
		sdram_storage <= 4'd1;
		sdram_re <= 1'd0;
		sdram_command_storage <= 6'd0;
		sdram_command_re <= 1'd0;
		sdram_address_re <= 1'd0;
		sdram_baddress_re <= 1'd0;
		sdram_wrdata_re <= 1'd0;
		sdram_rddata_status <= 8'd0;
		sdram_rddata_re <= 1'd0;
		sdram_dfi_p0_address <= 13'd0;
		sdram_dfi_p0_bank <= 2'd0;
		sdram_dfi_p0_cas_n <= 1'd1;
		sdram_dfi_p0_cs_n <= 1'd1;
		sdram_dfi_p0_ras_n <= 1'd1;
		sdram_dfi_p0_we_n <= 1'd1;
		sdram_dfi_p0_wrdata_en <= 1'd0;
		sdram_dfi_p0_rddata_en <= 1'd0;
		sdram_cmd_payload_a <= 13'd0;
		sdram_cmd_payload_ba <= 2'd0;
		sdram_cmd_payload_cas <= 1'd0;
		sdram_cmd_payload_ras <= 1'd0;
		sdram_cmd_payload_we <= 1'd0;
		sdram_timer_count1 <= 9'd390;
		sdram_postponer_req_o <= 1'd0;
		sdram_postponer_count <= 1'd0;
		sdram_sequencer_done1 <= 1'd0;
		sdram_sequencer_counter <= 3'd0;
		sdram_sequencer_count <= 1'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine0_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine0_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine0_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine0_cmd_buffer_source_payload_addr <= 23'd0;
		sdram_bankmachine0_row <= 13'd0;
		sdram_bankmachine0_row_opened <= 1'd0;
		sdram_bankmachine0_twtpcon_ready <= 1'd0;
		sdram_bankmachine0_twtpcon_count <= 2'd0;
		sdram_bankmachine0_trccon_ready <= 1'd0;
		sdram_bankmachine0_trccon_count <= 2'd0;
		sdram_bankmachine0_trascon_ready <= 1'd0;
		sdram_bankmachine0_trascon_count <= 2'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine1_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine1_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine1_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine1_cmd_buffer_source_payload_addr <= 23'd0;
		sdram_bankmachine1_row <= 13'd0;
		sdram_bankmachine1_row_opened <= 1'd0;
		sdram_bankmachine1_twtpcon_ready <= 1'd0;
		sdram_bankmachine1_twtpcon_count <= 2'd0;
		sdram_bankmachine1_trccon_ready <= 1'd0;
		sdram_bankmachine1_trccon_count <= 2'd0;
		sdram_bankmachine1_trascon_ready <= 1'd0;
		sdram_bankmachine1_trascon_count <= 2'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine2_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine2_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine2_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine2_cmd_buffer_source_payload_addr <= 23'd0;
		sdram_bankmachine2_row <= 13'd0;
		sdram_bankmachine2_row_opened <= 1'd0;
		sdram_bankmachine2_twtpcon_ready <= 1'd0;
		sdram_bankmachine2_twtpcon_count <= 2'd0;
		sdram_bankmachine2_trccon_ready <= 1'd0;
		sdram_bankmachine2_trccon_count <= 2'd0;
		sdram_bankmachine2_trascon_ready <= 1'd0;
		sdram_bankmachine2_trascon_count <= 2'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_level <= 4'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_produce <= 3'd0;
		sdram_bankmachine3_cmd_buffer_lookahead_consume <= 3'd0;
		sdram_bankmachine3_cmd_buffer_source_valid <= 1'd0;
		sdram_bankmachine3_cmd_buffer_source_payload_we <= 1'd0;
		sdram_bankmachine3_cmd_buffer_source_payload_addr <= 23'd0;
		sdram_bankmachine3_row <= 13'd0;
		sdram_bankmachine3_row_opened <= 1'd0;
		sdram_bankmachine3_twtpcon_ready <= 1'd0;
		sdram_bankmachine3_twtpcon_count <= 2'd0;
		sdram_bankmachine3_trccon_ready <= 1'd0;
		sdram_bankmachine3_trccon_count <= 2'd0;
		sdram_bankmachine3_trascon_ready <= 1'd0;
		sdram_bankmachine3_trascon_count <= 2'd0;
		sdram_choose_cmd_grant <= 2'd0;
		sdram_choose_req_grant <= 2'd0;
		sdram_trrdcon_ready <= 1'd0;
		sdram_trrdcon_count <= 1'd0;
		sdram_tccdcon_ready <= 1'd0;
		sdram_tccdcon_count <= 1'd0;
		sdram_twtrcon_ready <= 1'd0;
		sdram_twtrcon_count <= 3'd0;
		sdram_time0 <= 5'd0;
		sdram_time1 <= 4'd0;
		wishbone_bridge_count <= 4'd0;
		wishbone_bridge_wdata_converter_converter_mux <= 4'd0;
		wishbone_bridge_rdata_converter_converter_source_payload_data <= 128'd0;
		wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count <= 5'd0;
		wishbone_bridge_rdata_converter_converter_demux <= 4'd0;
		wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd0;
		wishbone_bridge_aborted <= 1'd0;
		subfragments_rs232phytx_state <= 1'd0;
		subfragments_rs232phyrx_state <= 1'd0;
		subfragments_refresher_state <= 2'd0;
		subfragments_bankmachine0_state <= 3'd0;
		subfragments_bankmachine1_state <= 3'd0;
		subfragments_bankmachine2_state <= 3'd0;
		subfragments_bankmachine3_state <= 3'd0;
		subfragments_multiplexer_state <= 3'd0;
		subfragments_new_master_wdata_ready <= 1'd0;
		subfragments_new_master_rdata_valid0 <= 1'd0;
		subfragments_new_master_rdata_valid1 <= 1'd0;
		subfragments_new_master_rdata_valid2 <= 1'd0;
		subfragments_new_master_rdata_valid3 <= 1'd0;
		subfragments_state <= 2'd0;
		subfragments_litedramnativeportconverter_state <= 1'd0;
		subfragments_fsm_state <= 2'd0;
		basesoc_basesoc_we <= 1'd0;
		basesoc_grant <= 2'd0;
		basesoc_slave_sel_r <= 4'd0;
		basesoc_count <= 20'd1000000;
		basesoc_csr_bankarray_sel_r <= 1'd0;
		basesoc_state <= 2'd0;
	end
	regs0 <= serial_rx;
	regs1 <= regs0;
end

reg [31:0] mem[0:511];
reg [8:0] memadr;
always @(posedge sys_clk) begin
	if (basesoc_we[0])
		mem[basesoc_adr][7:0] <= basesoc_dat_w[7:0];
	if (basesoc_we[1])
		mem[basesoc_adr][15:8] <= basesoc_dat_w[15:8];
	if (basesoc_we[2])
		mem[basesoc_adr][23:16] <= basesoc_dat_w[23:16];
	if (basesoc_we[3])
		mem[basesoc_adr][31:24] <= basesoc_dat_w[31:24];
	memadr <= basesoc_adr;
end

assign basesoc_dat_r = mem[memadr];

initial begin
	$readmemh("mem.init", mem);
end

reg [7:0] mem_1[0:43];
reg [5:0] memadr_1;
always @(posedge sys_clk) begin
	memadr_1 <= basesoc_csr_bankarray_adr;
end

assign basesoc_csr_bankarray_dat_r = mem_1[memadr_1];

initial begin
	$readmemh("mem_1.init", mem_1);
end

reg [9:0] storage_1[0:15];
reg [9:0] memdat;
reg [9:0] memdat_1;
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_wrport_we)
		storage_1[basesoc_uart_tx_fifo_wrport_adr] <= basesoc_uart_tx_fifo_wrport_dat_w;
	memdat <= storage_1[basesoc_uart_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_rdport_re)
		memdat_1 <= storage_1[basesoc_uart_tx_fifo_rdport_adr];
end

assign basesoc_uart_tx_fifo_wrport_dat_r = memdat;
assign basesoc_uart_tx_fifo_rdport_dat_r = memdat_1;

reg [9:0] storage_2[0:15];
reg [9:0] memdat_2;
reg [9:0] memdat_3;
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_wrport_we)
		storage_2[basesoc_uart_rx_fifo_wrport_adr] <= basesoc_uart_rx_fifo_wrport_dat_w;
	memdat_2 <= storage_2[basesoc_uart_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_rdport_re)
		memdat_3 <= storage_2[basesoc_uart_rx_fifo_rdport_adr];
end

assign basesoc_uart_rx_fifo_wrport_dat_r = memdat_2;
assign basesoc_uart_rx_fifo_rdport_dat_r = memdat_3;

reg [25:0] storage_3[0:7];
reg [25:0] memdat_4;
always @(posedge sys_clk) begin
	if (sdram_bankmachine0_cmd_buffer_lookahead_wrport_we)
		storage_3[sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
	memdat_4 <= storage_3[sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r = memdat_4;
assign sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r = storage_3[sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr];

reg [25:0] storage_4[0:7];
reg [25:0] memdat_5;
always @(posedge sys_clk) begin
	if (sdram_bankmachine1_cmd_buffer_lookahead_wrport_we)
		storage_4[sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
	memdat_5 <= storage_4[sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r = memdat_5;
assign sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r = storage_4[sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr];

reg [25:0] storage_5[0:7];
reg [25:0] memdat_6;
always @(posedge sys_clk) begin
	if (sdram_bankmachine2_cmd_buffer_lookahead_wrport_we)
		storage_5[sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
	memdat_6 <= storage_5[sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r = memdat_6;
assign sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r = storage_5[sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr];

reg [25:0] storage_6[0:7];
reg [25:0] memdat_7;
always @(posedge sys_clk) begin
	if (sdram_bankmachine3_cmd_buffer_lookahead_wrport_we)
		storage_6[sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr] <= sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
	memdat_7 <= storage_6[sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r = memdat_7;
assign sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r = storage_6[sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr];

reg [26:0] tag_mem[0:63];
reg [5:0] memadr_2;
always @(posedge sys_clk) begin
	if (tag_port_we)
		tag_mem[tag_port_adr] <= tag_port_dat_w;
	memadr_2 <= tag_port_adr;
end

assign tag_port_dat_r = tag_mem[memadr_2];

serv_rf_top #(
	.RESET_PC(32'd2147876864)
) serv_rf_top (
	.clk(sys_clk),
	.i_dbus_ack(basesoc_serv_dbus_ack),
	.i_dbus_rdt(basesoc_serv_dbus_dat_r),
	.i_ibus_ack(basesoc_serv_ibus_ack),
	.i_ibus_rdt(basesoc_serv_ibus_dat_r),
	.i_rst((sys_rst | basesoc_serv_reset)),
	.i_timer_irq(1'd0),
	.o_dbus_adr({basesoc_serv_dbus_adr, basesoc_serv1}),
	.o_dbus_cyc(basesoc_serv_dbus_cyc),
	.o_dbus_dat(basesoc_serv_dbus_dat_w),
	.o_dbus_sel(basesoc_serv_dbus_sel),
	.o_dbus_we(basesoc_serv_dbus_we),
	.o_ibus_adr({basesoc_serv_ibus_adr, basesoc_serv0}),
	.o_ibus_cyc(basesoc_serv_ibus_cyc)
);

SB_PLL40_CORE #(
	.DIVF(3'd7),
	.DIVQ(3'd4),
	.DIVR(1'd0),
	.FEEDBACK_PATH("SIMPLE"),
	.FILTER_RANGE(3'd5)
) SB_PLL40_CORE (
	.REFERENCECLK(clkin),
	.RESETB((~reset)),
	.LOCK(locked),
	.PLLOUTGLOBAL(clkout)
);

reg [7:0] data_mem_grain0[0:63];
reg [5:0] memadr_3;
always @(posedge sys_clk) begin
	if (data_port_we[0])
		data_mem_grain0[data_port_adr] <= data_port_dat_w[7:0];
	memadr_3 <= data_port_adr;
end

assign data_port_dat_r[7:0] = data_mem_grain0[memadr_3];

reg [7:0] data_mem_grain1[0:63];
reg [5:0] memadr_4;
always @(posedge sys_clk) begin
	if (data_port_we[1])
		data_mem_grain1[data_port_adr] <= data_port_dat_w[15:8];
	memadr_4 <= data_port_adr;
end

assign data_port_dat_r[15:8] = data_mem_grain1[memadr_4];

reg [7:0] data_mem_grain2[0:63];
reg [5:0] memadr_5;
always @(posedge sys_clk) begin
	if (data_port_we[2])
		data_mem_grain2[data_port_adr] <= data_port_dat_w[23:16];
	memadr_5 <= data_port_adr;
end

assign data_port_dat_r[23:16] = data_mem_grain2[memadr_5];

reg [7:0] data_mem_grain3[0:63];
reg [5:0] memadr_6;
always @(posedge sys_clk) begin
	if (data_port_we[3])
		data_mem_grain3[data_port_adr] <= data_port_dat_w[31:24];
	memadr_6 <= data_port_adr;
end

assign data_port_dat_r[31:24] = data_mem_grain3[memadr_6];

reg [7:0] data_mem_grain4[0:63];
reg [5:0] memadr_7;
always @(posedge sys_clk) begin
	if (data_port_we[4])
		data_mem_grain4[data_port_adr] <= data_port_dat_w[39:32];
	memadr_7 <= data_port_adr;
end

assign data_port_dat_r[39:32] = data_mem_grain4[memadr_7];

reg [7:0] data_mem_grain5[0:63];
reg [5:0] memadr_8;
always @(posedge sys_clk) begin
	if (data_port_we[5])
		data_mem_grain5[data_port_adr] <= data_port_dat_w[47:40];
	memadr_8 <= data_port_adr;
end

assign data_port_dat_r[47:40] = data_mem_grain5[memadr_8];

reg [7:0] data_mem_grain6[0:63];
reg [5:0] memadr_9;
always @(posedge sys_clk) begin
	if (data_port_we[6])
		data_mem_grain6[data_port_adr] <= data_port_dat_w[55:48];
	memadr_9 <= data_port_adr;
end

assign data_port_dat_r[55:48] = data_mem_grain6[memadr_9];

reg [7:0] data_mem_grain7[0:63];
reg [5:0] memadr_10;
always @(posedge sys_clk) begin
	if (data_port_we[7])
		data_mem_grain7[data_port_adr] <= data_port_dat_w[63:56];
	memadr_10 <= data_port_adr;
end

assign data_port_dat_r[63:56] = data_mem_grain7[memadr_10];

reg [7:0] data_mem_grain8[0:63];
reg [5:0] memadr_11;
always @(posedge sys_clk) begin
	if (data_port_we[8])
		data_mem_grain8[data_port_adr] <= data_port_dat_w[71:64];
	memadr_11 <= data_port_adr;
end

assign data_port_dat_r[71:64] = data_mem_grain8[memadr_11];

reg [7:0] data_mem_grain9[0:63];
reg [5:0] memadr_12;
always @(posedge sys_clk) begin
	if (data_port_we[9])
		data_mem_grain9[data_port_adr] <= data_port_dat_w[79:72];
	memadr_12 <= data_port_adr;
end

assign data_port_dat_r[79:72] = data_mem_grain9[memadr_12];

reg [7:0] data_mem_grain10[0:63];
reg [5:0] memadr_13;
always @(posedge sys_clk) begin
	if (data_port_we[10])
		data_mem_grain10[data_port_adr] <= data_port_dat_w[87:80];
	memadr_13 <= data_port_adr;
end

assign data_port_dat_r[87:80] = data_mem_grain10[memadr_13];

reg [7:0] data_mem_grain11[0:63];
reg [5:0] memadr_14;
always @(posedge sys_clk) begin
	if (data_port_we[11])
		data_mem_grain11[data_port_adr] <= data_port_dat_w[95:88];
	memadr_14 <= data_port_adr;
end

assign data_port_dat_r[95:88] = data_mem_grain11[memadr_14];

reg [7:0] data_mem_grain12[0:63];
reg [5:0] memadr_15;
always @(posedge sys_clk) begin
	if (data_port_we[12])
		data_mem_grain12[data_port_adr] <= data_port_dat_w[103:96];
	memadr_15 <= data_port_adr;
end

assign data_port_dat_r[103:96] = data_mem_grain12[memadr_15];

reg [7:0] data_mem_grain13[0:63];
reg [5:0] memadr_16;
always @(posedge sys_clk) begin
	if (data_port_we[13])
		data_mem_grain13[data_port_adr] <= data_port_dat_w[111:104];
	memadr_16 <= data_port_adr;
end

assign data_port_dat_r[111:104] = data_mem_grain13[memadr_16];

reg [7:0] data_mem_grain14[0:63];
reg [5:0] memadr_17;
always @(posedge sys_clk) begin
	if (data_port_we[14])
		data_mem_grain14[data_port_adr] <= data_port_dat_w[119:112];
	memadr_17 <= data_port_adr;
end

assign data_port_dat_r[119:112] = data_mem_grain14[memadr_17];

reg [7:0] data_mem_grain15[0:63];
reg [5:0] memadr_18;
always @(posedge sys_clk) begin
	if (data_port_we[15])
		data_mem_grain15[data_port_adr] <= data_port_dat_w[127:120];
	memadr_18 <= data_port_adr;
end

assign data_port_dat_r[127:120] = data_mem_grain15[memadr_18];

SB_DFFS SB_DFFS(
	.C(sys_clk),
	.D(1'd0),
	.S(((~por_done) | (~locked))),
	.Q(rst1)
);

SB_DFFS SB_DFFS_1(
	.C(sys_clk),
	.D(rst1),
	.S(((~por_done) | (~locked))),
	.Q(sys_rst)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd16)
) SB_IO (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(1'd0),
	.D_OUT_1(1'd1),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_clock)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_1 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_cs_n),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_cs_n)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_2 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[0]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[0])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_3 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[1]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[1])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_4 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[2]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[2])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_5 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[3]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[3])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_6 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[4]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[4])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_7 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[5]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[5])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_8 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[6]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[6])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_9 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[7]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[7])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_10 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[8]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[8])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_11 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[9]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[9])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_12 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[10]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[10])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_13 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[11]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[11])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_14 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_address[12]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_a[12])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_15 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_bank[0]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_ba[0])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_16 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_bank[1]),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_ba[1])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_17 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_ras_n),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_ras_n)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_18 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_cas_n),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_cas_n)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_19 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_we_n),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_we_n)
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_20 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0(dfi_p0_cke),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_cke)
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_21 (
	.D_OUT_0(dfi_p0_wrdata[0]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[0]),
	.D_IN_0(dfi_p0_rddata[0])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_22 (
	.D_OUT_0(dfi_p0_wrdata[1]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[1]),
	.D_IN_0(dfi_p0_rddata[1])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_23 (
	.D_OUT_0(dfi_p0_wrdata[2]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[2]),
	.D_IN_0(dfi_p0_rddata[2])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_24 (
	.D_OUT_0(dfi_p0_wrdata[3]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[3]),
	.D_IN_0(dfi_p0_rddata[3])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_25 (
	.D_OUT_0(dfi_p0_wrdata[4]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[4]),
	.D_IN_0(dfi_p0_rddata[4])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_26 (
	.D_OUT_0(dfi_p0_wrdata[5]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[5]),
	.D_IN_0(dfi_p0_rddata[5])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_27 (
	.D_OUT_0(dfi_p0_wrdata[6]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[6]),
	.D_IN_0(dfi_p0_rddata[6])
);

SB_IO #(
	.PIN_TYPE(6'd52)
) SB_IO_28 (
	.D_OUT_0(dfi_p0_wrdata[7]),
	.INPUT_CLK(sys_clk),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(dfi_p0_wrdata_en),
	.PACKAGE_PIN(sdram_dq[7]),
	.D_IN_0(dfi_p0_rddata[7])
);

SB_IO #(
	.IO_STANDARD("SB_LVCMOS"),
	.PIN_TYPE(6'd20)
) SB_IO_29 (
	.CLOCK_ENABLE(1'd1),
	.D_OUT_0((dfi_p0_wrdata_en & dfi_p0_wrdata_mask)),
	.OUTPUT_CLK(sys_clk),
	.OUTPUT_ENABLE(1'd1),
	.PACKAGE_PIN(sdram_dm)
);

endmodule
